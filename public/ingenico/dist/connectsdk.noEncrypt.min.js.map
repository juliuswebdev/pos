{"version":3,"sources":["browser-loader.js","index.js"],"names":["global","modules","define","module","dependencies","fn","length","i","dependency","console","warn","apply","this","forge","exports","window","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","require","__esModule","json","attributeKey","mask","wildcardMask","replace","LabelTemplateElement","logo","labelTemplate","labelTemplateElementByAttributeKey","_json","_labelTemplate","_labelTemplateElementByAttributeKey","_i","_a","element","labelTemplateElement","push","_parseJSON","key","value","status","mustWriteReason","formattedValue","cursorIndex","MaskedString","MaskingUtil","applyMask","newValue","oldValue","buffer","valuec","split","tempMask","maskc_1","c","_fillBuffer","index","offset","Number","splice","valuec_1","join","cursor","tester","il","substring","getMaxLengthBasedOnMask","newLength","maskc_2","removeMask","valueIndex","inMask","maskc_3","valuec_2","trim","AccountOnFileDisplayHints","Attribute","AccountOnFile","attributes","attributeByKey","displayHints","id","paymentProductId","_attributes","_attributeByKey","attr","attribute","getMaskedValueByAttributeKey","e","undefined","Promise","singleton","_this","isSingleton","pending","complete","type","result","cb","shift","resolve","reject","then","success","failure","promise","setTimeout","reason","instance","getInstance","applePayPaymentProductId","googlePayPaymentProductId","bancontactPaymentProductId","paymentProductsThatAreNotSupportedInThisBrowser","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","document","rppEnabledPage","sdkCreator","collectDeviceInformation","timezoneOffsetUtcMinutes","Date","getTimezoneOffset","locale","language","browserData","javaScriptEnabled","javaEnabled","colorDepth","screen","screenHeight","height","screenWidth","width","base64Encode","data","JSON","stringify","b64","ac","tmpArr","bits","charCodeAt","h2","h3","h4","charAt","enc","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","indexOf","Util","util","ApplePay","isApplePayAvailable","applePayIsAvailable","canMakePayments","initPayment","context","c2SCommunicator","countryCode","acquirerCountry","payment","currencyCode","currency","total","label","displayName","amount","totalAmount","toString","supportedNetworks","networks","merchantCapabilities","applePaySession","ApplePaySession","begin","onvalidatemerchant","event","sessionContext","validationURL","domainName","location","hostname","createPaymentProductSession","merchantSession","completeMerchantValidation","parse","paymentProductSession302SpecificOutput","sessionObject","abort","errorJSON","onpaymentauthorized","status_1","token","status_2","STATUS_SUCCESS","message","completePayment","STATUS_FAILURE","name","gateway","integrationTypes","displayOrder","AuthenticationIndicator","PaymentProduct302SpecificData","PaymentProduct320SpecificData","PaymentProduct863SpecificData","PaymentProductDisplayHints","BasicPaymentProduct","accountsOnFile","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","allowsInstallments","canBeIframed","deviceFingerprintEnabled","isJavaScriptRequired","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","supportsMandates","authenticationIndicator","paymentProduct302SpecificData","paymentProduct320SpecificData","paymentProduct863SpecificData","_accountsOnFile","_accountOnFileById","aof","accountOnFile","copy","BasicPaymentProductGroup","basicPaymentProductGroups","basicPaymentProductGroupById","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","productGroup","_b","_c","_parseJson","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","paymentProduct","products","groups","basicPaymentItems","basicPaymentItemById","_products","_groups","_basicPaymentItems","groupReplacements","groupMatch","group","_d","_e","_f","_g","basicPaymentItem","_h","_j","sessionDetails","apiVersion","clientSessionId","customerId","clientApiUrl","assetUrl","Error","path","payload","isRecurring","isInstallments","accountOnFileId","environment","_context","_paymentsClient","_paymentProductSpecificInputs","_gateway","_networks","_getBaseCardPaymentMethod","parameters","allowedAuthMethods","allowedCardNetworks","_getCardPaymentMethod","assign","tokenizationSpecification","gatewayMerchantId","googlePay","_getGooglePaymentDataRequestForPrefetch","apiVersionMinor","allowedPaymentMethods","transactionInfo","totalPriceStatus","merchantInfo","merchantName","_getGooglePaymentsClient","googlePayEnvironment","google","payments","api","PaymentsClient","error","isGooglePayAvailable","paymentProductSpecificInputs","googlePayData","paymentsClient","promise_1","isReadyToPay","response","paymentDataRequest","googlePaySpecificInputs","prefetchPaymentData","isMerchantIdProvided","merchantId","isAllowedInContext","coBrands","s","parseXML","DOMParser","text","parseFromString","xml","ActiveXObject","async","loadXML","JSONPCallback","run","scriptTag","createElement","methodName","src","url","onerror","body","appendChild","teardown","removeChild","getTime","Net","serialize","object","results","encodeURIComponent","parseJSON","string","ajax","options","request","XMLHttpRequest","protocol","xhr","opts","send","name_1","name_2","defaults","Accept","Content-Type","headers","setRequestHeader","setHeaders","postBody","method","toLowerCase","asynchronous","onreadystatechange","readyState","contentType","getResponseHeader","responseText","test","responseJSON","responseXML","callback","open","chain","set","end","get","post","jsonp","keyId","publicKey","GooglePay","IinDetailsResponse","PublicKeyResponse","c2SCommunicatorConfiguration","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_GooglePay","_ApplePay","_mapType","expirydate","numericstring","integer","expirationDate","_formatUrl","suffix","_formatImageUrl","imageUrl","prefix","_constructUrl","_constructUrlFromContext","includeLocale","urlParameterLocale","_constructCacheKeyFromContext","cacheKeyLocale","_cleanJSON","fields","validatorKey","field","obfuscate","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","_extendLogoUrl","postfix","_isPaymentProductInList","list_1","_resolveGetBasicPaymentProducts","cacheKey","getBasicPaymentProducts","cacheBust","promise_2","metadata","res","json_1","list_2","_getGooglePayData","getBasicPaymentProductGroups","promise_3","getPaymentProduct","errorId","errors","code","propertyName","httpStatusCode","promise_4","bancontact","forceBasicFlow","cleanedJSON_1","getPaymentProductGroup","paymentProductGroupId","promise_5","cleanedJSON","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","promise_6","convertContextToIinDetailsContext","json_2","iinDetailsResponse","status_3","bin","paymentContext","amountOfMoney","getPublicKey","promise_7","publicKeyResponse","getPaymentProductNetworks","promise_8","getPaymentProductDirectory","promise_9","convertAmount","source","target","promise_10","getThirdPartyPaymentStatus","paymentId","getCustomerDetails","values","_constructCacheKeyFromKeyValues","promise_11","promise_12","requestParameters","paymentProductSession302SpecificInput","validationUrl","initApplePayPayment","paymentProductSpecificInput","transformPaymentProductJSON","ValidationRuleBoletoBancarioRequiredness","errorMessageId","fiscalNumberLength","validate","fiscalNumberValue","validateValue","fieldId","fiscalNumber","getUnmaskedValue","getValue","ValidationRuleEmailAddress","RegExp","ValidationRuleExpirationDate","expirationMonth","expirationYear","getMonth","getFullYear","nowWithDay","now","maxExpirationDate","ValidationRuleFixedList","allowedValues","sanitizeValue","toUpperCase","ValidationRuleIban","remainder","block","parseInt","ValidationRuleLength","minLength","maxLength","ValidationRuleLuhn","luhnArr","sum","o","ValidationRuleRange","minValue","maxValue","intValue","isNaN","ValidationRuleRegularExpression","regularExpression","weights","Math","pow","ValidationRuleResidentIdNumber","checkSum","csChar","ValidationRuleTermsAndConditions","validationRules","EmailAddress","TermsAndConditions","ExpirationDate","FixedList","Length","Luhn","Range","RegularExpression","BoletoBancarioRequiredness","Iban","ResidentIdNumber","ValidationRuleFactory","makeValidator","rule","isRequired","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","base64UrlEncode","str","encode64","JOSEEncryptor","encrypt","plainTextValues","encodededProtectedHeader","kid","alg","CEK","random","getBytesSync","CEKKEYLENGTH","encodedEncryptedContentEncryptionKey","publickeyB64Encoded","publickeyB64Decoded","decode64","buffer2","createBuffer","publickeyObject2","asn1","fromDer","pki","publicKeyFromAsn1","macKey","encKey","initializationVector","IVLENGTH","encodededinitializationVector","cipherText","cipher","createCipher","start","iv","update","finish","output","bytes","encodedCipherText","al","lengthInBits","putInt32","calculatedHmac","putBytes","hmacInput","hmac","digest","ValueMappingElement","valueMapping","_valueMapping","mapping","FormElement","Tooltip","placeholderLabel","preferredInputType","alwaysShow","DataRestrictions","PaymentProductFieldDisplayHints","PaymentProductField","_errorCodes","getErrorCodes","isValid","getErrorMessageIds","hasError","maskedValue","validators_1","validator","validators_2","maskingUtil","applyWildcardMask","_super","PaymentProduct","paymentProductFields","paymentProductFieldById","fieldsWarning","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentRequest","clientSessionID","_paymentProduct","_accountOnFile","_clientSessionID","_fieldValues","_tokenize","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","map","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getAccountOnFile","getClientSessionID","fieldValues","this_1","_loop_1","hasValueInAof","publicKeyResponsePromise","paymentRequest","blob","nonce","bytesToHex","paymentValues","collectedDeviceInformation","ownValues_1","getOwnPropertyNames","createEncryptedConsumerInput","joseEncryptor","encryptedString","PaymentProductGroup","BasicPaymentItems","BasicPaymentProductGroups","BasicPaymentProducts","C2SCommunicator","C2SCommunicatorConfiguration","C2SPaymentProductContext","Encryptor","_paymentDetails","_paymentProductGroup","_paymentRequest","_c2sCommunicator","paymentDetails","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","createApplePayPayment","transformPaymentProductGroupJSON","_AccountOnFile","_AccountOnFileDisplayHints","_Attribute","_BasicPaymentItems","_BasicPaymentProduct","_BasicPaymentProductGroup","_BasicPaymentProductGroups","_BasicPaymentProducts","_C2SCommunicator","_C2SCommunicatorConfiguration","_C2SPaymentProductContext","_DataRestrictions","_Encryptor","_FormElement","_IinDetailsResponse","_JOSEEncryptor","_LabelTemplateElement","_MaskedString","_MaskingUtil","_Net","_PaymentProduct","_PaymentProduct302SpecificData","_PaymentProduct320SpecificData","_PaymentProduct863SpecificData","_PaymentProductField","_PaymentProductFieldDisplayHints","_PaymentProductGroup","_PaymentRequest","_Promise","_PublicKeyResponse","_session","_Tooltip","_Util","_ValidationRuleBoletoBancarioRequiredness","_ValidationRuleEmailAddress","_ValidationRuleExpirationDate","_ValidationRuleFactory","_ValidationRuleFixedList","_ValidationRuleIban","_ValidationRuleLength","_ValidationRuleLuhn","_ValidationRuleRange","_ValidationRuleRegularExpression","_ValidationRuleResidentIdNumber","_ValidationRuleTermsAndConditions","_ValueMappingElement","connectsdk","net","Session"],"mappings":"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","file":"connectsdk.noEncrypt.min.js","sourcesContent":["/* eslint-disable */\n(function (global){\n  if (typeof define === \"undefined\") {\n    var modules = {};\n    global.define = function (module, dependencies, fn) {\n      if (dependencies && dependencies.length) {\n        for (var i = 0; i < dependencies.length; i++) {\n          var dependency = modules[dependencies[i]]\n          if (typeof dependency === \"undefined\" && dependencies[i] !== \"require\" && dependencies[i] !== \"exports\") {\n            console.warn(`Could not find dependency '${dependencies[i]}' of module '${module}'`)\n          }\n          dependencies[i] = dependency;\n        }\n      }\n      modules[module] = fn.apply(this, dependencies || []);\n    };\n    global.define(\"node-forge\", [], function () {\n      return global.forge || {};\n    })\n  }\n  if (typeof exports === \"undefined\") {\n    global.define(\"exports\", [], function () {\n      return {};\n    });\n  }\n}(typeof window === \"undefined\" ? this : window));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n///<amd-module name=\"connectsdk.apimodel\"/>\ndefine(\"connectsdk.apimodel\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    exports.__esModule = true;\n});\n///<amd-module name=\"connectsdk.LabelTemplateElement\"/>\ndefine(\"connectsdk.LabelTemplateElement\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var LabelTemplateElement = /** @class */ (function () {\n        function LabelTemplateElement(json) {\n            this.json = json;\n            this.attributeKey = json.attributeKey;\n            this.mask = json.mask;\n            this.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n        }\n        return LabelTemplateElement;\n    }());\n    return LabelTemplateElement;\n});\n///<amd-module name=\"connectsdk.AccountOnFileDisplayHints\"/>\ndefine(\"connectsdk.AccountOnFileDisplayHints\", [\"require\", \"exports\", \"connectsdk.LabelTemplateElement\"], function (require, exports, LabelTemplateElement) {\n    \"use strict\";\n    function _parseJSON(_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\n        if (_json.labelTemplate) {\n            for (var _i = 0, _a = _json.labelTemplate; _i < _a.length; _i++) {\n                var element = _a[_i];\n                var labelTemplateElement = new LabelTemplateElement(element);\n                _labelTemplate.push(labelTemplateElement);\n                _labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\n            }\n        }\n    }\n    var AccountOnFileDisplayHints = /** @class */ (function () {\n        function AccountOnFileDisplayHints(json) {\n            this.json = json;\n            this.logo = json.logo;\n            this.labelTemplate = [];\n            this.labelTemplateElementByAttributeKey = {};\n            _parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\n        }\n        return AccountOnFileDisplayHints;\n    }());\n    return AccountOnFileDisplayHints;\n});\n///<amd-module name=\"connectsdk.Attribute\"/>\ndefine(\"connectsdk.Attribute\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var Attribute = /** @class */ (function () {\n        function Attribute(json) {\n            this.json = json;\n            this.key = json.key;\n            this.value = json.value;\n            this.status = json.status;\n            this.mustWriteReason = json.mustWriteReason;\n        }\n        return Attribute;\n    }());\n    return Attribute;\n});\n///<amd-module name=\"connectsdk.MaskedString\"/>\ndefine(\"connectsdk.MaskedString\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var MaskedString = /** @class */ (function () {\n        function MaskedString(formattedValue, cursorIndex) {\n            this.formattedValue = formattedValue;\n            this.cursorIndex = cursorIndex;\n        }\n        return MaskedString;\n    }());\n    return MaskedString;\n});\n///<amd-module name=\"connectsdk.MaskingUtil\"/>\ndefine(\"connectsdk.MaskingUtil\", [\"require\", \"exports\", \"connectsdk.MaskedString\"], function (require, exports, MaskedString) {\n    \"use strict\";\n    function _fillBuffer(index, offset, buffer, tempMask, valuec) {\n        if (index + offset < valuec.length && index < tempMask.length) {\n            if ((tempMask[index] === \"9\" && Number(valuec[index + offset]) > -1 && valuec[index + offset] !== \" \") || tempMask[index] === \"*\") {\n                buffer.push(valuec[index + offset]);\n            }\n            else {\n                if (valuec[index + offset] === tempMask[index]) {\n                    buffer.push(valuec[index + offset]);\n                }\n                else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\n                    buffer.push(tempMask[index]);\n                    offset--;\n                }\n                else {\n                    // offset++;\n                    valuec.splice(index + offset, 1);\n                    index--;\n                }\n            }\n            _fillBuffer(index + 1, offset, buffer, tempMask, valuec);\n        }\n    }\n    var MaskingUtil = /** @class */ (function () {\n        function MaskingUtil() {\n        }\n        MaskingUtil.prototype.applyMask = function (mask, newValue, oldValue) {\n            var buffer = [];\n            var valuec = newValue.split(\"\");\n            if (mask) {\n                var maskc = mask.split(\"\");\n                var tempMask = [];\n                for (var _i = 0, maskc_1 = maskc; _i < maskc_1.length; _i++) {\n                    var c = maskc_1[_i];\n                    // the char '{' and '}' should ALWAYS be ignored\n                    if (c === \"{\" || c === \"}\") {\n                        // ignore\n                    }\n                    else {\n                        tempMask.push(c);\n                    }\n                }\n                // tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\n                _fillBuffer(0, 0, buffer, tempMask, valuec);\n            }\n            else {\n                // send back as is\n                for (var _a = 0, valuec_1 = valuec; _a < valuec_1.length; _a++) {\n                    var c = valuec_1[_a];\n                    buffer.push(c);\n                }\n            }\n            newValue = buffer.join(\"\");\n            var cursor = 1;\n            // calculate the cursor index\n            if (oldValue) {\n                var tester = oldValue.split(\"\");\n                for (var i = 0, il = buffer.length; i < il; i++) {\n                    if (buffer[i] !== tester[i]) {\n                        cursor = i + 1;\n                        break;\n                    }\n                }\n            }\n            if (newValue.substring(0, newValue.length - 1) === oldValue) {\n                cursor = newValue.length + 1;\n            }\n            return new MaskedString(newValue, cursor);\n        };\n        MaskingUtil.prototype.getMaxLengthBasedOnMask = function (mask) {\n            if (mask) {\n                var maskc = mask.split(\"\");\n                var newLength = -1;\n                for (var _i = 0, maskc_2 = maskc; _i < maskc_2.length; _i++) {\n                    var c = maskc_2[_i];\n                    newLength++;\n                    if (c === \"{\" || c === \"}\") {\n                        newLength--;\n                    }\n                }\n                return newLength;\n            }\n            return -1;\n        };\n        MaskingUtil.prototype.removeMask = function (mask, value) {\n            // remove the mask from the masked input\n            var buffer = [];\n            var valuec = value ? value.split(\"\") : [];\n            if (mask) {\n                var maskc = mask.split(\"\");\n                var valueIndex = -1;\n                var inMask = false;\n                for (var _i = 0, maskc_3 = maskc; _i < maskc_3.length; _i++) {\n                    var c = maskc_3[_i];\n                    valueIndex++;\n                    // the char '{' and '}' should ALWAYS be ignored\n                    if (c === \"{\" || c === \"}\") {\n                        valueIndex--;\n                        if (c === \"{\") {\n                            inMask = true;\n                        }\n                        else if (c === \"}\") {\n                            inMask = false;\n                        }\n                    }\n                    else {\n                        if (inMask && valuec[valueIndex]) {\n                            buffer.push(valuec[valueIndex]);\n                        }\n                    }\n                }\n            }\n            else {\n                // send back as is\n                for (var _a = 0, valuec_2 = valuec; _a < valuec_2.length; _a++) {\n                    var c = valuec_2[_a];\n                    buffer.push(c);\n                }\n            }\n            return buffer.join(\"\").trim();\n        };\n        return MaskingUtil;\n    }());\n    return MaskingUtil;\n});\n///<amd-module name=\"connectsdk.AccountOnFile\"/>\ndefine(\"connectsdk.AccountOnFile\", [\"require\", \"exports\", \"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\", \"connectsdk.MaskingUtil\"], function (require, exports, AccountOnFileDisplayHints, Attribute, MaskingUtil) {\n    \"use strict\";\n    function _parseJSON(_json, _attributes, _attributeByKey) {\n        if (_json.attributes) {\n            for (var _i = 0, _a = _json.attributes; _i < _a.length; _i++) {\n                var attr = _a[_i];\n                var attribute = new Attribute(attr);\n                _attributes.push(attribute);\n                _attributeByKey[attribute.key] = attribute;\n            }\n        }\n    }\n    var AccountOnFile = /** @class */ (function () {\n        function AccountOnFile(json) {\n            this.json = json;\n            this.attributes = [];\n            this.attributeByKey = {};\n            this.displayHints = new AccountOnFileDisplayHints(json.displayHints);\n            this.id = json.id;\n            this.paymentProductId = json.paymentProductId;\n            _parseJSON(json, this.attributes, this.attributeByKey);\n        }\n        AccountOnFile.prototype.getMaskedValueByAttributeKey = function (attributeKey) {\n            var value = this.attributeByKey[attributeKey].value;\n            var wildcardMask;\n            try {\n                wildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\n            }\n            catch (e) {\n                /* ignore */\n            }\n            if (value !== undefined && wildcardMask !== undefined) {\n                var maskingUtil = new MaskingUtil();\n                return maskingUtil.applyMask(wildcardMask, value);\n            }\n            return undefined;\n        };\n        return AccountOnFile;\n    }());\n    return AccountOnFile;\n});\n///<amd-module name=\"connectsdk.promise\"/>\ndefine(\"connectsdk.promise\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    /**\n     * The Promise class.\n     */\n    var Promise = /** @class */ (function () {\n        function Promise(singleton) {\n            var _this = this;\n            this.isSingleton = singleton || false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pending = [];\n            /**\n             * Runs through each pending 'thenable' based on type (resolve, reject).\n             *\n             * @param {String} type The thenable type\n             * @param {Object} result A value\n             */\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            function complete(type, result) {\n                while (pending[0]) {\n                    var cb = pending.shift()[type];\n                    if (cb) {\n                        cb(result);\n                    }\n                }\n            }\n            this.resolve = function (result) {\n                complete(\"resolve\", result);\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.reject = function (result) {\n                complete(\"reject\", result);\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.then = function (success, failure) {\n                pending.push({\n                    resolve: success,\n                    reject: failure\n                });\n                return _this;\n            };\n        }\n        Promise.resolve = function (value) {\n            var promise = new Promise();\n            setTimeout(function () { return promise.resolve(value); }, 0);\n            return promise;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Promise.reject = function (reason) {\n            var promise = new Promise();\n            setTimeout(function () { return promise.reject(reason); }, 0);\n            return promise;\n        };\n        return Promise;\n    }());\n    return Promise;\n});\n///<amd-module name=\"connectsdk.types\"/>\ndefine(\"connectsdk.types\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    exports.__esModule = true;\n});\n///<amd-module name=\"connectsdk.Util\"/>\ndefine(\"connectsdk.Util\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var instance;\n    function createInstance() {\n        return {\n            applePayPaymentProductId: 302,\n            googlePayPaymentProductId: 320,\n            bancontactPaymentProductId: 3012,\n            paymentProductsThatAreNotSupportedInThisBrowser: [],\n            getMetadata: function () {\n                return {\n                    screenSize: window.innerWidth + \"x\" + window.innerHeight,\n                    platformIdentifier: window.navigator.userAgent,\n                    sdkIdentifier: (document[\"GC\"] && document[\"GC\"].rppEnabledPage ? \"rpp-\" : \"\") + \"JavaScriptClientSDK/v4.1.0\",\n                    sdkCreator: \"Ingenico\"\n                };\n            },\n            collectDeviceInformation: function () {\n                return {\n                    timezoneOffsetUtcMinutes: new Date().getTimezoneOffset(),\n                    locale: navigator.language,\n                    browserData: {\n                        javaScriptEnabled: true,\n                        javaEnabled: navigator.javaEnabled(),\n                        colorDepth: screen.colorDepth,\n                        screenHeight: screen.height,\n                        screenWidth: screen.width,\n                        innerHeight: window.innerHeight,\n                        innerWidth: window.innerWidth\n                    }\n                };\n            },\n            base64Encode: function (data) {\n                if (typeof data === \"object\") {\n                    try {\n                        data = JSON.stringify(data);\n                    }\n                    catch (e) {\n                        throw \"data must be either a String or a JSON object\";\n                    }\n                }\n                if (!data) {\n                    return data;\n                }\n                var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n                var i = 0;\n                var ac = 0;\n                var tmpArr = [];\n                do {\n                    // pack three octets into four hexets\n                    var o1 = data.charCodeAt(i++);\n                    var o2 = data.charCodeAt(i++);\n                    var o3 = data.charCodeAt(i++);\n                    var bits = (o1 << 16) | (o2 << 8) | o3;\n                    var h1 = (bits >> 18) & 0x3f;\n                    var h2 = (bits >> 12) & 0x3f;\n                    var h3 = (bits >> 6) & 0x3f;\n                    var h4 = bits & 0x3f;\n                    // use hexets to index into b64, and append result to encoded string\n                    tmpArr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n                } while (i < data.length);\n                var enc = tmpArr.join(\"\");\n                var r = data.length % 3;\n                return (r ? enc.slice(0, r - 3) : enc) + \"===\".slice(r || 3);\n            },\n            filterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\n                for (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\n                    var product = json.paymentProducts[i];\n                    if (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\n                        json.paymentProducts.splice(i, 1);\n                    }\n                }\n            }\n        };\n    }\n    return {\n        getInstance: function () {\n            if (!instance) {\n                instance = createInstance();\n            }\n            return instance;\n        }\n    };\n});\n///<amd-module name=\"connectsdk.ApplePay\"/>\ndefine(\"connectsdk.ApplePay\", [\"require\", \"exports\", \"connectsdk.promise\", \"connectsdk.Util\"], function (require, exports, Promise, Util) {\n    \"use strict\";\n    var util = Util.getInstance();\n    var ApplePay = /** @class */ (function () {\n        function ApplePay() {\n        }\n        ApplePay.prototype.isApplePayAvailable = function () {\n            var applePayIsAvailable = window[\"ApplePaySession\"] && window[\"ApplePaySession\"].canMakePayments();\n            if (!applePayIsAvailable) {\n                util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.applePayPaymentProductId);\n            }\n            return !!applePayIsAvailable;\n        };\n        ApplePay.prototype.initPayment = function (context, c2SCommunicator) {\n            var promise = new Promise();\n            var countryCode = context.acquirerCountry ? context.acquirerCountry : context.countryCode;\n            var payment = {\n                currencyCode: context.currency,\n                countryCode: countryCode,\n                total: {\n                    label: context.displayName,\n                    amount: (context.totalAmount / 100).toString()\n                },\n                supportedNetworks: context.networks,\n                merchantCapabilities: [\"supports3DS\"]\n            };\n            var applePaySession = new ApplePaySession(1, payment);\n            applePaySession.begin();\n            applePaySession.onvalidatemerchant = function (event) {\n                var sessionContext = {\n                    displayName: context.displayName,\n                    validationURL: event.validationURL,\n                    domainName: window.location.hostname\n                };\n                c2SCommunicator.createPaymentProductSession(302, sessionContext).then(function (merchantSession) {\n                    try {\n                        applePaySession.completeMerchantValidation(JSON.parse(merchantSession.paymentProductSession302SpecificOutput.sessionObject));\n                    }\n                    catch (e) {\n                        promise.reject(e);\n                        applePaySession.abort();\n                    }\n                }, function (errorJSON) {\n                    promise.reject(errorJSON);\n                    applePaySession.abort();\n                });\n            };\n            applePaySession.onpaymentauthorized = function (event) {\n                if (!event.payment.token) {\n                    var status_1 = ApplePaySession.STATUS_FAILURE;\n                    promise.reject({ message: \"Error payment authorization\" });\n                    applePaySession.completePayment(status_1);\n                }\n                else {\n                    var status_2 = ApplePaySession.STATUS_SUCCESS;\n                    promise.resolve({ message: \"Payment authorized\", data: event.payment.token });\n                    applePaySession.completePayment(status_2);\n                }\n            };\n            return promise;\n        };\n        return ApplePay;\n    }());\n    return ApplePay;\n});\n///<amd-module name=\"connectsdk.AuthenticationIndicator\"/>\ndefine(\"connectsdk.AuthenticationIndicator\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var AuthenticationIndicator = /** @class */ (function () {\n        function AuthenticationIndicator(json) {\n            this.json = json;\n            this.name = json.name;\n            this.value = json.value;\n        }\n        return AuthenticationIndicator;\n    }());\n    return AuthenticationIndicator;\n});\n///<amd-module name=\"connectsdk.PaymentProduct302SpecificData\"/>\ndefine(\"connectsdk.PaymentProduct302SpecificData\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var PaymentProduct302SpecificData = /** @class */ (function () {\n        function PaymentProduct302SpecificData(json) {\n            this.json = json;\n            this.networks = json.networks;\n        }\n        return PaymentProduct302SpecificData;\n    }());\n    return PaymentProduct302SpecificData;\n});\n///<amd-module name=\"connectsdk.PaymentProduct320SpecificData\"/>\ndefine(\"connectsdk.PaymentProduct320SpecificData\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var PaymentProduct320SpecificData = /** @class */ (function () {\n        function PaymentProduct320SpecificData(json) {\n            this.json = json;\n            this.gateway = json.gateway;\n            this.networks = json.networks;\n        }\n        return PaymentProduct320SpecificData;\n    }());\n    return PaymentProduct320SpecificData;\n});\n///<amd-module name=\"connectsdk.PaymentProduct863SpecificData\"/>\ndefine(\"connectsdk.PaymentProduct863SpecificData\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var PaymentProduct863SpecificData = /** @class */ (function () {\n        function PaymentProduct863SpecificData(json) {\n            this.json = json;\n            this.integrationTypes = json.integrationTypes;\n        }\n        return PaymentProduct863SpecificData;\n    }());\n    return PaymentProduct863SpecificData;\n});\n///<amd-module name=\"connectsdk.PaymentProductDisplayHints\"/>\ndefine(\"connectsdk.PaymentProductDisplayHints\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var PaymentProductDisplayHints = /** @class */ (function () {\n        function PaymentProductDisplayHints(json) {\n            this.json = json;\n            this.displayOrder = json.displayOrder;\n            this.label = json.label;\n            this.logo = json.logo;\n        }\n        return PaymentProductDisplayHints;\n    }());\n    return PaymentProductDisplayHints;\n});\n///<amd-module name=\"connectsdk.BasicPaymentProduct\"/>\ndefine(\"connectsdk.BasicPaymentProduct\", [\"require\", \"exports\", \"connectsdk.AccountOnFile\", \"connectsdk.AuthenticationIndicator\", \"connectsdk.PaymentProduct302SpecificData\", \"connectsdk.PaymentProduct320SpecificData\", \"connectsdk.PaymentProduct863SpecificData\", \"connectsdk.PaymentProductDisplayHints\"], function (require, exports, AccountOnFile, AuthenticationIndicator, PaymentProduct302SpecificData, PaymentProduct320SpecificData, PaymentProduct863SpecificData, PaymentProductDisplayHints) {\n    \"use strict\";\n    function _parseJSON(_json, _accountsOnFile, _accountOnFileById) {\n        if (_json.accountsOnFile) {\n            for (var _i = 0, _a = _json.accountsOnFile; _i < _a.length; _i++) {\n                var aof = _a[_i];\n                var accountOnFile = new AccountOnFile(aof);\n                _accountsOnFile.push(accountOnFile);\n                _accountOnFileById[accountOnFile.id] = accountOnFile;\n            }\n        }\n    }\n    var BasicPaymentProduct = /** @class */ (function () {\n        function BasicPaymentProduct(json) {\n            this.json = json;\n            this.type = \"product\";\n            this.json.type = \"product\";\n            this.accountsOnFile = [];\n            this.accountOnFileById = {};\n            this.allowsRecurring = json.allowsRecurring;\n            this.allowsTokenization = json.allowsTokenization;\n            this.autoTokenized = json.autoTokenized;\n            this.allowsInstallments = json.allowsInstallments;\n            this.acquirerCountry = json.acquirerCountry;\n            this.canBeIframed = json.canBeIframed;\n            this.deviceFingerprintEnabled = json.deviceFingerprintEnabled;\n            this.displayHints = new PaymentProductDisplayHints(json.displayHints);\n            this.id = json.id;\n            this.isJavaScriptRequired = json.isJavaScriptRequired;\n            this.maxAmount = json.maxAmount;\n            this.minAmount = json.minAmount;\n            this.paymentMethod = json.paymentMethod;\n            this.mobileIntegrationLevel = json.mobileIntegrationLevel;\n            this.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\n            this.paymentProductGroup = json.paymentProductGroup;\n            this.supportsMandates = json.supportsMandates;\n            if (json.authenticationIndicator) {\n                this.authenticationIndicator = new AuthenticationIndicator(json.authenticationIndicator);\n            }\n            if (json.paymentProduct302SpecificData) {\n                this.paymentProduct302SpecificData = new PaymentProduct302SpecificData(json.paymentProduct302SpecificData);\n            }\n            if (json.paymentProduct320SpecificData) {\n                this.paymentProduct320SpecificData = new PaymentProduct320SpecificData(json.paymentProduct320SpecificData);\n            }\n            if (json.paymentProduct863SpecificData) {\n                this.paymentProduct863SpecificData = new PaymentProduct863SpecificData(json.paymentProduct863SpecificData);\n            }\n            _parseJSON(json, this.accountsOnFile, this.accountOnFileById);\n        }\n        BasicPaymentProduct.prototype.copy = function () {\n            var json = JSON.parse(JSON.stringify(this.json));\n            return new BasicPaymentProduct(json);\n        };\n        return BasicPaymentProduct;\n    }());\n    return BasicPaymentProduct;\n});\n///<amd-module name=\"connectsdk.BasicPaymentProductGroup\"/>\ndefine(\"connectsdk.BasicPaymentProductGroup\", [\"require\", \"exports\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function (require, exports, AccountOnFile, PaymentProductDisplayHints) {\n    \"use strict\";\n    function _parseJSON(_json, _accountsOnFile, _accountOnFileById) {\n        if (_json.accountsOnFile) {\n            for (var _i = 0, _a = _json.accountsOnFile; _i < _a.length; _i++) {\n                var aof = _a[_i];\n                var accountOnFile = new AccountOnFile(aof);\n                _accountsOnFile.push(accountOnFile);\n                _accountOnFileById[accountOnFile.id] = accountOnFile;\n            }\n        }\n    }\n    var BasicPaymentProductGroup = /** @class */ (function () {\n        function BasicPaymentProductGroup(json) {\n            this.json = json;\n            this.type = \"group\";\n            this.json.type = \"group\";\n            this.id = json.id;\n            //this.acquirerCountry = json.acquirerCountry;\n            this.allowsInstallments = json.allowsInstallments;\n            this.displayHints = new PaymentProductDisplayHints(json.displayHints);\n            this.accountsOnFile = [];\n            this.accountOnFileById = {};\n            _parseJSON(json, this.accountsOnFile, this.accountOnFileById);\n        }\n        BasicPaymentProductGroup.prototype.copy = function () {\n            var json = JSON.parse(JSON.stringify(this.json));\n            return new BasicPaymentProductGroup(json);\n        };\n        return BasicPaymentProductGroup;\n    }());\n    return BasicPaymentProductGroup;\n});\n///<amd-module name=\"connectsdk.BasicPaymentItem\"/>\ndefine(\"connectsdk.BasicPaymentItem\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    exports.__esModule = true;\n});\n///<amd-module name=\"connectsdk.BasicPaymentProductGroups\"/>\ndefine(\"connectsdk.BasicPaymentProductGroups\", [\"require\", \"exports\", \"connectsdk.BasicPaymentProductGroup\"], function (require, exports, BasicPaymentProductGroup) {\n    \"use strict\";\n    function _parseJson(_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\n        if (_json.paymentProductGroups) {\n            for (var _i = 0, _a = _json.paymentProductGroups; _i < _a.length; _i++) {\n                var productGroup = _a[_i];\n                var paymentProductGroup = new BasicPaymentProductGroup(productGroup);\n                _paymentProductGroups.push(paymentProductGroup);\n                _paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\n                if (paymentProductGroup.accountsOnFile) {\n                    for (var _b = 0, _c = paymentProductGroup.accountsOnFile; _b < _c.length; _b++) {\n                        var aof = _c[_b];\n                        _accountsOnFile.push(aof);\n                        _accountOnFileById[aof.id] = aof;\n                    }\n                }\n            }\n        }\n    }\n    var BasicPaymentProductGroups = /** @class */ (function () {\n        function BasicPaymentProductGroups(json) {\n            this.json = json;\n            this.basicPaymentProductGroups = [];\n            this.basicPaymentProductGroupById = {};\n            this.accountsOnFile = [];\n            this.accountOnFileById = {};\n            _parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\n        }\n        return BasicPaymentProductGroups;\n    }());\n    return BasicPaymentProductGroups;\n});\n///<amd-module name=\"connectsdk.BasicPaymentProducts\"/>\ndefine(\"connectsdk.BasicPaymentProducts\", [\"require\", \"exports\", \"connectsdk.BasicPaymentProduct\"], function (require, exports, BasicPaymentProduct) {\n    \"use strict\";\n    function _parseJson(_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\n        if (_json.paymentProducts) {\n            for (var _i = 0, _a = _json.paymentProducts; _i < _a.length; _i++) {\n                var product = _a[_i];\n                var paymentProduct = new BasicPaymentProduct(product);\n                _paymentProducts.push(paymentProduct);\n                _paymentProductById[paymentProduct.id] = paymentProduct;\n                if (paymentProduct.accountsOnFile) {\n                    for (var _b = 0, _c = paymentProduct.accountsOnFile; _b < _c.length; _b++) {\n                        var aof = _c[_b];\n                        _accountsOnFile.push(aof);\n                        _accountOnFileById[aof.id] = aof;\n                        _paymentProductByAccountOnFileId[aof.id] = paymentProduct;\n                    }\n                }\n            }\n        }\n    }\n    var BasicPaymentProducts = /** @class */ (function () {\n        function BasicPaymentProducts(json) {\n            this.json = json;\n            this.basicPaymentProducts = [];\n            this.basicPaymentProductById = {};\n            this.basicPaymentProductByAccountOnFileId = {};\n            this.accountsOnFile = [];\n            this.accountOnFileById = {};\n            _parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\n        }\n        return BasicPaymentProducts;\n    }());\n    return BasicPaymentProducts;\n});\n///<amd-module name=\"connectsdk.BasicPaymentItems\"/>\ndefine(\"connectsdk.BasicPaymentItems\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    function _parseJson(_products, _groups, _basicPaymentItems) {\n        if (_groups) {\n            var groupReplacements = {};\n            for (var _i = 0, _a = _products.basicPaymentProducts; _i < _a.length; _i++) {\n                var product = _a[_i];\n                // becomes true if the product has been matched with a group.\n                var groupMatch = false;\n                for (var _b = 0, _c = _groups.basicPaymentProductGroups; _b < _c.length; _b++) {\n                    var group = _c[_b];\n                    if (product.paymentProductGroup === group.id) {\n                        // Product has been matched to a group\n                        groupMatch = true;\n                        if (!groupReplacements[group.id]) {\n                            // Group has not been added as replacement yet\n                            _basicPaymentItems.basicPaymentItems.push(group.copy());\n                            groupReplacements[group.id] = true;\n                        }\n                        // Products can not match with more then one group\n                        break;\n                    }\n                }\n                if (!groupMatch) {\n                    _basicPaymentItems.basicPaymentItems.push(product.copy());\n                }\n            }\n        }\n        else {\n            for (var _d = 0, _e = _products.basicPaymentProducts; _d < _e.length; _d++) {\n                var product = _e[_d];\n                _basicPaymentItems.basicPaymentItems.push(product.copy());\n            }\n        }\n        for (var _f = 0, _g = _basicPaymentItems.basicPaymentItems; _f < _g.length; _f++) {\n            var basicPaymentItem = _g[_f];\n            _basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\n            if (basicPaymentItem.accountsOnFile) {\n                for (var _h = 0, _j = basicPaymentItem.accountsOnFile; _h < _j.length; _h++) {\n                    var aof = _j[_h];\n                    _basicPaymentItems.accountsOnFile.push(aof);\n                    _basicPaymentItems.accountOnFileById[aof.id] = aof;\n                }\n            }\n        }\n    }\n    var BasicPaymentItems = /** @class */ (function () {\n        function BasicPaymentItems(products, groups) {\n            this.basicPaymentItems = [];\n            this.basicPaymentItemById = {};\n            this.accountsOnFile = [];\n            this.accountOnFileById = {};\n            _parseJson(products, groups, this);\n        }\n        return BasicPaymentItems;\n    }());\n    return BasicPaymentItems;\n});\n///<amd-module name=\"connectsdk.C2SCommunicatorConfiguration\"/>\ndefine(\"connectsdk.C2SCommunicatorConfiguration\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var C2SCommunicatorConfiguration = /** @class */ (function () {\n        function C2SCommunicatorConfiguration(sessionDetails, apiVersion) {\n            this.clientSessionId = sessionDetails.clientSessionId;\n            this.customerId = sessionDetails.customerId;\n            this.clientApiUrl = sessionDetails.clientApiUrl;\n            this.assetUrl = sessionDetails.assetUrl;\n            if (!this.clientApiUrl) {\n                throw new Error(\"This version of the connectSDK requires an clientApiUrl, which you did not provide.\");\n            }\n            if (!this.assetUrl) {\n                throw new Error(\"This version of the connectSDK requires an assetUrl, which you did not provide.\");\n            }\n            // now that the clientApiUrl is set check when if the api version is set in the URL, its the correct version break if not.\n            if (this.clientApiUrl.indexOf(\"//\") === -1) {\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\n            }\n            var tester = this.clientApiUrl.split(\"/\"); // [0] = (http(s): || \"\") , [1] = \"\", [2] = \"host:port\", [3+] = path\n            if (tester[0] !== \"\" && tester[0].indexOf(\"http\") !== 0) {\n                throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\n            }\n            // if you cannot provide an URL that starts with (http(s)::)// and want an error: please provide a PR :)\n            var path = tester.splice(3).join(\"/\"); // the path (if no path; path = \"\").\n            if (!path) {\n                this.clientApiUrl += \"/\" + apiVersion;\n            }\n            else if (path === \"client\") {\n                this.clientApiUrl += \"/\" + apiVersion.split(\"/\")[1];\n            }\n            else if (path.indexOf(apiVersion) !== 0 || path.length !== apiVersion.length) {\n                throw new Error(\"This version of the connectSDK is only compatible with \" + apiVersion + \", you supplied: '\" + path + \"'\");\n            }\n        }\n        return C2SCommunicatorConfiguration;\n    }());\n    return C2SCommunicatorConfiguration;\n});\n///<amd-module name=\"connectsdk.C2SPaymentProductContext\"/>\ndefine(\"connectsdk.C2SPaymentProductContext\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var C2SPaymentProductContext = /** @class */ (function () {\n        function C2SPaymentProductContext(payload) {\n            this.totalAmount = payload.totalAmount;\n            this.countryCode = payload.countryCode;\n            this.isRecurring = payload.isRecurring;\n            this.currency = payload.currency;\n            if (typeof payload.locale !== \"undefined\") {\n                this.locale = payload.locale;\n            }\n            this.isInstallments = payload.isInstallments || false;\n            if (typeof payload.accountOnFileId !== \"undefined\") {\n                this.accountOnFileId = payload.accountOnFileId;\n            }\n            if (typeof payload.environment !== \"undefined\") {\n                this.environment = payload.environment;\n            }\n        }\n        return C2SPaymentProductContext;\n    }());\n    return C2SPaymentProductContext;\n});\n///<amd-module name=\"connectsdk.GooglePay\"/>\ndefine(\"connectsdk.GooglePay\", [\"require\", \"exports\", \"connectsdk.promise\", \"connectsdk.Util\"], function (require, exports, Promise, Util) {\n    \"use strict\";\n    var util = Util.getInstance();\n    var GooglePay = /** @class */ (function () {\n        function GooglePay() {\n            var _paymentProductSpecificInputs = {};\n            var _context;\n            var _gateway = \"\";\n            var _networks = [];\n            var _paymentsClient;\n            // Only base is needed to trigger isReadyToPay\n            function _getBaseCardPaymentMethod() {\n                return {\n                    type: \"CARD\",\n                    parameters: {\n                        allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n                        allowedCardNetworks: _networks\n                    }\n                };\n            }\n            function _getTokenizationSpecification() {\n                return {\n                    type: \"PAYMENT_GATEWAY\",\n                    parameters: {\n                        gateway: _gateway,\n                        gatewayMerchantId: _paymentProductSpecificInputs.googlePay.gatewayMerchantId\n                    }\n                };\n            }\n            // To prefetch payment data we need base + tokenizationSpecification\n            function _getCardPaymentMethod() {\n                return Object.assign({}, _getBaseCardPaymentMethod(), {\n                    tokenizationSpecification: _getTokenizationSpecification()\n                });\n            }\n            function _getTransactionInfo() {\n                return {\n                    totalPriceStatus: \"NOT_CURRENTLY_KNOWN\",\n                    currencyCode: _context === null || _context === void 0 ? void 0 : _context.currency\n                };\n                // Note that the cast is necessary, because the TypeScript definition makes totalPrice required even though it isn't\n            }\n            function _getMerchantInfo() {\n                return {\n                    merchantName: _paymentProductSpecificInputs.googlePay.merchantName\n                };\n                // Note that the cast is necessary, because the TypeScript definition makes merchantId required even though it isn't\n            }\n            function _getGooglePaymentDataRequest() {\n                return {\n                    apiVersion: 2,\n                    apiVersionMinor: 0,\n                    allowedPaymentMethods: [_getBaseCardPaymentMethod()]\n                };\n            }\n            function _getGooglePaymentDataRequestForPrefetch() {\n                // transactionInfo must be set but does not affect cache\n                return {\n                    apiVersion: 2,\n                    apiVersionMinor: 0,\n                    allowedPaymentMethods: [_getCardPaymentMethod()],\n                    transactionInfo: _getTransactionInfo(),\n                    merchantInfo: _getMerchantInfo()\n                };\n            }\n            function _getGooglePaymentsClient() {\n                if (typeof _paymentsClient === \"undefined\") {\n                    var googlePayEnvironment = \"TEST\";\n                    if (_context.environment === \"PROD\") {\n                        googlePayEnvironment = \"PRODUCTION\";\n                    }\n                    if (window.google) {\n                        _paymentsClient = new google.payments.api.PaymentsClient({ environment: googlePayEnvironment });\n                    }\n                    else {\n                        console.error(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\n                    }\n                }\n                return _paymentsClient;\n            }\n            /**\n             * Prefetch payment data to improve performance\n             *\n             * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}\n             */\n            function _prefetchGooglePaymentData() {\n                var paymentDataRequest = _getGooglePaymentDataRequestForPrefetch();\n                var paymentsClient = _getGooglePaymentsClient();\n                var googlePaySpecificInputs = _paymentProductSpecificInputs.googlePay;\n                // Prefetching is only effective when all information is provided\n                if (googlePaySpecificInputs.gatewayMerchantId && googlePaySpecificInputs.merchantName) {\n                    paymentsClient.prefetchPaymentData(paymentDataRequest);\n                }\n                else {\n                    console.warn(\"Prefetching payment data was not triggered because of missing information. \" +\n                        \"gatewayMerchantId: \" +\n                        googlePaySpecificInputs.gatewayMerchantId +\n                        \", merchantName: \" +\n                        googlePaySpecificInputs.merchantName);\n                }\n            }\n            this.isGooglePayAvailable = function (context, paymentProductSpecificInputs, googlePayData) {\n                _context = context;\n                _paymentProductSpecificInputs = paymentProductSpecificInputs;\n                _gateway = googlePayData.gateway;\n                _networks = googlePayData.networks;\n                if (_networks && _networks.length > 0) {\n                    var paymentsClient = _getGooglePaymentsClient();\n                    if (!paymentsClient) {\n                        util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n                        return Promise.reject(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\n                    }\n                    else {\n                        var promise_1 = new Promise();\n                        paymentsClient\n                            .isReadyToPay(_getGooglePaymentDataRequest())\n                            .then(function (response) {\n                            promise_1.resolve(response.result);\n                            _prefetchGooglePaymentData();\n                        })[\"catch\"](function (e) {\n                            util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n                            promise_1.reject(e);\n                        });\n                        return promise_1;\n                    }\n                }\n                else {\n                    util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n                    return Promise.reject(\"There are no product networks available\");\n                }\n            };\n            this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\n                if (paymentProductSpecificInputs && paymentProductSpecificInputs.googlePay && paymentProductSpecificInputs.googlePay.merchantId) {\n                    return !!paymentProductSpecificInputs.googlePay.merchantId;\n                }\n                else {\n                    util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n                    return false;\n                }\n            };\n        }\n        return GooglePay;\n    }());\n    return GooglePay;\n});\n///<amd-module name=\"connectsdk.IinDetailsResponse\"/>\ndefine(\"connectsdk.IinDetailsResponse\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var IinDetailsResponse = /** @class */ (function () {\n        function IinDetailsResponse(status, json) {\n            this.status = status;\n            this.json = json;\n            if (json) {\n                // If the JSON is actually an ErrorResponseJSON, these properties don't exist and the fields will remain undefined\n                json = json;\n                this.countryCode = json.countryCode;\n                this.paymentProductId = json.paymentProductId;\n                this.isAllowedInContext = json.isAllowedInContext;\n                this.coBrands = json.coBrands;\n            }\n        }\n        return IinDetailsResponse;\n    }());\n    return IinDetailsResponse;\n});\n///<amd-module name=\"connectsdk.net\"/>\ndefine(\"connectsdk.net\", [\"require\", \"exports\", \"connectsdk.promise\"], function (require, exports, Promise) {\n    \"use strict\";\n    /**\n     * Removes leading and trailing whitespace.\n     */\n    var trim = typeof \"\".trim === \"function\" ? function (s) { return s.trim(); } : function (s) { return s.replace(/^\\s\\s*/, \"\").replace(/\\s\\s*$/, \"\"); };\n    var parseXML = window.DOMParser\n        ? function (text) { return new DOMParser().parseFromString(text, \"text/xml\"); }\n        : function (text) {\n            var xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n            xml.async = \"false\";\n            xml.loadXML(text);\n            return xml;\n        };\n    var JSONPCallback = /** @class */ (function () {\n        function JSONPCallback(url, success, failure) {\n            var _this = this;\n            this.url = url;\n            this.success = success;\n            this.failure = failure;\n            this.methodName = \"__connectsdk_jsonp_\" + new Date().getTime();\n            var runCallback = function (json) {\n                _this.success(json);\n                _this.teardown();\n            };\n            window[this.methodName] = runCallback;\n        }\n        JSONPCallback.prototype.run = function () {\n            var _this = this;\n            this.scriptTag = document.createElement(\"script\");\n            this.scriptTag.id = this.methodName;\n            this.scriptTag.src = this.url.replace(\"{callback}\", this.methodName);\n            this.scriptTag.onerror = function () { return _this.failure(); };\n            document.body.appendChild(this.scriptTag);\n        };\n        JSONPCallback.prototype.teardown = function () {\n            window[this.methodName] = null;\n            try {\n                delete window[this.methodName];\n            }\n            catch (e) {\n                /* ignore */\n            }\n            if (this.scriptTag) {\n                document.body.removeChild(this.scriptTag);\n            }\n        };\n        return JSONPCallback;\n    }());\n    function xhr() {\n        if (typeof XMLHttpRequest !== \"undefined\" && (window.location.protocol !== \"file:\" || !window.ActiveXObject)) {\n            return new XMLHttpRequest();\n        }\n        else {\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e) {\n                /* ignore */\n            }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e) {\n                /* ignore */\n            }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e) {\n                /* ignore */\n            }\n        }\n        throw new Error(\"Could not initialze xhr\");\n    }\n    function successfulRequest(request) {\n        return (request.status >= 200 && request.status < 300) || request.status == 304 || (request.status == 0 && !!request.responseText);\n    }\n    var Net = /** @class */ (function () {\n        function Net() {\n        }\n        /**\n         * Serialize JavaScript for HTTP requests.\n         *\n         * @param {Object} object An Array or Object\n         * @returns {String} A string suitable for a GET or POST request\n         */\n        Net.serialize = function (object) {\n            if (!object) {\n                return \"\";\n            }\n            if (typeof object === \"string\") {\n                return object;\n            }\n            var results = [];\n            for (var key in object) {\n                results.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]));\n            }\n            return results.join(\"&\");\n        };\n        /**\n         * Parses JSON represented as a string.\n         *\n         * @param {String} string The original string\n         * @returns {Object} A JavaScript object\n         */\n        Net.parseJSON = function (string) {\n            if (typeof string !== \"string\" || !string) {\n                return null;\n            }\n            string = trim(string);\n            return window.JSON.parse(string);\n        };\n        /**\n         * Parses XML represented as a string.\n         *\n         * @param {String} string The original string\n         * @returns {Object} A JavaScript object\n         */\n        Net.parseXML = function (text) {\n            return parseXML(text);\n        };\n        /**\n         * Creates an Ajax request.  Returns an object that can be used\n         * to chain calls.  For example:\n         *\n         *      $t.post(\"/post-test\")\n         *        .data({ key: \"value\" })\n         *        .end(function(res) {\n         *          assert.equal(\"value\", res.responseText);\n         *        });\n         *\n         *      $t.get(\"/get-test\")\n         *        .set(\"Accept\", \"text/html\")\n         *        .end(function(res) {\n         *          assert.equal(\"Sample text\", res.responseText);\n         *        });\n         *\n         * The available chained methods are:\n         *\n         * `set` -- set a HTTP header\n         * `data` -- the postBody\n         * `end` -- send the request over the network, and calls your callback with a `res` object\n         * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\n         *\n         * @param {String} The URL to call\n         * @param {Object} Optional settings\n         * @returns {Object} A chainable object for further configuration\n         */\n        Net.ajax = function (url, options) {\n            var request = xhr();\n            var promise = new Promise();\n            var opts = typeof options !== \"undefined\" ? options : {};\n            function respondToReadyState() {\n                if (request.readyState == 4) {\n                    var contentType = request[\"mimeType\"] || request.getResponseHeader(\"content-type\") || \"\";\n                    var response = {\n                        status: request.status,\n                        responseText: request.responseText,\n                        success: successfulRequest(request)\n                    };\n                    if (/json/.test(contentType)) {\n                        response.responseJSON = Net.parseJSON(request.responseText);\n                    }\n                    else if (/xml/.test(contentType)) {\n                        response.responseXML = Net.parseXML(request.responseText);\n                    }\n                    if (opts.callback) {\n                        return opts.callback(response, request);\n                    }\n                    if (response.success) {\n                        if (opts.success) {\n                            opts.success(response, request);\n                        }\n                        promise.resolve(response);\n                    }\n                    else {\n                        if (opts.error) {\n                            opts.error(response, request);\n                        }\n                        promise.reject(response);\n                    }\n                }\n            }\n            function setHeaders() {\n                var defaults = {\n                    Accept: \"text/javascript, application/json, text/html, application/xml, text/xml, */*\",\n                    \"Content-Type\": \"application/json\"\n                };\n                opts.headers = opts.headers || {};\n                /**\n                 * Merge headers with defaults.\n                 */\n                for (var name_1 in defaults) {\n                    // eslint-disable-next-line no-prototype-builtins\n                    if (!opts.headers.hasOwnProperty(name_1)) {\n                        opts.headers[name_1] = defaults[name_1];\n                    }\n                }\n                for (var name_2 in opts.headers) {\n                    request.setRequestHeader(name_2, opts.headers[name_2]);\n                }\n            }\n            opts.method = opts.method ? opts.method.toLowerCase() : \"get\";\n            opts.asynchronous = opts.asynchronous || true;\n            opts.postBody = opts.postBody || \"\";\n            request.onreadystatechange = respondToReadyState;\n            request.open(opts.method, url, opts.asynchronous);\n            opts.headers = opts.headers || {};\n            if (opts.contentType) {\n                opts.headers[\"Content-Type\"] = opts.contentType;\n            }\n            if (typeof opts.postBody !== \"string\") {\n                // Serialize JavaScript\n                opts.postBody = Net.serialize(opts.postBody);\n            }\n            function send() {\n                try {\n                    setHeaders();\n                    request.send(opts.postBody);\n                }\n                catch (e) {\n                    if (opts.error) {\n                        opts.error();\n                    }\n                }\n            }\n            var chain = {\n                set: function (key, value) {\n                    opts.headers = opts.headers || {};\n                    opts.headers[key] = value;\n                    return chain;\n                },\n                send: function (data, callback) {\n                    opts.postBody = Net.serialize(data);\n                    opts.callback = callback;\n                    send();\n                    return chain;\n                },\n                end: function (callback) {\n                    opts.callback = callback;\n                    send();\n                    return chain;\n                },\n                data: function (data) {\n                    opts.postBody = Net.serialize(data);\n                    return chain;\n                },\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                then: function (success, failure) {\n                    chain.end();\n                    promise.then(success, failure);\n                    return chain;\n                }\n            };\n            return chain;\n        };\n        /**\n         * An Ajax GET request.\n         *\n         *      $t.get(\"/get-test\")\n         *        .set(\"Accept\", \"text/html\")\n         *        .end(function(res) {\n         *          assert.equal(\"Sample text\", res.responseText);\n         *        });\n         *\n         * @param {String} url The URL to request\n         * @param {Object} options The Ajax request options\n         * @returns {Object} A chainable object for further configuration\n         */\n        Net.get = function (url, options) {\n            if (typeof options === \"undefined\") {\n                options = {};\n            }\n            options.method = \"get\";\n            return Net.ajax(url, options);\n        };\n        /**\n         * An Ajax POST request.\n         *\n         *      $t.post(\"/post-test\")\n         *        .data({ key: \"value\" })\n         *        .end(function(res) {\n         *          assert.equal(\"value\", res.responseText);\n         *        });\n         *\n         * @param {String} url The URL to request\n         * @param {Object} options The Ajax request options (`postBody` may come in handy here)\n         * @returns {Object} An object for further chaining with promises\n         */\n        Net.post = function (url, options) {\n            if (typeof options === \"undefined\") {\n                options = {};\n            }\n            options.method = \"post\";\n            return Net.ajax(url, options);\n        };\n        /**\n         * A jsonp request.  Example:\n         *\n         *     var url = \"http://feeds.delicious.com/v1/json/\";\n         *     url += \"alex_young/javascript?callback={callback}\";\n         *\n         *     connectsdk.net.jsonp(url, {\n         *       success: function(json) {\n         *         console.log(json);\n         *       }\n         *     });\n         *\n         * @param {String} url The URL to request\n         */\n        Net.jsonp = function (url, options) {\n            var failure = typeof options.failure !== \"undefined\"\n                ? options.failure\n                : function () {\n                    /* ignore */\n                };\n            var callback = new JSONPCallback(url, options.success, failure);\n            callback.run();\n        };\n        return Net;\n    }());\n    return Net;\n});\n///<amd-module name=\"connectsdk.PublicKeyResponse\"/>\ndefine(\"connectsdk.PublicKeyResponse\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var PublicKeyResponse = /** @class */ (function () {\n        function PublicKeyResponse(json) {\n            this.json = json;\n            this.keyId = json.keyId;\n            this.publicKey = json.publicKey;\n        }\n        return PublicKeyResponse;\n    }());\n    return PublicKeyResponse;\n});\n///<amd-module name=\"connectsdk.C2SCommunicator\"/>\ndefine(\"connectsdk.C2SCommunicator\", [\"require\", \"exports\", \"connectsdk.ApplePay\", \"connectsdk.GooglePay\", \"connectsdk.IinDetailsResponse\", \"connectsdk.net\", \"connectsdk.promise\", \"connectsdk.PublicKeyResponse\", \"connectsdk.Util\"], function (require, exports, ApplePay, GooglePay, IinDetailsResponse, Net, Promise, PublicKeyResponse, Util) {\n    \"use strict\";\n    var util = Util.getInstance();\n    var C2SCommunicator = /** @class */ (function () {\n        function C2SCommunicator(c2SCommunicatorConfiguration, paymentProduct) {\n            var _this = this;\n            var _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\n            var _cache = {};\n            var _providedPaymentProduct = paymentProduct;\n            var _GooglePay = new GooglePay();\n            var _ApplePay = new ApplePay();\n            var _mapType = {\n                expirydate: \"tel\",\n                string: \"text\",\n                numericstring: \"tel\",\n                integer: \"number\",\n                expirationDate: \"tel\"\n            };\n            function _startsWith(string, prefix) {\n                return string.indexOf(prefix) === 0;\n            }\n            function _endsWith(string, suffix) {\n                return string.indexOf(suffix, string.length - suffix.length) !== -1;\n            }\n            function _formatUrl(url) {\n                return url && _endsWith(url, \"/\") ? url : url + \"/\";\n            }\n            function _formatImageUrl(url, imageUrl) {\n                url = _formatUrl(url);\n                // _cleanJSON can be called multiple times with the same data (which is cached between calls).\n                // Don't prepend the url after the first time.\n                if (_startsWith(imageUrl, url)) {\n                    return imageUrl;\n                }\n                return url + imageUrl;\n            }\n            function _constructUrl(path) {\n                return _formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + path;\n            }\n            function _constructUrlFromContext(path, context, includeLocale) {\n                if (includeLocale === void 0) { includeLocale = true; }\n                var urlParameterLocale = includeLocale && context.locale ? \"&locale=\" + context.locale : \"\";\n                return _constructUrl(path +\n                    \"?countryCode=\" +\n                    context.countryCode +\n                    \"&isRecurring=\" +\n                    context.isRecurring +\n                    \"&amount=\" +\n                    context.totalAmount +\n                    \"&currencyCode=\" +\n                    context.currency +\n                    urlParameterLocale);\n            }\n            function _constructCacheKeyFromContext(prefix, context, includeLocale) {\n                if (includeLocale === void 0) { includeLocale = true; }\n                var cacheKeyLocale = includeLocale && context.locale ? context.locale + \"_\" : \"\";\n                return prefix + context.totalAmount + \"_\" + context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\" + context.currency;\n            }\n            function _constructCacheKeyFromKeyValues(prefix, values) {\n                var cacheKey = prefix;\n                for (var key in values) {\n                    // eslint-disable-next-line no-prototype-builtins\n                    if (values.hasOwnProperty(key)) {\n                        cacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\n                    }\n                }\n                return cacheKey;\n            }\n            function _cleanJSON(json, url) {\n                for (var _i = 0, _a = json.fields; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    field.type = field.displayHints && field.displayHints.obfuscate ? \"password\" : _mapType[field.type];\n                    // helper code for templating tools like Handlebars\n                    for (var validatorKey in field.dataRestrictions.validators) {\n                        field.validators = field.validators || [];\n                        field.validators.push(validatorKey);\n                    }\n                    if (field.displayHints && field.displayHints.formElement && field.displayHints.formElement.type === \"list\") {\n                        field.displayHints.formElement.list = true;\n                    }\n                    // full image paths\n                    if (field.displayHints && field.displayHints.tooltip && field.displayHints.tooltip.image) {\n                        field.displayHints.tooltip.image = _formatImageUrl(url, field.displayHints.tooltip.image);\n                    }\n                }\n                // The server orders in a different way, so we apply the sortorder\n                json.fields.sort(function (a, b) {\n                    var _a, _b, _c, _d;\n                    var aDisplayOrder = (_b = (_a = a.displayHints) === null || _a === void 0 ? void 0 : _a.displayOrder) !== null && _b !== void 0 ? _b : 0;\n                    var bDisplayOrder = (_d = (_c = b.displayHints) === null || _c === void 0 ? void 0 : _c.displayOrder) !== null && _d !== void 0 ? _d : 0;\n                    if (aDisplayOrder < bDisplayOrder) {\n                        return -1;\n                    }\n                    return 1;\n                });\n                // set full image path\n                json.displayHints.logo = _formatImageUrl(url, json.displayHints.logo);\n                if (json.accountsOnFile) {\n                    for (var _b = 0, _c = json.accountsOnFile; _b < _c.length; _b++) {\n                        var aof = _c[_b];\n                        aof.displayHints.logo = _formatImageUrl(url, aof.displayHints.logo);\n                    }\n                }\n                return json;\n            }\n            function _extendLogoUrl(json, url, postfix) {\n                for (var _i = 0, _a = json[\"paymentProduct\" + postfix]; _i < _a.length; _i++) {\n                    var product = _a[_i];\n                    product.displayHints.logo = _formatImageUrl(url, product.displayHints.logo);\n                    if (product.accountsOnFile) {\n                        for (var _b = 0, _c = product.accountsOnFile; _b < _c.length; _b++) {\n                            var aof = _c[_b];\n                            aof.displayHints.logo = _formatImageUrl(url, aof.displayHints.logo);\n                        }\n                    }\n                }\n                json[\"paymentProduct\" + postfix].sort(function (a, b) {\n                    if (a.displayHints.displayOrder < b.displayHints.displayOrder) {\n                        return -1;\n                    }\n                    return 1;\n                });\n                return json;\n            }\n            function _isPaymentProductInList(list, paymentProductId) {\n                for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                    var product = list_1[_i];\n                    if (product && product.id === paymentProductId) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            function _getGooglePayData(list, paymentProductId) {\n                for (var _i = 0, list_2 = list; _i < list_2.length; _i++) {\n                    var product = list_2[_i];\n                    if (product && product.id === paymentProductId) {\n                        return product.paymentProduct320SpecificData;\n                    }\n                }\n                return undefined;\n            }\n            function _resolveGetBasicPaymentProducts(json, promise, cacheKey) {\n                util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\n                _cache[cacheKey] = json;\n                if (json.paymentProducts.length === 0) {\n                    promise.reject(\"No payment products available\");\n                }\n                else {\n                    promise.resolve(json);\n                }\n            }\n            this.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\n                paymentProductSpecificInputs = paymentProductSpecificInputs || {};\n                var cacheBust = new Date().getTime();\n                var cacheKey = _constructCacheKeyFromContext(\"getPaymentProducts-\", context) + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_2 = new Promise();\n                    var url = _constructUrlFromContext(\"/products\", context) + \"&hide=fields&cacheBust=\" + cacheBust;\n                    var metadata = util.getMetadata();\n                    Net.get(url)\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            var json_1 = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"s\");\n                            if (_isPaymentProductInList(json_1.paymentProducts, util.applePayPaymentProductId)) {\n                                _ApplePay.isApplePayAvailable();\n                            }\n                            if (_isPaymentProductInList(json_1.paymentProducts, util.googlePayPaymentProductId) && _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n                                var googlePayData = _getGooglePayData(json_1.paymentProducts, util.googlePayPaymentProductId);\n                                _GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, googlePayData).then(function () { return _resolveGetBasicPaymentProducts(json_1, promise_2, cacheKey); }, function () { return _resolveGetBasicPaymentProducts(json_1, promise_2, cacheKey); });\n                            }\n                            else {\n                                _resolveGetBasicPaymentProducts(json_1, promise_2, cacheKey);\n                            }\n                        }\n                        else {\n                            promise_2.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_2;\n                }\n            };\n            this.getBasicPaymentProductGroups = function (context) {\n                var cacheBust = new Date().getTime();\n                var cacheKey = _constructCacheKeyFromContext(\"getPaymentProductGroups-\", context);\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_3 = new Promise();\n                    var url = _constructUrlFromContext(\"/productgroups\", context) + \"&hide=fields&cacheBust=\" + cacheBust;\n                    var metadata = util.getMetadata();\n                    Net.get(url)\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            var json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl, \"Groups\");\n                            _cache[cacheKey] = json;\n                            promise_3.resolve(json);\n                        }\n                        else {\n                            promise_3.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_3;\n                }\n            };\n            this.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\n                paymentProductSpecificInputs = paymentProductSpecificInputs || {};\n                var cacheBust = new Date().getTime();\n                var cacheKey = _constructCacheKeyFromContext(\"getPaymentProduct-\" + paymentProductId, context) + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n                if (util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\n                    return Promise.reject({\n                        errorId: \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\n                        errors: [\n                            {\n                                code: \"1007\",\n                                propertyName: \"productId\",\n                                message: \"UNKNOWN_PRODUCT_ID\",\n                                httpStatusCode: 404\n                            },\n                        ]\n                    });\n                }\n                else {\n                    if (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\n                        if (!_cache[cacheKey]) {\n                            _cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\n                        }\n                        return Promise.resolve(_cache[cacheKey]);\n                    }\n                    else if (_cache[cacheKey]) {\n                        return Promise.resolve(_cache[cacheKey]);\n                    }\n                    else {\n                        var promise_4 = new Promise();\n                        var url = _constructUrlFromContext(\"/products/\" + paymentProductId, context);\n                        if (paymentProductId === util.bancontactPaymentProductId &&\n                            paymentProductSpecificInputs &&\n                            paymentProductSpecificInputs.bancontact &&\n                            paymentProductSpecificInputs.bancontact.forceBasicFlow) {\n                            // Add query parameter to products call to force basic flow for bancontact\n                            url += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow;\n                        }\n                        url += \"&cacheBust=\" + cacheBust;\n                        var metadata = util.getMetadata();\n                        Net.get(url)\n                            .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                            .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                            .end(function (res) {\n                            if (res.success) {\n                                var cleanedJSON_1 = _cleanJSON(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl);\n                                _cache[cacheKey] = cleanedJSON_1;\n                                if (paymentProductId === util.applePayPaymentProductId && !_ApplePay.isApplePayAvailable()) {\n                                    // Apple Pay is available in the payment context but the client does not support it.\n                                    promise_4.reject({\n                                        message: \"Apple Pay is not available in the client\",\n                                        json: cleanedJSON_1\n                                    });\n                                }\n                                else if (paymentProductId === util.googlePayPaymentProductId && _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n                                    var googlePayData = cleanedJSON_1.paymentProduct320SpecificData;\n                                    _GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs, googlePayData).then(function (isGooglePayAvailable) {\n                                        if (isGooglePayAvailable) {\n                                            promise_4.resolve(cleanedJSON_1);\n                                        }\n                                        else {\n                                            // isGooglePayAvailable returned false so Google Pay is not available, so reject getPaymentProduct\n                                            promise_4.reject({\n                                                message: \"Google Pay is not available in the client\",\n                                                json: cleanedJSON_1\n                                            });\n                                        }\n                                    }, function (reason) {\n                                        // isGooglePayAvailable rejected so not available\n                                        promise_4.reject({\n                                            reason: reason,\n                                            json: cleanedJSON_1\n                                        });\n                                    });\n                                }\n                                else {\n                                    promise_4.resolve(cleanedJSON_1);\n                                }\n                            }\n                            else {\n                                promise_4.reject(res.responseJSON);\n                            }\n                        });\n                        return promise_4;\n                    }\n                }\n            };\n            this.getPaymentProductGroup = function (paymentProductGroupId, context) {\n                var cacheBust = new Date().getTime();\n                var cacheKey = _constructUrlFromContext(\"getPaymentProductGroup-\" + paymentProductGroupId, context);\n                if (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\n                    if (!_cache[cacheKey]) {\n                        _cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\n                    }\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_5 = new Promise();\n                    var url = _constructUrlFromContext(\"/productgroups/\" + paymentProductGroupId, context) + \"&cacheBust=\" + cacheBust;\n                    var metadata = util.getMetadata();\n                    Net.get(url)\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            var cleanedJSON = _cleanJSON(res.responseJSON, _c2SCommunicatorConfiguration.assetUrl);\n                            _cache[cacheKey] = cleanedJSON;\n                            promise_5.resolve(cleanedJSON);\n                        }\n                        else {\n                            promise_5.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_5;\n                }\n            };\n            this.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\n                var cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\n                if (_cache[cacheKey]) {\n                    // cache is based on digit 1-6\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var isEnoughDigits = partialCreditCardNumber.length >= 6;\n                    if (isEnoughDigits) {\n                        var promise_6 = new Promise();\n                        var url = _constructUrl(\"/services/getIINdetails\");\n                        var metadata = util.getMetadata();\n                        Net.post(url)\n                            .data(JSON.stringify(_this.convertContextToIinDetailsContext(partialCreditCardNumber, context)))\n                            .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                            .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                            .end(function (res) {\n                            if (res.success) {\n                                var json_2 = res.responseJSON;\n                                // check if this card is supported\n                                // if isAllowedInContext is available in the response set status and resolve\n                                // eslint-disable-next-line no-prototype-builtins\n                                if (json_2.hasOwnProperty(\"isAllowedInContext\")) {\n                                    var status_3 = json_2.isAllowedInContext !== false ? \"SUPPORTED\" : \"EXISTING_BUT_NOT_ALLOWED\";\n                                    var iinDetailsResponse = new IinDetailsResponse(status_3, json_2);\n                                    _cache[cacheKey] = iinDetailsResponse;\n                                    promise_6.resolve(iinDetailsResponse);\n                                }\n                                else {\n                                    //if isAllowedInContext is not available get the payment product again to determine status and resolve\n                                    _this.getPaymentProduct(json_2.paymentProductId, context).then(function (paymentProduct) {\n                                        var status = paymentProduct ? \"SUPPORTED\" : \"UNSUPPORTED\";\n                                        var iinDetailsResponse = new IinDetailsResponse(status, json_2);\n                                        _cache[cacheKey] = iinDetailsResponse;\n                                        promise_6.resolve(iinDetailsResponse);\n                                    }, function () {\n                                        var iinDetailsResponse = new IinDetailsResponse(\"UNKNOWN\", json_2);\n                                        promise_6.reject(iinDetailsResponse);\n                                    });\n                                }\n                            }\n                            else {\n                                var iinDetailsResponse = new IinDetailsResponse(\"UNKNOWN\", res.responseJSON);\n                                promise_6.reject(iinDetailsResponse);\n                            }\n                        });\n                        return promise_6;\n                    }\n                    else {\n                        var iinDetailsResponse = new IinDetailsResponse(\"NOT_ENOUGH_DIGITS\");\n                        return Promise.resolve(iinDetailsResponse);\n                    }\n                }\n            };\n            this.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\n                var payload = {\n                    bin: partialCreditCardNumber,\n                    paymentContext: {\n                        countryCode: context.countryCode,\n                        isRecurring: context.isRecurring,\n                        isInstallments: context.isInstallments,\n                        amountOfMoney: {\n                            amount: context.totalAmount,\n                            currencyCode: context.currency\n                        }\n                    }\n                };\n                // Account on file id is needed only in case when the merchant\n                // uses multiple payment platforms at the same time.\n                if (typeof context.accountOnFileId !== \"undefined\") {\n                    payload[\"accountOnFileId\"] = context.accountOnFileId;\n                }\n                return payload;\n            };\n            this.getPublicKey = function () {\n                var cacheKey = \"publicKey\";\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_7 = new Promise();\n                    var url = _constructUrl(\"/crypto/publickey\");\n                    var metadata = util.getMetadata();\n                    Net.get(url)\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            var publicKeyResponse = new PublicKeyResponse(res.responseJSON);\n                            _cache[cacheKey] = publicKeyResponse;\n                            promise_7.resolve(publicKeyResponse);\n                        }\n                        else {\n                            promise_7.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_7;\n                }\n            };\n            this.getPaymentProductNetworks = function (paymentProductId, context) {\n                var cacheKey = _constructCacheKeyFromContext(\"paymentProductNetworks-\" + paymentProductId, context, false);\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_8 = new Promise();\n                    var url = _constructUrlFromContext(\"/products/\" + paymentProductId + \"/networks\", context, false);\n                    var metadata = util.getMetadata();\n                    Net.get(url)\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            _cache[cacheKey] = res.responseJSON;\n                            promise_8.resolve(res.responseJSON);\n                        }\n                        else {\n                            promise_8.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_8;\n                }\n            };\n            this.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\n                var cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_9 = new Promise();\n                    var url = _constructUrl(\"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode);\n                    var metadata = util.getMetadata();\n                    Net.get(url)\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            _cache[cacheKey] = res.responseJSON;\n                            promise_9.resolve(res.responseJSON);\n                        }\n                        else {\n                            promise_9.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_9;\n                }\n            };\n            this.convertAmount = function (amount, source, target) {\n                var cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_10 = new Promise();\n                    var url = _constructUrl(\"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount);\n                    var metadata = util.getMetadata();\n                    Net.get(url)\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            _cache[cacheKey] = res.responseJSON;\n                            promise_10.resolve(res.responseJSON);\n                        }\n                        else {\n                            promise_10.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_10;\n                }\n            };\n            this.getThirdPartyPaymentStatus = function (paymentId) {\n                var promise = new Promise();\n                var url = _constructUrl(\"/payments/\" + paymentId + \"/thirdpartystatus\");\n                var metadata = util.getMetadata();\n                Net.get(url)\n                    .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                    .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                    .end(function (res) {\n                    if (res.success) {\n                        promise.resolve(res.responseJSON);\n                    }\n                    else {\n                        promise.reject(res.responseJSON);\n                    }\n                });\n                return promise;\n            };\n            this.getCustomerDetails = function (paymentProductId, context) {\n                var cacheKey = _constructCacheKeyFromKeyValues(\"getCustomerDetails_\" + paymentProductId + \"_\" + context.countryCode, context.values);\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_11 = new Promise();\n                    var url = _constructUrl(\"/products/\" + paymentProductId + \"/customerDetails\");\n                    var metadata = util.getMetadata();\n                    Net.post(url)\n                        .data(JSON.stringify(context))\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            _cache[cacheKey] = res.responseJSON;\n                            promise_11.resolve(res.responseJSON);\n                        }\n                        else {\n                            promise_11.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_11;\n                }\n            };\n            this.createPaymentProductSession = function (paymentProductId, context) {\n                var cacheKey = \"createPaymentProductSession_\" + paymentProductId + \"_\" + context.validationURL + \"_\" + context.domainName + \"_\" + context.displayName;\n                if (_cache[cacheKey]) {\n                    return Promise.resolve(_cache[cacheKey]);\n                }\n                else {\n                    var promise_12 = new Promise();\n                    var url = _constructUrl(\"/products/\" + paymentProductId + \"/sessions\");\n                    var requestParameters = {\n                        paymentProductSession302SpecificInput: {\n                            validationUrl: context.validationURL,\n                            domainName: context.domainName,\n                            displayName: context.displayName\n                        }\n                    };\n                    var metadata = util.getMetadata();\n                    Net.post(url)\n                        .data(JSON.stringify(requestParameters))\n                        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n                        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n                        .end(function (res) {\n                        if (res.success) {\n                            _cache[cacheKey] = res.responseJSON;\n                            promise_12.resolve(res.responseJSON);\n                        }\n                        else {\n                            promise_12.reject(res.responseJSON);\n                        }\n                    });\n                    return promise_12;\n                }\n            };\n            this.initApplePayPayment = function (context, paymentProductSpecificInput, networks) {\n                var payload = JSON.parse(JSON.stringify(context));\n                payload.displayName = paymentProductSpecificInput.merchantName;\n                if (paymentProductSpecificInput.acquirerCountry) {\n                    payload.acquirerCountry = paymentProductSpecificInput.acquirerCountry;\n                }\n                payload.networks = networks;\n                return _ApplePay.initPayment(payload, _this);\n            };\n            this.transformPaymentProductJSON = function (json) {\n                return _cleanJSON(json, _c2SCommunicatorConfiguration.assetUrl);\n            };\n        }\n        return C2SCommunicator;\n    }());\n    return C2SCommunicator;\n});\n///<amd-module name=\"connectsdk.ValidationRuleBoletoBancarioRequiredness\"/>\ndefine(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleBoletoBancarioRequiredness = /** @class */ (function () {\n        function ValidationRuleBoletoBancarioRequiredness(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n            this.fiscalNumberLength = json.attributes.fiscalNumberLength;\n        }\n        ValidationRuleBoletoBancarioRequiredness.prototype.validate = function (value, fiscalNumberValue) {\n            if (typeof fiscalNumberValue === \"undefined\") {\n                fiscalNumberValue = \"\";\n            }\n            return (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\n        };\n        ValidationRuleBoletoBancarioRequiredness.prototype.validateValue = function (request, fieldId) {\n            var fiscalNumber = request.getUnmaskedValue(\"fiscalNumber\");\n            var fiscalNumberLength = (fiscalNumber === null || fiscalNumber === void 0 ? void 0 : fiscalNumber.length) || 0;\n            if (fiscalNumberLength !== this.fiscalNumberLength) {\n                // The field is not required for Boleto; allow anything\n                return true;\n            }\n            var value = request.getValue(fieldId);\n            return !!value;\n        };\n        return ValidationRuleBoletoBancarioRequiredness;\n    }());\n    return ValidationRuleBoletoBancarioRequiredness;\n});\n///<amd-module name=\"connectsdk.ValidationRuleEmailAddress\"/>\ndefine(\"connectsdk.ValidationRuleEmailAddress\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleEmailAddress = /** @class */ (function () {\n        function ValidationRuleEmailAddress(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n        }\n        ValidationRuleEmailAddress.prototype.validate = function (value) {\n            // eslint-disable-next-line no-useless-escape\n            var regexp = new RegExp(/^[^@\\.]+(\\.[^@\\.]+)*@([^@\\.]+\\.)*[^@\\.]+\\.[^@\\.][^@\\.]+$/i);\n            return regexp.test(value);\n        };\n        ValidationRuleEmailAddress.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleEmailAddress;\n    }());\n    return ValidationRuleEmailAddress;\n});\n///<amd-module name=\"connectsdk.ValidationRuleExpirationDate\"/>\ndefine(\"connectsdk.ValidationRuleExpirationDate\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    function validateDateFormat(value) {\n        // value is mmYY or mmYYYY\n        var pattern = /\\d{4}|\\d{6}$/g;\n        return pattern.test(value);\n    }\n    var ValidationRuleExpirationDate = /** @class */ (function () {\n        function ValidationRuleExpirationDate(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n        }\n        ValidationRuleExpirationDate.prototype.validate = function (value) {\n            value = value.replace(/[^\\d]/g, \"\");\n            if (!validateDateFormat(value)) {\n                return false;\n            }\n            var split;\n            if (value.length === 4) {\n                split = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\n            }\n            else if (value.length === 6) {\n                split = [value.substring(0, 2), value.substring(2, 6)];\n            }\n            else {\n                return false;\n            }\n            // The month is zero-based, so subtract one.\n            var expirationMonth = Number(split[0]) - 1;\n            var expirationYear = Number(split[1]);\n            var expirationDate = new Date(expirationYear, expirationMonth, 1);\n            // Compare the input with the parsed date, to check if the date rolled over.\n            if (expirationDate.getMonth() !== Number(expirationMonth) || expirationDate.getFullYear() !== Number(expirationYear)) {\n                return false;\n            }\n            // For comparison, set the current year & month and the maximum allowed expiration date.\n            var nowWithDay = new Date();\n            var now = new Date(nowWithDay.getFullYear(), nowWithDay.getMonth(), 1);\n            var maxExpirationDate = new Date(nowWithDay.getFullYear() + 25, 11, 1);\n            // The card is still valid if it expires this month.\n            return expirationDate >= now && expirationDate <= maxExpirationDate;\n        };\n        ValidationRuleExpirationDate.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleExpirationDate;\n    }());\n    return ValidationRuleExpirationDate;\n});\n///<amd-module name=\"connectsdk.ValidationRuleFixedList\"/>\ndefine(\"connectsdk.ValidationRuleFixedList\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleFixedList = /** @class */ (function () {\n        function ValidationRuleFixedList(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n            this.allowedValues = json.attributes.allowedValues;\n        }\n        ValidationRuleFixedList.prototype.validate = function (value) {\n            for (var _i = 0, _a = this.allowedValues; _i < _a.length; _i++) {\n                var allowedValue = _a[_i];\n                if (allowedValue === value) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        ValidationRuleFixedList.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleFixedList;\n    }());\n    return ValidationRuleFixedList;\n});\n///<amd-module name=\"connectsdk.ValidationRuleIban\"/>\ndefine(\"connectsdk.ValidationRuleIban\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    /**\n     * Sanitize value by remove all unwanted chars of a Iban format\n     *\n     * @private\n     */\n    function sanitizeValue(value) {\n        return value.replace(/[^\\d\\w]+/g, \"\").toUpperCase();\n    }\n    /**\n     * Get state if given value is a valid Iban format\n     *\n     * @private\n     */\n    function isValidFormat(value) {\n        return typeof value === \"string\" && /^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$/.test(sanitizeValue(value));\n    }\n    /**\n     * Convert a value to a string needed for validation calculations\n     *\n     * @private\n     */\n    function toComputedString(value) {\n        return (sanitizeValue(value)\n            // place the first 4 chars to the end\n            .replace(/(^.{4})(.*)/, \"$2$1\")\n            // replace letters by corresponding numbers A=10 / Z=35\n            .replace(/[A-Z]/g, function (d) {\n            return (d.charCodeAt(0) - 55).toString();\n        }));\n    }\n    /**\n     * Validate Iban by given json\n     */\n    var ValidationRuleIban = /** @class */ (function () {\n        function ValidationRuleIban(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n        }\n        /**\n         * Validate Iban nrule\n         *\n         * @see https://github.com/arhs/iban.js/blob/master/iban.js\n         */\n        ValidationRuleIban.prototype.validate = function (value) {\n            // bail if format is invalid\n            if (!isValidFormat(value)) {\n                return false;\n            }\n            // Check if reminder module 97 equals 1\n            // only then it should pass the validation\n            var remainder = toComputedString(value);\n            while (remainder.length > 2) {\n                var block = remainder.slice(0, 9);\n                remainder = (parseInt(block, 10) % 97) + remainder.slice(block.length);\n            }\n            return parseInt(remainder, 10) % 97 === 1;\n        };\n        ValidationRuleIban.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleIban;\n    }());\n    return ValidationRuleIban;\n});\n///<amd-module name=\"connectsdk.ValidationRuleLength\"/>\ndefine(\"connectsdk.ValidationRuleLength\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleLength = /** @class */ (function () {\n        function ValidationRuleLength(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n            this.minLength = json.attributes.minLength;\n            this.maxLength = json.attributes.maxLength;\n        }\n        ValidationRuleLength.prototype.validate = function (value) {\n            return this.minLength <= value.length && value.length <= this.maxLength;\n        };\n        ValidationRuleLength.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            if (!value) {\n                // Empty values are allowed if the minimal required length is 0\n                return this.minLength === 0;\n            }\n            return this.validate(value);\n        };\n        return ValidationRuleLength;\n    }());\n    return ValidationRuleLength;\n});\n///<amd-module name=\"connectsdk.ValidationRuleLuhn\"/>\ndefine(\"connectsdk.ValidationRuleLuhn\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleLuhn = /** @class */ (function () {\n        function ValidationRuleLuhn(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n        }\n        ValidationRuleLuhn.prototype.validate = function (value) {\n            var luhnArr = [\n                [0, 2, 4, 6, 8, 1, 3, 5, 7, 9],\n                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n            ];\n            var sum = 0;\n            value.replace(/\\D+/g, \"\").replace(/[\\d]/g, function (c, p, o) {\n                sum += luhnArr[(o.length - p) & 1][parseInt(c, 10)];\n                return \"\";\n            });\n            return sum % 10 === 0 && sum > 0;\n        };\n        ValidationRuleLuhn.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleLuhn;\n    }());\n    return ValidationRuleLuhn;\n});\n///<amd-module name=\"connectsdk.ValidationRuleRange\"/>\ndefine(\"connectsdk.ValidationRuleRange\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleRange = /** @class */ (function () {\n        function ValidationRuleRange(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n            this.minValue = json.attributes.minValue;\n            this.maxValue = json.attributes.maxValue;\n        }\n        ValidationRuleRange.prototype.validate = function (value) {\n            var intValue = typeof value === \"number\" ? value : parseInt(value);\n            if (isNaN(intValue)) {\n                return false;\n            }\n            return this.minValue <= intValue && intValue <= this.maxValue;\n        };\n        ValidationRuleRange.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleRange;\n    }());\n    return ValidationRuleRange;\n});\n///<amd-module name=\"connectsdk.ValidationRuleRegularExpression\"/>\ndefine(\"connectsdk.ValidationRuleRegularExpression\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleRegularExpression = /** @class */ (function () {\n        function ValidationRuleRegularExpression(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n            this.regularExpression = json.attributes.regularExpression;\n        }\n        ValidationRuleRegularExpression.prototype.validate = function (value) {\n            var regexp = new RegExp(this.regularExpression);\n            return regexp.test(value);\n        };\n        ValidationRuleRegularExpression.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleRegularExpression;\n    }());\n    return ValidationRuleRegularExpression;\n});\n///<amd-module name=\"connectsdk.ValidationRuleResidentIdNumber\"/>\ndefine(\"connectsdk.ValidationRuleResidentIdNumber\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var weights = [];\n    // https://en.wikipedia.org/wiki/Resident_Identity_Card\n    // storing weights in the reverse order so that we can begin\n    // from the 0th position of ID while calculating checksum\n    for (var i = 18; i > 0; i--) {\n        weights.push(Math.pow(2, i - 1) % 11);\n    }\n    var ValidationRuleResidentIdNumber = /** @class */ (function () {\n        function ValidationRuleResidentIdNumber(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n        }\n        ValidationRuleResidentIdNumber.prototype.validate = function (value) {\n            if (value.length < 15) {\n                return false;\n            }\n            if (value.length == 15) {\n                return /^\\d{15}$/.test(value);\n            }\n            if (value.length !== 18) {\n                return false;\n            }\n            var sum = 0;\n            for (var i = 0; i < value.length - 1; i++) {\n                sum += Number(value.charAt(i)) * weights[i];\n            }\n            var checkSum = (12 - (sum % 11)) % 11;\n            var csChar = value.charAt(17);\n            if (checkSum < 10) {\n                return checkSum == Number(csChar); // check only values\n            }\n            return !!csChar && csChar.toUpperCase() === \"X\"; // check the type as well\n        };\n        ValidationRuleResidentIdNumber.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleResidentIdNumber;\n    }());\n    return ValidationRuleResidentIdNumber;\n});\n///<amd-module name=\"connectsdk.ValidationRuleTermsAndConditions\"/>\ndefine(\"connectsdk.ValidationRuleTermsAndConditions\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValidationRuleTermsAndConditions = /** @class */ (function () {\n        function ValidationRuleTermsAndConditions(json) {\n            this.json = json;\n            this.type = json.type;\n            this.errorMessageId = json.type;\n        }\n        ValidationRuleTermsAndConditions.prototype.validate = function (value) {\n            return true === value || \"true\" === value;\n        };\n        ValidationRuleTermsAndConditions.prototype.validateValue = function (request, fieldId) {\n            var value = request.getUnmaskedValue(fieldId);\n            return !!value && this.validate(value);\n        };\n        return ValidationRuleTermsAndConditions;\n    }());\n    return ValidationRuleTermsAndConditions;\n});\n///<amd-module name=\"connectsdk.ValidationRuleFactory\"/>\ndefine(\"connectsdk.ValidationRuleFactory\", [\"require\", \"exports\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleResidentIdNumber\", \"connectsdk.ValidationRuleTermsAndConditions\"], function (require, exports, ValidationRuleBoletoBancarioRequiredness, ValidationRuleEmailAddress, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleIban, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleResidentIdNumber, ValidationRuleTermsAndConditions) {\n    \"use strict\";\n    var validationRules = {\n        EmailAddress: ValidationRuleEmailAddress,\n        TermsAndConditions: ValidationRuleTermsAndConditions,\n        ExpirationDate: ValidationRuleExpirationDate,\n        FixedList: ValidationRuleFixedList,\n        Length: ValidationRuleLength,\n        Luhn: ValidationRuleLuhn,\n        Range: ValidationRuleRange,\n        RegularExpression: ValidationRuleRegularExpression,\n        BoletoBancarioRequiredness: ValidationRuleBoletoBancarioRequiredness,\n        Iban: ValidationRuleIban,\n        ResidentIdNumber: ValidationRuleResidentIdNumber\n    };\n    var ValidationRuleFactory = /** @class */ (function () {\n        function ValidationRuleFactory() {\n        }\n        ValidationRuleFactory.prototype.makeValidator = function (json) {\n            var rule = json.type.charAt(0).toUpperCase() + json.type.slice(1);\n            try {\n                return new validationRules[rule](json);\n            }\n            catch (e) {\n                console.warn(\"no validator for \", rule);\n            }\n            return null;\n        };\n        return ValidationRuleFactory;\n    }());\n    return ValidationRuleFactory;\n});\n///<amd-module name=\"connectsdk.DataRestrictions\"/>\ndefine(\"connectsdk.DataRestrictions\", [\"require\", \"exports\", \"connectsdk.ValidationRuleFactory\"], function (require, exports, ValidationRuleFactory) {\n    \"use strict\";\n    function _parseJSON(_json, _validationRules, _validationRuleByType) {\n        var validationRuleFactory = new ValidationRuleFactory();\n        if (_json.validators) {\n            for (var key in _json.validators) {\n                var validationRule = validationRuleFactory.makeValidator({\n                    type: key,\n                    attributes: _json.validators[key]\n                });\n                if (validationRule) {\n                    _validationRules.push(validationRule);\n                    _validationRuleByType[validationRule.type] = validationRule;\n                }\n            }\n        }\n    }\n    var DataRestrictions = /** @class */ (function () {\n        function DataRestrictions(json) {\n            this.json = json;\n            this.isRequired = json.isRequired;\n            this.validationRules = [];\n            this.validationRuleByType = {};\n            _parseJSON(json, this.validationRules, this.validationRuleByType);\n        }\n        return DataRestrictions;\n    }());\n    return DataRestrictions;\n});\n///<amd-module name=\"connectsdk.JOSEEncryptor\"/>\ndefine(\"connectsdk.JOSEEncryptor\", [\"require\", \"exports\", \"node-forge\"], function (require, exports, forge) {\n    \"use strict\";\n    var CEKKEYLENGTH = 512;\n    var IVLENGTH = 128;\n    function base64UrlEncode(str) {\n        str = forge.util.encode64(str);\n        str = str.split(\"=\")[0];\n        str = str.replace(/\\+/g, \"-\");\n        str = str.replace(/\\//g, \"_\");\n        return str;\n    }\n    function createProtectedHeader(kid) {\n        var JOSEHeader = {\n            alg: \"RSA-OAEP\",\n            enc: \"A256CBC-HS512\",\n            kid: kid\n        };\n        return JSON.stringify(JOSEHeader);\n    }\n    function decodePemPublicKey(publickeyB64Encoded) {\n        // step 1: base64decode\n        var publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\n        // create a bytebuffer with these bytes\n        var buffer2 = forge.util.createBuffer(publickeyB64Decoded, \"raw\");\n        // convert DER to ASN1 object\n        var publickeyObject2 = forge.asn1.fromDer(buffer2);\n        // convert to publicKey object\n        var publicKey2 = forge.pki.publicKeyFromAsn1(publickeyObject2);\n        return publicKey2;\n    }\n    function encryptContentEncryptionKey(CEK, publicKey) {\n        // encrypt CEK with OAEP+SHA-1+MGF1Padding\n        var encryptedCEK = publicKey.encrypt(CEK, \"RSA-OAEP\");\n        return encryptedCEK;\n    }\n    function encryptPayload(payload, encKey, initializationVector) {\n        var cipher = forge.cipher.createCipher(\"AES-CBC\", encKey);\n        cipher.start({\n            iv: initializationVector\n        });\n        cipher.update(forge.util.createBuffer(payload));\n        cipher.finish();\n        return cipher.output.bytes();\n    }\n    function calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader) {\n        var buffer = forge.util.createBuffer(encodededProtectedHeader);\n        var lengthInBits = buffer.length() * 8;\n        var buffer2 = forge.util.createBuffer();\n        // convert int to 64bit big endian\n        buffer2.putInt32(0);\n        buffer2.putInt32(lengthInBits);\n        return buffer2.bytes();\n    }\n    function calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\n        var buffer = forge.util.createBuffer();\n        buffer.putBytes(encodededProtectedHeader);\n        buffer.putBytes(initializationVector);\n        buffer.putBytes(cipherText);\n        buffer.putBytes(al);\n        var hmacInput = buffer.bytes();\n        var hmac = forge.hmac.create();\n        hmac.start(\"sha512\", macKey);\n        hmac.update(hmacInput);\n        return hmac.digest().bytes();\n    }\n    var JOSEEncryptor = /** @class */ (function () {\n        function JOSEEncryptor() {\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        JOSEEncryptor.prototype.encrypt = function (plainTextValues, publicKeyResponse) {\n            // Create protected header and encode it with Base64 encoding\n            var payload = JSON.stringify(plainTextValues);\n            var protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\n            var encodededProtectedHeader = base64UrlEncode(protectedHeader);\n            // Create ContentEncryptionKey, is a random byte[]\n            var CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\n            var publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\n            // Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\n            var encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\n            var encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\n            // Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\n            var macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\n            var encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\n            // Create Initialization Vector\n            var initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\n            var encodededinitializationVector = base64UrlEncode(initializationVector);\n            // Encrypt content with ContentEncryptionKey and Initialization Vector\n            var cipherText = encryptPayload(payload, encKey, initializationVector);\n            var encodedCipherText = base64UrlEncode(cipherText);\n            // Create Additional Authenticated Data  and Additional Authenticated Data Length\n            var al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\n            // Calculates HMAC\n            var calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\n            // Truncate HMAC Value to Create Authentication Tag\n            var authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\n            var encodedAuthenticationTag = base64UrlEncode(authenticationTag);\n            return encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\n        };\n        return JOSEEncryptor;\n    }());\n    return JOSEEncryptor;\n});\n///<amd-module name=\"connectsdk.ValueMappingElement\"/>\ndefine(\"connectsdk.ValueMappingElement\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var ValueMappingElement = /** @class */ (function () {\n        function ValueMappingElement(json) {\n            this.json = json;\n            this.displayName = json.displayName;\n            this.value = json.value;\n        }\n        return ValueMappingElement;\n    }());\n    return ValueMappingElement;\n});\n///<amd-module name=\"connectsdk.FormElement\"/>\ndefine(\"connectsdk.FormElement\", [\"require\", \"exports\", \"connectsdk.ValueMappingElement\"], function (require, exports, ValueMappingElement) {\n    \"use strict\";\n    function _parseJSON(_json, _valueMapping) {\n        if (_json.valueMapping) {\n            for (var _i = 0, _a = _json.valueMapping; _i < _a.length; _i++) {\n                var mapping = _a[_i];\n                _valueMapping.push(new ValueMappingElement(mapping));\n            }\n        }\n    }\n    var FormElement = /** @class */ (function () {\n        function FormElement(json) {\n            this.json = json;\n            this.type = json.type;\n            this.valueMapping = [];\n            _parseJSON(json, this.valueMapping);\n        }\n        return FormElement;\n    }());\n    return FormElement;\n});\n///<amd-module name=\"connectsdk.Tooltip\"/>\ndefine(\"connectsdk.Tooltip\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var Tooltip = /** @class */ (function () {\n        function Tooltip(json) {\n            this.json = json;\n            this.image = json.image;\n            this.label = json.label;\n        }\n        return Tooltip;\n    }());\n    return Tooltip;\n});\n///<amd-module name=\"connectsdk.PaymentProductFieldDisplayHints\"/>\ndefine(\"connectsdk.PaymentProductFieldDisplayHints\", [\"require\", \"exports\", \"connectsdk.FormElement\", \"connectsdk.Tooltip\"], function (require, exports, FormElement, Tooltip) {\n    \"use strict\";\n    var PaymentProductFieldDisplayHints = /** @class */ (function () {\n        function PaymentProductFieldDisplayHints(json) {\n            this.json = json;\n            this.displayOrder = json.displayOrder;\n            if (json.formElement) {\n                this.formElement = new FormElement(json.formElement);\n            }\n            this.label = json.label;\n            this.mask = json.mask;\n            this.obfuscate = json.obfuscate;\n            this.placeholderLabel = json.placeholderLabel;\n            this.preferredInputType = json.preferredInputType;\n            this.tooltip = json.tooltip ? new Tooltip(json.tooltip) : undefined;\n            this.alwaysShow = json.alwaysShow;\n            this.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n        }\n        return PaymentProductFieldDisplayHints;\n    }());\n    return PaymentProductFieldDisplayHints;\n});\n///<amd-module name=\"connectsdk.PaymentProductField\"/>\ndefine(\"connectsdk.PaymentProductField\", [\"require\", \"exports\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\", \"connectsdk.PaymentProductFieldDisplayHints\"], function (require, exports, DataRestrictions, MaskingUtil, PaymentProductFieldDisplayHints) {\n    \"use strict\";\n    var PaymentProductField = /** @class */ (function () {\n        function PaymentProductField(json) {\n            var _this = this;\n            this.json = json;\n            this.displayHints = json.displayHints ? new PaymentProductFieldDisplayHints(json.displayHints) : \"\";\n            this.dataRestrictions = new DataRestrictions(json.dataRestrictions);\n            this.id = json.id;\n            this.type = json.type;\n            var _errorCodes = [];\n            this.getErrorCodes = function (value) {\n                if (value) {\n                    _errorCodes = [];\n                    _this.isValid(value);\n                }\n                return _errorCodes;\n            };\n            this.getErrorMessageIds = function (request) {\n                if (request) {\n                    _errorCodes = [];\n                    _this.validateValue(request);\n                }\n                return _errorCodes;\n            };\n            this.isValid = function (value) {\n                // isValid checks all datarestrictions\n                var validators = _this.dataRestrictions.validationRules;\n                var hasError = false;\n                // Apply masking value first\n                var maskedValue = _this.applyMask(value);\n                value = _this.removeMask(maskedValue.formattedValue);\n                for (var _i = 0, validators_1 = validators; _i < validators_1.length; _i++) {\n                    var validator = validators_1[_i];\n                    if (!validator.validate(value)) {\n                        hasError = true;\n                        _errorCodes.push(validator.errorMessageId);\n                    }\n                }\n                return !hasError;\n            };\n            this.validateValue = function (request) {\n                // validateValue checks all datarestrictions\n                var validators = _this.dataRestrictions.validationRules;\n                var hasError = false;\n                for (var _i = 0, validators_2 = validators; _i < validators_2.length; _i++) {\n                    var validator = validators_2[_i];\n                    if (!validator.validateValue(request, _this.id)) {\n                        hasError = true;\n                        _errorCodes.push(validator.errorMessageId);\n                    }\n                }\n                return !hasError;\n            };\n        }\n        PaymentProductField.prototype.applyMask = function (newValue, oldValue) {\n            var maskingUtil = new MaskingUtil();\n            var mask = this.displayHints ? this.displayHints.mask : undefined;\n            return maskingUtil.applyMask(mask, newValue, oldValue);\n        };\n        PaymentProductField.prototype.applyWildcardMask = function (newValue, oldValue) {\n            var maskingUtil = new MaskingUtil();\n            var wildcardMask = this.displayHints ? this.displayHints.wildcardMask : undefined;\n            return maskingUtil.applyMask(wildcardMask, newValue, oldValue);\n        };\n        PaymentProductField.prototype.removeMask = function (value) {\n            var maskingUtil = new MaskingUtil();\n            var mask = this.displayHints ? this.displayHints.mask : undefined;\n            return maskingUtil.removeMask(mask, value);\n        };\n        return PaymentProductField;\n    }());\n    return PaymentProductField;\n});\n///<amd-module name=\"connectsdk.PaymentProduct\"/>\ndefine(\"connectsdk.PaymentProduct\", [\"require\", \"exports\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function (require, exports, BasicPaymentProduct, PaymentProductField) {\n    \"use strict\";\n    function _parseJSON(_json, _paymentProductFields, _paymentProductFieldById) {\n        if (_json.fields) {\n            for (var _i = 0, _a = _json.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var paymentProductField = new PaymentProductField(field);\n                _paymentProductFields.push(paymentProductField);\n                _paymentProductFieldById[paymentProductField.id] = paymentProductField;\n            }\n        }\n    }\n    var PaymentProduct = /** @class */ (function (_super) {\n        __extends(PaymentProduct, _super);\n        function PaymentProduct(json) {\n            var _this = _super.call(this, json) || this;\n            _this.json = json;\n            _this.paymentProductFields = [];\n            _this.paymentProductFieldById = {};\n            _this.fieldsWarning = json.fieldsWarning;\n            _parseJSON(json, _this.paymentProductFields, _this.paymentProductFieldById);\n            return _this;\n        }\n        return PaymentProduct;\n    }(BasicPaymentProduct));\n    return PaymentProduct;\n});\n///<amd-module name=\"connectsdk.PaymentRequest\"/>\ndefine(\"connectsdk.PaymentRequest\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    var PaymentRequest = /** @class */ (function () {\n        function PaymentRequest(clientSessionID) {\n            var _this = this;\n            var _clientSessionID = clientSessionID;\n            var _fieldValues = {};\n            var _paymentProduct;\n            var _accountOnFile;\n            var _tokenize = false;\n            this.setValue = function (paymentProductFieldId, value) {\n                _fieldValues[paymentProductFieldId] = value;\n            };\n            this.setTokenize = function (tokenize) {\n                _tokenize = tokenize;\n            };\n            this.getTokenize = function () {\n                return _tokenize;\n            };\n            this.getErrorMessageIds = function () {\n                return _this.validate().map(function (error) { return error.errorMessageId; });\n            };\n            this.getValue = function (paymentProductFieldId) {\n                return _fieldValues[paymentProductFieldId];\n            };\n            this.getValues = function () {\n                return _fieldValues;\n            };\n            this.getMaskedValue = function (paymentProductFieldId) {\n                var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n                if (paymentProductField) {\n                    var value = _this.getValue(paymentProductFieldId);\n                    if (typeof value !== \"undefined\") {\n                        var maskedString = paymentProductField.applyMask(value);\n                        return maskedString.formattedValue;\n                    }\n                }\n            };\n            this.getMaskedValues = function () {\n                var result = {};\n                for (var paymentProductFieldId in _fieldValues) {\n                    var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n                    var maskedString = paymentProductField.applyMask(_this.getValue(paymentProductFieldId));\n                    result[paymentProductFieldId] = maskedString.formattedValue;\n                }\n                return result;\n            };\n            this.getUnmaskedValue = function (paymentProductFieldId) {\n                var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n                if (paymentProductField) {\n                    var value = _this.getValue(paymentProductFieldId);\n                    if (typeof value !== \"undefined\") {\n                        var maskedString = paymentProductField.applyMask(value);\n                        var formattedValue = maskedString.formattedValue;\n                        return paymentProductField.removeMask(formattedValue);\n                    }\n                }\n            };\n            this.getUnmaskedValues = function () {\n                var result = {};\n                for (var paymentProductFieldId in _fieldValues) {\n                    var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n                    if (paymentProductField) {\n                        var maskedString = paymentProductField.applyMask(_this.getValue(paymentProductFieldId));\n                        var formattedValue = maskedString.formattedValue;\n                        result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\n                    }\n                }\n                return result;\n            };\n            this.setPaymentProduct = function (paymentProduct) {\n                _paymentProduct = paymentProduct;\n            };\n            this.getPaymentProduct = function () {\n                return _paymentProduct;\n            };\n            this.setAccountOnFile = function (accountOnFile) {\n                if (accountOnFile) {\n                    for (var _i = 0, _a = accountOnFile.attributes; _i < _a.length; _i++) {\n                        var attribute = _a[_i];\n                        if (attribute.status !== \"MUST_WRITE\") {\n                            delete _fieldValues[attribute.key];\n                        }\n                    }\n                }\n                _accountOnFile = accountOnFile || undefined;\n            };\n            this.getAccountOnFile = function () {\n                return _accountOnFile;\n            };\n            this.getClientSessionID = function () {\n                return _clientSessionID;\n            };\n        }\n        PaymentRequest.prototype.isValid = function () {\n            return !!this.getPaymentProduct() && this.validate().length === 0;\n        };\n        /**\n         * Validates that the necessary fields are set with correct values.\n         * @throws If the payment product has not been set yet.\n         */\n        PaymentRequest.prototype.validate = function () {\n            var paymentProduct = this.getPaymentProduct();\n            if (!paymentProduct) {\n                throw new Error(\"Error validating PaymentRequest, please set a paymentProduct first.\");\n            }\n            var errors = [];\n            // check fields that are set first\n            var fieldValues = this.getValues();\n            var _loop_1 = function (key) {\n                var paymentProductField = paymentProduct.paymentProductFieldById[key];\n                if (paymentProductField) {\n                    errors.push.apply(errors, paymentProductField.getErrorMessageIds(this_1).map(function (id) { return ({\n                        fieldId: paymentProductField.id,\n                        errorMessageId: id\n                    }); }));\n                }\n            };\n            var this_1 = this;\n            for (var key in fieldValues) {\n                _loop_1(key);\n            }\n            // besides checking the fields for errors, check if all mandatory fields are present as well\n            var aof = this.getAccountOnFile();\n            if (aof && aof.paymentProductId !== paymentProduct.id) {\n                // the account-on-file does not belong to the payment product; ignore it\n                aof = undefined;\n            }\n            var hasValueInAof = function (fieldId) {\n                var attribute = aof === null || aof === void 0 ? void 0 : aof.attributeByKey[fieldId];\n                return !!attribute && attribute.status !== \"MUST_WRITE\";\n            };\n            for (var _i = 0, _a = paymentProduct.paymentProductFields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                if (field.dataRestrictions.isRequired) {\n                    // is this field present in the request?\n                    var storedValue = this.getValue(field.id);\n                    // if the account on file has the field we can ignore it\n                    if (!storedValue && !hasValueInAof(field.id)) {\n                        errors.push({\n                            fieldId: field.id,\n                            errorMessageId: \"required\"\n                        });\n                    }\n                }\n            }\n            return errors;\n        };\n        return PaymentRequest;\n    }());\n    return PaymentRequest;\n});\n///<amd-module name=\"connectsdk.Encryptor\"/>\ndefine(\"connectsdk.Encryptor\", [\"require\", \"exports\", \"node-forge\", \"connectsdk.JOSEEncryptor\", \"connectsdk.promise\", \"connectsdk.Util\"], function (require, exports, forge, JOSEEncryptor, Promise, Util) {\n    \"use strict\";\n    var util = Util.getInstance();\n    function createEncryptedConsumerInput(paymentRequest) {\n        var blob = {\n            clientSessionId: paymentRequest.getClientSessionID(),\n            nonce: forge.util.bytesToHex(forge.random.getBytesSync(16)),\n            paymentProductId: paymentRequest.getPaymentProduct().id,\n            tokenize: paymentRequest.getTokenize(),\n            paymentValues: [],\n            collectedDeviceInformation: util.collectDeviceInformation()\n        };\n        var accountOnFile = paymentRequest.getAccountOnFile();\n        if (accountOnFile) {\n            blob.accountOnFileId = accountOnFile.id;\n        }\n        var values = paymentRequest.getUnmaskedValues();\n        var ownValues = Object.getOwnPropertyNames(values);\n        for (var _i = 0, ownValues_1 = ownValues; _i < ownValues_1.length; _i++) {\n            var propertyName = ownValues_1[_i];\n            if (propertyName !== \"length\") {\n                blob.paymentValues.push({\n                    key: propertyName,\n                    value: values[propertyName]\n                });\n            }\n        }\n        return blob;\n    }\n    var Encryptor = /** @class */ (function () {\n        function Encryptor(publicKeyResponsePromise) {\n            this.encrypt = function (paymentRequest) {\n                if (!paymentRequest.getPaymentProduct()) {\n                    return Promise.reject(\"no paymentProduct set\");\n                }\n                var errors = paymentRequest.validate();\n                if (errors.length !== 0) {\n                    return Promise.reject(errors);\n                }\n                // paymentRequest is now valid\n                var blob = createEncryptedConsumerInput(paymentRequest);\n                var promise = new Promise();\n                publicKeyResponsePromise.then(function (publicKeyResponse) {\n                    // use blob to encrypt\n                    var joseEncryptor = new JOSEEncryptor();\n                    try {\n                        var encryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\n                        promise.resolve(encryptedString);\n                    }\n                    catch (e) {\n                        promise.reject(e);\n                    }\n                }, function (reason) {\n                    promise.reject(reason);\n                });\n                return promise;\n            };\n        }\n        return Encryptor;\n    }());\n    return Encryptor;\n});\n///<amd-module name=\"connectsdk.PaymentProductGroup\"/>\ndefine(\"connectsdk.PaymentProductGroup\", [\"require\", \"exports\", \"connectsdk.BasicPaymentProductGroup\", \"connectsdk.PaymentProductField\"], function (require, exports, BasicPaymentProductGroup, PaymentProductField) {\n    \"use strict\";\n    function _parseJSON(_json, _paymentProductFields, _paymentProductFieldById) {\n        if (_json.fields) {\n            for (var _i = 0, _a = _json.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var paymentProductField = new PaymentProductField(field);\n                _paymentProductFields.push(paymentProductField);\n                _paymentProductFieldById[paymentProductField.id] = paymentProductField;\n            }\n        }\n    }\n    var PaymentProductGroup = /** @class */ (function (_super) {\n        __extends(PaymentProductGroup, _super);\n        function PaymentProductGroup(json) {\n            var _this = _super.call(this, json) || this;\n            _this.json = json;\n            _this.paymentProductFields = [];\n            _this.paymentProductFieldById = {};\n            _parseJSON(json, _this.paymentProductFields, _this.paymentProductFieldById);\n            return _this;\n        }\n        return PaymentProductGroup;\n    }(BasicPaymentProductGroup));\n    return PaymentProductGroup;\n});\n///<amd-module name=\"connectsdk.PaymentItem\"/>\ndefine(\"connectsdk.PaymentItem\", [\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    exports.__esModule = true;\n});\n///<amd-module name=\"connectsdk.Session\"/>\ndefine(\"connectsdk.Session\", [\"require\", \"exports\", \"connectsdk.BasicPaymentItems\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.Encryptor\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.PaymentRequest\", \"connectsdk.promise\"], function (require, exports, BasicPaymentItems, BasicPaymentProductGroups, BasicPaymentProducts, C2SCommunicator, C2SCommunicatorConfiguration, C2SPaymentProductContext, Encryptor, PaymentProduct, PaymentProductGroup, PaymentRequest, Promise) {\n    \"use strict\";\n    var APIVERSION = \"client/v1\";\n    // Keep the lowercase name for backward compatibility\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    var session = /** @class */ (function () {\n        function session(sessionDetails, paymentProduct) {\n            var _this = this;\n            var _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails, APIVERSION);\n            var _c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct);\n            //_paymentRequest,\n            this.clientApiUrl = _c2SCommunicatorConfiguration.clientApiUrl;\n            this.assetUrl = _c2SCommunicatorConfiguration.assetUrl;\n            var _paymentDetails;\n            var _paymentProduct;\n            var _paymentProductGroup;\n            var _paymentRequest;\n            this.getBasicPaymentProducts = function (paymentDetails, paymentProductSpecificInputs) {\n                var promise = new Promise();\n                var c2SPaymentProductContext = new C2SPaymentProductContext(paymentDetails);\n                _c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\n                    _paymentDetails = paymentDetails;\n                    var paymentProducts = new BasicPaymentProducts(json);\n                    promise.resolve(paymentProducts);\n                }, function (reason) {\n                    promise.reject(reason);\n                });\n                return promise;\n            };\n            this.getBasicPaymentProductGroups = function (paymentDetails) {\n                var promise = new Promise();\n                var c2SPaymentProductContext = new C2SPaymentProductContext(paymentDetails);\n                _c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\n                    _paymentDetails = paymentDetails;\n                    var paymentProductGroups = new BasicPaymentProductGroups(json);\n                    promise.resolve(paymentProductGroups);\n                }, function (reason) {\n                    promise.reject(reason);\n                });\n                return promise;\n            };\n            this.getBasicPaymentItems = function (paymentDetails, useGroups, paymentProductSpecificInputs) {\n                var promise = new Promise();\n                // get products & groups\n                if (useGroups) {\n                    _this.getBasicPaymentProducts(paymentDetails, paymentProductSpecificInputs).then(function (products) {\n                        _this.getBasicPaymentProductGroups(paymentDetails).then(function (groups) {\n                            var basicPaymentItems = new BasicPaymentItems(products, groups);\n                            promise.resolve(basicPaymentItems);\n                        }, function (reason) {\n                            promise.reject(reason);\n                        });\n                    }, function (reason) {\n                        promise.reject(reason);\n                    });\n                }\n                else {\n                    _this.getBasicPaymentProducts(paymentDetails, paymentProductSpecificInputs).then(function (products) {\n                        var basicPaymentItems = new BasicPaymentItems(products, null);\n                        promise.resolve(basicPaymentItems);\n                    }, function (reason) {\n                        promise.reject(reason);\n                    });\n                }\n                return promise;\n            };\n            this.getPaymentProduct = function (paymentProductId, paymentDetails, paymentProductSpecificInputs) {\n                var promise = new Promise();\n                var c2SPaymentProductContext = new C2SPaymentProductContext(_paymentDetails || paymentDetails);\n                _c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\n                    _paymentProduct = new PaymentProduct(response);\n                    promise.resolve(_paymentProduct);\n                }, function (reason) {\n                    _paymentProduct = null;\n                    promise.reject(reason);\n                });\n                return promise;\n            };\n            this.getPaymentProductGroup = function (paymentProductGroupId, paymentDetails) {\n                var promise = new Promise();\n                var c2SPaymentProductContext = new C2SPaymentProductContext(_paymentDetails || paymentDetails);\n                _c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\n                    _paymentProductGroup = new PaymentProductGroup(response);\n                    promise.resolve(_paymentProductGroup);\n                }, function (reason) {\n                    _paymentProductGroup = null;\n                    promise.reject(reason);\n                });\n                return promise;\n            };\n            this.getIinDetails = function (partialCreditCardNumber, paymentDetails) {\n                partialCreditCardNumber = partialCreditCardNumber.replace(/ /g, \"\");\n                if (partialCreditCardNumber.length >= 8) {\n                    partialCreditCardNumber = partialCreditCardNumber.substring(0, 8);\n                }\n                else {\n                    partialCreditCardNumber = partialCreditCardNumber.substring(0, 6);\n                }\n                var c2SPaymentProductContext = new C2SPaymentProductContext(_paymentDetails || paymentDetails);\n                return _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\n            };\n            this.getPublicKey = function () {\n                return _c2sCommunicator.getPublicKey();\n            };\n            this.getPaymentProductNetworks = function (paymentProductId, paymentDetails) {\n                var promise = new Promise();\n                var c2SPaymentProductContext = new C2SPaymentProductContext(paymentDetails);\n                _c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\n                    _paymentDetails = paymentDetails;\n                    promise.resolve(response);\n                }, function (reason) {\n                    promise.reject(reason);\n                });\n                return promise;\n            };\n            this.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\n                return _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\n            };\n            this.convertAmount = function (amount, source, target) {\n                return _c2sCommunicator.convertAmount(amount, source, target);\n            };\n            this.getPaymentRequest = function () {\n                if (!_paymentRequest) {\n                    _paymentRequest = new PaymentRequest(_c2SCommunicatorConfiguration.clientSessionId);\n                }\n                return _paymentRequest;\n            };\n            this.getEncryptor = function () {\n                var publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\n                return new Encryptor(publicKeyResponsePromise);\n            };\n            this.getThirdPartyPaymentStatus = function (paymentId) {\n                return _c2sCommunicator.getThirdPartyPaymentStatus(paymentId);\n            };\n            this.getCustomerDetails = function (paymentProductId, paymentDetails) {\n                return _c2sCommunicator.getCustomerDetails(paymentProductId, paymentDetails);\n            };\n            this.createPaymentProductSession = function (paymentProductId, paymentDetails) {\n                return _c2sCommunicator.createPaymentProductSession(paymentProductId, paymentDetails);\n            };\n            this.createApplePayPayment = function (context, paymentProductSpecificInput, networks) {\n                return _c2sCommunicator.initApplePayPayment(context, paymentProductSpecificInput, networks);\n            };\n            this.transformPaymentProductJSON = function (json) {\n                return new PaymentProduct(_c2sCommunicator.transformPaymentProductJSON(json));\n            };\n            this.transformPaymentProductGroupJSON = function (json) {\n                return new PaymentProductGroup(_c2sCommunicator.transformPaymentProductJSON(json));\n            };\n        }\n        return session;\n    }());\n    return session;\n});\n///<amd-module name=\"connectsdk.core\"/>\ndefine(\"connectsdk.core\", [\"require\", \"exports\", \"connectsdk.AccountOnFile\", \"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.ApplePay\", \"connectsdk.Attribute\", \"connectsdk.BasicPaymentItems\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.BasicPaymentProductGroup\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.DataRestrictions\", \"connectsdk.Encryptor\", \"connectsdk.FormElement\", \"connectsdk.GooglePay\", \"connectsdk.IinDetailsResponse\", \"connectsdk.JOSEEncryptor\", \"connectsdk.LabelTemplateElement\", \"connectsdk.MaskedString\", \"connectsdk.MaskingUtil\", \"connectsdk.net\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProduct302SpecificData\", \"connectsdk.PaymentProduct320SpecificData\", \"connectsdk.PaymentProduct863SpecificData\", \"connectsdk.PaymentProductField\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.PaymentProductGroup\", \"connectsdk.PaymentRequest\", \"connectsdk.promise\", \"connectsdk.PublicKeyResponse\", \"connectsdk.Session\", \"connectsdk.Tooltip\", \"connectsdk.Util\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFactory\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleIban\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleResidentIdNumber\", \"connectsdk.ValidationRuleTermsAndConditions\", \"connectsdk.ValueMappingElement\"], function (require, exports, _AccountOnFile, _AccountOnFileDisplayHints, _ApplePay, _Attribute, _BasicPaymentItems, _BasicPaymentProduct, _BasicPaymentProductGroup, _BasicPaymentProductGroups, _BasicPaymentProducts, _C2SCommunicator, _C2SCommunicatorConfiguration, _C2SPaymentProductContext, _DataRestrictions, _Encryptor, _FormElement, _GooglePay, _IinDetailsResponse, _JOSEEncryptor, _LabelTemplateElement, _MaskedString, _MaskingUtil, _Net, _PaymentProduct, _PaymentProduct302SpecificData, _PaymentProduct320SpecificData, _PaymentProduct863SpecificData, _PaymentProductField, _PaymentProductFieldDisplayHints, _PaymentProductGroup, _PaymentRequest, _Promise, _PublicKeyResponse, _session, _Tooltip, _Util, _ValidationRuleBoletoBancarioRequiredness, _ValidationRuleEmailAddress, _ValidationRuleExpirationDate, _ValidationRuleFactory, _ValidationRuleFixedList, _ValidationRuleIban, _ValidationRuleLength, _ValidationRuleLuhn, _ValidationRuleRange, _ValidationRuleRegularExpression, _ValidationRuleResidentIdNumber, _ValidationRuleTermsAndConditions, _ValueMappingElement) {\n    \"use strict\";\n    var connectsdk = {\n        AccountOnFile: _AccountOnFile,\n        AccountOnFileDisplayHints: _AccountOnFileDisplayHints,\n        ApplePay: _ApplePay,\n        Attribute: _Attribute,\n        BasicPaymentItems: _BasicPaymentItems,\n        BasicPaymentProduct: _BasicPaymentProduct,\n        BasicPaymentProductGroup: _BasicPaymentProductGroup,\n        BasicPaymentProductGroups: _BasicPaymentProductGroups,\n        BasicPaymentProducts: _BasicPaymentProducts,\n        C2SCommunicator: _C2SCommunicator,\n        C2SCommunicatorConfiguration: _C2SCommunicatorConfiguration,\n        C2SPaymentProductContext: _C2SPaymentProductContext,\n        DataRestrictions: _DataRestrictions,\n        Encryptor: _Encryptor,\n        FormElement: _FormElement,\n        GooglePay: _GooglePay,\n        IinDetailsResponse: _IinDetailsResponse,\n        JOSEEncryptor: _JOSEEncryptor,\n        LabelTemplateElement: _LabelTemplateElement,\n        MaskedString: _MaskedString,\n        MaskingUtil: _MaskingUtil,\n        net: _Net,\n        get: _Net.get,\n        post: _Net.post,\n        jsonp: _Net.jsonp,\n        PaymentProduct: _PaymentProduct,\n        PaymentProduct302SpecificData: _PaymentProduct302SpecificData,\n        PaymentProduct320SpecificData: _PaymentProduct320SpecificData,\n        PaymentProduct863SpecificData: _PaymentProduct863SpecificData,\n        PaymentProductField: _PaymentProductField,\n        PaymentProductFieldDisplayHints: _PaymentProductFieldDisplayHints,\n        PaymentProductGroup: _PaymentProductGroup,\n        PaymentRequest: _PaymentRequest,\n        Promise: _Promise,\n        PublicKeyResponse: _PublicKeyResponse,\n        Session: _session,\n        Tooltip: _Tooltip,\n        Util: _Util,\n        ValidationRuleBoletoBancarioRequiredness: _ValidationRuleBoletoBancarioRequiredness,\n        ValidationRuleEmailAddress: _ValidationRuleEmailAddress,\n        ValidationRuleExpirationDate: _ValidationRuleExpirationDate,\n        ValidationRuleFactory: _ValidationRuleFactory,\n        ValidationRuleFixedList: _ValidationRuleFixedList,\n        ValidationRuleIban: _ValidationRuleIban,\n        ValidationRuleLength: _ValidationRuleLength,\n        ValidationRuleLuhn: _ValidationRuleLuhn,\n        ValidationRuleRange: _ValidationRuleRange,\n        ValidationRuleRegularExpression: _ValidationRuleRegularExpression,\n        ValidationRuleResidentIdNumber: _ValidationRuleResidentIdNumber,\n        ValidationRuleTermsAndConditions: _ValidationRuleTermsAndConditions,\n        ValueMappingElement: _ValueMappingElement\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var global = (typeof window === \"undefined\" ? this : window);\n    global.connectsdk = connectsdk;\n    return connectsdk;\n});\n\n//# sourceMappingURL=index.js.map\n"]}