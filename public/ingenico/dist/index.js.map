{"version":3,"sources":["src/apimodel.ts","src/LabelTemplateElement.ts","src/AccountOnFileDisplayHints.ts","src/Attribute.ts","src/MaskedString.ts","src/MaskingUtil.ts","src/AccountOnFile.ts","src/promise.ts","src/types.ts","src/Util.ts","src/ApplePay.ts","src/AuthenticationIndicator.ts","src/PaymentProduct302SpecificData.ts","src/PaymentProduct320SpecificData.ts","src/PaymentProduct863SpecificData.ts","src/PaymentProductDisplayHints.ts","src/BasicPaymentProduct.ts","src/BasicPaymentProductGroup.ts","src/BasicPaymentItem.ts","src/BasicPaymentProductGroups.ts","src/BasicPaymentProducts.ts","src/BasicPaymentItems.ts","src/C2SCommunicatorConfiguration.ts","src/C2SPaymentProductContext.ts","src/GooglePay.ts","src/IinDetailsResponse.ts","src/net.ts","src/PublicKeyResponse.ts","src/C2SCommunicator.ts","src/ValidationRuleBoletoBancarioRequiredness.ts","src/ValidationRuleEmailAddress.ts","src/ValidationRuleExpirationDate.ts","src/ValidationRuleFixedList.ts","src/ValidationRuleIban.ts","src/ValidationRuleLength.ts","src/ValidationRuleLuhn.ts","src/ValidationRuleRange.ts","src/ValidationRuleRegularExpression.ts","src/ValidationRuleResidentIdNumber.ts","src/ValidationRuleTermsAndConditions.ts","src/ValidationRuleFactory.ts","src/DataRestrictions.ts","src/JOSEEncryptor.ts","src/ValueMappingElement.ts","src/FormElement.ts","src/Tooltip.ts","src/PaymentProductFieldDisplayHints.ts","src/PaymentProductField.ts","src/PaymentProduct.ts","src/PaymentRequest.ts","src/Encryptor.ts","src/PaymentProductGroup.ts","src/PaymentItem.ts","src/session.ts","src/core.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["///<amd-module name=\"connectsdk.apimodel\"/>\n\n// PaymentProduct and PaymentProductGroup related\n\nexport interface AccountOnFileJSON {\n  attributes: AccountOnFileAttributeJSON[];\n  displayHints: AccountOnFileDisplayHintsJSON;\n  id: number;\n  paymentProductId: number;\n}\n\nexport interface AccountOnFileAttributeJSON extends KeyValuePairJSON {\n  mustWriteReason?: string;\n  status: string;\n}\n\nexport interface AccountOnFileDisplayHintsJSON {\n  labelTemplate: LabelTemplateElementJSON[];\n  logo: string;\n}\n\nexport interface AuthenticationIndicatorJSON {\n  name: string;\n  value: string;\n}\n\nexport interface BasicPaymentProductJSON {\n  accountsOnFile?: AccountOnFileJSON[];\n  acquirerCountry?: string;\n  allowsInstallments: boolean;\n  allowsRecurring: boolean;\n  allowsTokenization: boolean;\n  authenticationIndicator?: AuthenticationIndicatorJSON;\n  autoTokenized: boolean;\n  canBeIframed?: boolean;\n  deviceFingerprintEnabled: boolean;\n  displayHints: PaymentProductDisplayHintsJSON;\n  id: number;\n  isJavaScriptRequired?: boolean;\n  maxAmount?: number;\n  minAmount?: number;\n  mobileIntegrationLevel: string;\n  paymentMethod: string;\n  paymentProduct302SpecificData?: PaymentProduct302SpecificDataJSON;\n  paymentProduct320SpecificData?: PaymentProduct320SpecificDataJSON;\n  paymentProduct863SpecificData?: PaymentProduct863SpecificDataJSON;\n  paymentProductGroup?: string;\n  supportsMandates?: boolean;\n  usesRedirectionTo3rdParty: boolean;\n  // added by the SDK\n  type?: \"product\";\n}\n\nexport interface BasicPaymentProductGroupJSON {\n  accountsOnFile?: AccountOnFileJSON[];\n  allowsInstallments: boolean;\n  deviceFingerprintEnabled: boolean;\n  displayHints: PaymentProductDisplayHintsJSON;\n  id: string;\n  // added by the SDK\n  type?: \"group\";\n}\n\nexport interface CreatePaymentProductSessionRequestJSON {\n  paymentProductSession302SpecificInput?: MobilePaymentProductSession302SpecificInputJSON;\n}\n\nexport interface CreatePaymentProductSessionResponseJSON {\n  paymentProductSession302SpecificOutput?: MobilePaymentProductSession302SpecificOutputJSON;\n}\n\nexport interface DirectoryJSON {\n  entries: DirectoryEntryJSON[];\n}\n\nexport interface DirectoryEntryJSON {\n  countryNames?: string[];\n  issuerId: string;\n  issuerList?: string;\n  issuerName: string;\n}\n\nexport interface KeyValuePairJSON {\n  key: string;\n  value: string;\n}\n\nexport interface LabelTemplateElementJSON {\n  attributeKey: string;\n  mask: string;\n}\n\nexport interface MobilePaymentProductSession302SpecificInputJSON {\n  displayName?: string;\n  domainName?: string;\n  validationUrl?: string;\n}\n\nexport interface MobilePaymentProductSession302SpecificOutputJSON {\n  sessionObject: string;\n}\n\nexport interface PaymentProductJSON extends BasicPaymentProductJSON {\n  fields: PaymentProductFieldJSON[];\n  fieldsWarning?: string;\n}\n\nexport interface PaymentProductDisplayHintsJSON {\n  displayOrder: number;\n  label?: string;\n  logo: string;\n}\n\nexport interface PaymentProduct302SpecificDataJSON {\n  networks: string[];\n}\n\nexport interface PaymentProduct320SpecificDataJSON {\n  gateway: string;\n  networks: string[];\n}\n\nexport interface PaymentProduct863SpecificDataJSON {\n  integrationTypes: string[];\n}\n\nexport interface PaymentProductFieldJSON {\n  dataRestrictions: PaymentProductFieldDataRestrictionsJSON;\n  displayHints?: PaymentProductFieldDisplayHintsJSON;\n  id: string;\n  type: string;\n  usedForLookup?: boolean;\n  // added by the SDK\n  validators?: string[];\n}\n\nexport interface PaymentProductFieldDataRestrictionsJSON {\n  isRequired: boolean;\n  validators: PaymentProductFieldValidatorsJSON;\n}\n\nexport interface PaymentProductFieldDisplayElementJSON {\n  id: string;\n  label?: string;\n  type: string;\n  value: string;\n}\n\nexport interface PaymentProductFieldDisplayHintsJSON {\n  alwaysShow: boolean;\n  displayOrder: number;\n  formElement: PaymentProductFieldFormElementJSON;\n  label?: string;\n  link?: string;\n  mask?: string;\n  obfuscate: boolean;\n  placeholderLabel?: string;\n  preferredInputType?: string;\n  tooltip?: PaymentProductFieldTooltipJSON;\n}\n\nexport interface PaymentProductFieldFormElementJSON {\n  type: string;\n  valueMapping?: ValueMappingElementJSON[];\n  // added by the SDK\n  list?: boolean;\n}\n\nexport interface PaymentProductFieldTooltipJSON {\n  image: string;\n  label?: string;\n}\n\nexport interface PaymentProductFieldValidatorsJSON {\n  boletoBancarioRequiredness?: BoletoBancarioRequirednessValidatorJSON;\n  emailAddress?: EmptyValidatorJSON;\n  expirationDate?: EmptyValidatorJSON;\n  fixedList?: FixedListValidatorJSON;\n  iban?: EmptyValidatorJSON;\n  length?: LengthValidatorJSON;\n  luhn?: EmptyValidatorJSON;\n  range?: RangeValidatorJSON;\n  regularExpression?: RegularExpressionValidatorJSON;\n  residentIdNumber?: EmptyValidatorJSON;\n  termsAndConditions?: EmptyValidatorJSON;\n}\n\nexport interface PaymentProductGroupJSON extends BasicPaymentProductGroupJSON {\n  fields: PaymentProductFieldJSON[];\n}\n\nexport interface PaymentProductGroupsJSON {\n  paymentProductGroups: BasicPaymentProductGroupJSON[];\n}\n\nexport interface PaymentProductNetworksResponseJSON {\n  networks: string[];\n}\n\nexport interface PaymentProductsJSON {\n  paymentProducts: BasicPaymentProductJSON[];\n}\n\nexport interface ValueMappingElementJSON {\n  displayElements: PaymentProductFieldDisplayElementJSON[];\n  displayName?: string;\n  value: string;\n}\n\n// Validators\n\nexport interface BoletoBancarioRequirednessValidatorJSON {\n  fiscalNumberLength: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface EmptyValidatorJSON {}\n\nexport interface FixedListValidatorJSON {\n  allowedValues: string[];\n}\n\nexport interface LengthValidatorJSON {\n  minLength: number;\n  maxLength: number;\n}\n\nexport interface RangeValidatorJSON {\n  minValue: number;\n  maxValue: number;\n}\n\nexport interface RegularExpressionValidatorJSON {\n  regularExpression: string;\n}\n\n// Crypto related\n\nexport interface PublicKeyJSON {\n  keyId: string;\n  publicKey: string;\n}\n\n// IIN related\n\nexport interface AmountOfMoneyJSON {\n  amount: number;\n  currencyCode: string;\n}\n\nexport interface GetIINDetailsRequestJSON {\n  bin: string;\n  paymentContext?: PaymentContextJSON;\n}\n\nexport interface GetIINDetailsResponseJSON {\n  coBrands?: IinDetailJSON[];\n  countryCode: string;\n  isAllowedInContext?: boolean;\n  paymentProductId: number;\n}\n\nexport interface IinDetailJSON {\n  isAllowedInContext: boolean;\n  paymentProductId: number;\n}\n\nexport interface PaymentContextJSON {\n  amountOfMoney: AmountOfMoneyJSON;\n  countryCode: string;\n  isInstallments?: boolean;\n  isRecurring?: boolean;\n}\n\n// Other services related\n\nexport interface ConvertAmountJSON {\n  convertedAmount: number;\n}\n\nexport interface GetCustomerDetailsRequestJSON {\n  countryCode: string;\n  values: KeyValuePairJSON[];\n}\n\nexport interface GetCustomerDetailsResponseJSON {\n  city?: string;\n  country?: string;\n  emailAddress?: string;\n  firstName?: string;\n  fiscalNumber?: string;\n  languageCode?: string;\n  phoneNumber?: string;\n  street?: string;\n  surname?: string;\n  zip?: string;\n}\n\nexport interface ThirdPartyStatusResponseJSON {\n  thirdPartyStatus: string;\n}\n\n// Errors\n\nexport interface APIErrorJSON {\n  category: string;\n  code: string;\n  httpStatusCode: number;\n  id: string;\n  message: string;\n  propertyName: string;\n  requestId: string;\n}\n\nexport interface ErrorResponseJSON {\n  errorId: string;\n  errors: APIErrorJSON[];\n}\n","///<amd-module name=\"connectsdk.LabelTemplateElement\"/>\n\nimport { LabelTemplateElementJSON } from \"./apimodel\";\n\nclass LabelTemplateElement {\n  readonly attributeKey: string;\n  readonly mask: string;\n  readonly wildcardMask: string;\n\n  constructor(readonly json: LabelTemplateElementJSON) {\n    this.attributeKey = json.attributeKey;\n    this.mask = json.mask;\n    this.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n  }\n}\n\nexport = LabelTemplateElement;\n","///<amd-module name=\"connectsdk.AccountOnFileDisplayHints\"/>\n\nimport { AccountOnFileDisplayHintsJSON } from \"./apimodel\";\nimport LabelTemplateElement = require(\"./LabelTemplateElement\");\n\nfunction _parseJSON(\n  _json: AccountOnFileDisplayHintsJSON,\n  _labelTemplate: LabelTemplateElement[],\n  _labelTemplateElementByAttributeKey: { [attributeKey: string]: LabelTemplateElement | undefined }\n): void {\n  if (_json.labelTemplate) {\n    for (const element of _json.labelTemplate) {\n      const labelTemplateElement = new LabelTemplateElement(element);\n      _labelTemplate.push(labelTemplateElement);\n      _labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\n    }\n  }\n}\n\nclass AccountOnFileDisplayHints {\n  readonly logo: string;\n  readonly labelTemplate: LabelTemplateElement[];\n  readonly labelTemplateElementByAttributeKey: { [attributeKey: string]: LabelTemplateElement | undefined };\n\n  constructor(readonly json: AccountOnFileDisplayHintsJSON) {\n    this.logo = json.logo;\n    this.labelTemplate = [];\n    this.labelTemplateElementByAttributeKey = {};\n\n    _parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\n  }\n}\n\nexport = AccountOnFileDisplayHints;\n","///<amd-module name=\"connectsdk.Attribute\"/>\n\nimport { AccountOnFileAttributeJSON } from \"./apimodel\";\n\nclass Attribute {\n  readonly key: string;\n  readonly value: string;\n  readonly status: string;\n  readonly mustWriteReason?: string;\n\n  constructor(readonly json: AccountOnFileAttributeJSON) {\n    this.key = json.key;\n    this.value = json.value;\n    this.status = json.status;\n    this.mustWriteReason = json.mustWriteReason;\n  }\n}\n\nexport = Attribute;\n","///<amd-module name=\"connectsdk.MaskedString\"/>\n\nclass MaskedString {\n  constructor(readonly formattedValue: string, readonly cursorIndex: number) {}\n}\n\nexport = MaskedString;\n","///<amd-module name=\"connectsdk.MaskingUtil\"/>\n\nimport MaskedString = require(\"./MaskedString\");\n\nfunction _fillBuffer(index: number, offset: number, buffer: string[], tempMask: string[], valuec: string[]): void {\n  if (index + offset < valuec.length && index < tempMask.length) {\n    if ((tempMask[index] === \"9\" && Number(valuec[index + offset]) > -1 && valuec[index + offset] !== \" \") || tempMask[index] === \"*\") {\n      buffer.push(valuec[index + offset]);\n    } else {\n      if (valuec[index + offset] === tempMask[index]) {\n        buffer.push(valuec[index + offset]);\n      } else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\n        buffer.push(tempMask[index]);\n        offset--;\n      } else {\n        // offset++;\n        valuec.splice(index + offset, 1);\n        index--;\n      }\n    }\n    _fillBuffer(index + 1, offset, buffer, tempMask, valuec);\n  }\n}\n\nclass MaskingUtil {\n  applyMask(mask: string | undefined, newValue: string, oldValue?: string): MaskedString {\n    const buffer: string[] = [];\n    const valuec = newValue.split(\"\");\n    if (mask) {\n      const maskc = mask.split(\"\");\n      const tempMask: string[] = [];\n      for (const c of maskc) {\n        // the char '{' and '}' should ALWAYS be ignored\n        if (c === \"{\" || c === \"}\") {\n          // ignore\n        } else {\n          tempMask.push(c);\n        }\n      }\n      // tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\n      _fillBuffer(0, 0, buffer, tempMask, valuec);\n    } else {\n      // send back as is\n      for (const c of valuec) {\n        buffer.push(c);\n      }\n    }\n    newValue = buffer.join(\"\");\n    let cursor = 1;\n    // calculate the cursor index\n    if (oldValue) {\n      const tester = oldValue.split(\"\");\n      for (let i = 0, il = buffer.length; i < il; i++) {\n        if (buffer[i] !== tester[i]) {\n          cursor = i + 1;\n          break;\n        }\n      }\n    }\n    if (newValue.substring(0, newValue.length - 1) === oldValue) {\n      cursor = newValue.length + 1;\n    }\n    return new MaskedString(newValue, cursor);\n  }\n\n  getMaxLengthBasedOnMask(mask?: string): number {\n    if (mask) {\n      const maskc = mask.split(\"\");\n      let newLength = -1;\n      for (const c of maskc) {\n        newLength++;\n        if (c === \"{\" || c === \"}\") {\n          newLength--;\n        }\n      }\n      return newLength;\n    }\n    return -1;\n  }\n\n  removeMask(mask: string | undefined, value: string): string {\n    // remove the mask from the masked input\n    const buffer: string[] = [];\n    const valuec = value ? value.split(\"\") : [];\n    if (mask) {\n      const maskc = mask.split(\"\");\n      let valueIndex = -1;\n      let inMask = false;\n      for (const c of maskc) {\n        valueIndex++;\n        // the char '{' and '}' should ALWAYS be ignored\n        if (c === \"{\" || c === \"}\") {\n          valueIndex--;\n          if (c === \"{\") {\n            inMask = true;\n          } else if (c === \"}\") {\n            inMask = false;\n          }\n        } else {\n          if (inMask && valuec[valueIndex]) {\n            buffer.push(valuec[valueIndex]);\n          }\n        }\n      }\n    } else {\n      // send back as is\n      for (const c of valuec) {\n        buffer.push(c);\n      }\n    }\n    return buffer.join(\"\").trim();\n  }\n}\n\nexport = MaskingUtil;\n","///<amd-module name=\"connectsdk.AccountOnFile\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport AccountOnFileDisplayHints = require(\"./AccountOnFileDisplayHints\");\nimport { AccountOnFileJSON } from \"./apimodel\";\nimport Attribute = require(\"./Attribute\");\nimport MaskedString = require(\"./MaskedString\");\nimport MaskingUtil = require(\"./MaskingUtil\");\n\nfunction _parseJSON(_json: AccountOnFileJSON, _attributes: Attribute[], _attributeByKey: { [key: string]: Attribute | undefined }): void {\n  if (_json.attributes) {\n    for (const attr of _json.attributes) {\n      const attribute = new Attribute(attr);\n      _attributes.push(attribute);\n      _attributeByKey[attribute.key] = attribute;\n    }\n  }\n}\n\nclass AccountOnFile {\n  readonly attributes: Attribute[];\n  readonly attributeByKey: { [key: string]: Attribute | undefined };\n  readonly displayHints: AccountOnFileDisplayHints;\n  readonly id: number;\n  readonly paymentProductId: number;\n\n  constructor(readonly json: AccountOnFileJSON) {\n    this.attributes = [];\n    this.attributeByKey = {};\n    this.displayHints = new AccountOnFileDisplayHints(json.displayHints);\n    this.id = json.id;\n    this.paymentProductId = json.paymentProductId;\n\n    _parseJSON(json, this.attributes, this.attributeByKey);\n  }\n\n  getMaskedValueByAttributeKey(attributeKey: string): MaskedString | undefined {\n    const value = this.attributeByKey[attributeKey]!.value;\n    let wildcardMask: string | undefined;\n    try {\n      wildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey]!.wildcardMask;\n    } catch (e) {\n      /* ignore */\n    }\n    if (value !== undefined && wildcardMask !== undefined) {\n      const maskingUtil = new MaskingUtil();\n      return maskingUtil.applyMask(wildcardMask, value);\n    }\n    return undefined;\n  }\n}\n\nexport = AccountOnFile;\n","///<amd-module name=\"connectsdk.promise\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/**\n * The Promise class.\n */\nclass Promise<T> {\n  readonly isSingleton: boolean;\n\n  /**\n   * Resolves a promise.\n   */\n  readonly resolve: (result: T) => void;\n  /**\n   * Rejects a promise.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  readonly reject: (result: any) => void;\n  /**\n   * Adds a success and failure handler for completion of this Promise object.\n   *\n   * @param {Function} success The success handler\n   * @param {Function} failure The failure handler\n   * @returns {Promise} `this`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  readonly then: (success: (result: T) => void, failure?: (result: any) => void) => Promise<T>;\n\n  constructor(singleton?: boolean) {\n    this.isSingleton = singleton || false;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const pending: { resolve: (result: T) => void; reject?: (result: any) => void }[] = [];\n\n    /**\n     * Runs through each pending 'thenable' based on type (resolve, reject).\n     *\n     * @param {String} type The thenable type\n     * @param {Object} result A value\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function complete(type: \"resolve\" | \"reject\", result: any): void {\n      while (pending[0]) {\n        const cb = pending.shift()![type];\n        if (cb) {\n          cb(result);\n        }\n      }\n    }\n\n    this.resolve = (result: T): void => {\n      complete(\"resolve\", result);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.reject = (result: any): void => {\n      complete(\"reject\", result);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.then = (success: (result: T) => void, failure?: (result: any) => void): Promise<T> => {\n      pending.push({\n        resolve: success,\n        reject: failure,\n      });\n      return this;\n    };\n  }\n\n  static resolve<T>(value: T): Promise<T> {\n    const promise = new Promise<T>();\n    setTimeout(() => promise.resolve(value), 0);\n    return promise;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static reject<T>(reason: any): Promise<T> {\n    const promise = new Promise<T>();\n    setTimeout(() => promise.reject(reason), 0);\n    return promise;\n  }\n}\n\nexport = Promise;\n","///<amd-module name=\"connectsdk.types\"/>\n\nimport { PaymentProductsJSON } from \"./apimodel\";\n\n// Communicator / session related\n\nexport interface PaymentProductSessionContext {\n  displayName: string;\n  domainName: string;\n  validationURL: string;\n}\n\nexport interface PaymentProductSpecificInputs {\n  bancontact?: BancontactSpecificInput;\n  applePay?: ApplePaySpecificInput;\n  googlePay?: GooglePaySpecificInput;\n}\n\nexport interface BancontactSpecificInput {\n  forceBasicFlow: boolean;\n}\n\nexport interface ApplePaySpecificInput {\n  merchantName: string;\n  acquirerCountry?: string;\n}\n\nexport interface GooglePaySpecificInput {\n  merchantId: string;\n  gatewayMerchantId: string;\n  merchantName?: string;\n}\n\nexport interface PaymentDetails {\n  totalAmount: number;\n  countryCode: string;\n  isRecurring: boolean;\n  currency: string;\n  locale?: string;\n  isInstallments?: boolean;\n  accountOnFileId?: number;\n  environment?: string | \"PROD\";\n}\n\nexport interface SessionDetails {\n  clientSessionId: string;\n  assetUrl: string;\n  clientApiUrl: string;\n  customerId: string;\n}\n\n// ApplePay related\n\nexport interface ApplePayPaymentDetails extends PaymentDetails {\n  displayName: string;\n  acquirerCountry?: string;\n  networks: string[];\n}\n\nexport interface ApplePayInitResult {\n  message: string;\n  data: ApplePayJS.ApplePayPaymentToken;\n}\n\n// Services related\n\nexport type IinDetailsStatus = \"SUPPORTED\" | \"EXISTING_BUT_NOT_ALLOWED\" | \"UNSUPPORTED\" | \"UNKNOWN\" | \"NOT_ENOUGH_DIGITS\";\n\n// Validation related\n\n// This interface is used to break the circular import dependency between validation rules and PaymentRequest.\n// PaymentRequest automatically implements it.\nexport interface ValidatableRequest {\n  getValue(paymentProductFieldId: string): string | undefined;\n  getMaskedValue(paymentProductFieldId: string): string | undefined;\n  getUnmaskedValue(paymentProductFieldId: string): string | undefined;\n}\n\nexport interface ValidationError {\n  fieldId: string;\n  errorMessageId: string;\n}\n\nexport interface ValidationRule {\n  readonly json: ValidationRuleDefinition<unknown>;\n  readonly type: string;\n  readonly errorMessageId: string;\n\n  validate(value: string): boolean;\n  validateValue(request: ValidatableRequest, fieldId: string): boolean;\n}\n\nexport interface ValidationRuleDefinition<T> {\n  readonly type: string;\n  readonly attributes: T;\n}\n\n// Util related\n\nexport interface Metadata {\n  readonly screenSize: string;\n  readonly platformIdentifier: string;\n  readonly sdkIdentifier: string;\n  readonly sdkCreator: string;\n}\n\nexport interface BrowserData {\n  readonly javaScriptEnabled: true;\n  readonly javaEnabled: boolean;\n  readonly colorDepth: number;\n  readonly screenHeight: number;\n  readonly screenWidth: number;\n  readonly innerHeight: number;\n  readonly innerWidth: number;\n}\n\nexport interface DeviceInformation {\n  readonly timezoneOffsetUtcMinutes: number;\n  readonly locale: string;\n  readonly browserData: BrowserData;\n}\n\nexport interface Util {\n  readonly applePayPaymentProductId: 302;\n  readonly googlePayPaymentProductId: 320;\n  readonly bancontactPaymentProductId: 3012;\n\n  readonly paymentProductsThatAreNotSupportedInThisBrowser: number[];\n\n  getMetadata(): Metadata;\n  collectDeviceInformation(): DeviceInformation;\n  base64Encode(data: object | string): string;\n  filterOutProductsThatAreNotSupportedInThisBrowser(json: PaymentProductsJSON): void;\n}\n\n// API client related\n\nexport interface AjaxRequestOptions {\n  /** HTTP method - GET, POST, etc. */\n  method?: string;\n  /** Headers */\n  headers?: { [key: string]: string | undefined };\n  /** A callback to run when a request is successful */\n  success?: (response: SdkResponse, request: XMLHttpRequest) => void;\n  /** A callback to run when the request fails */\n  error?: (response?: SdkResponse, request?: XMLHttpRequest) => void;\n  /** A callback to run when a request completes, successful or not */\n  callback?: (response: SdkResponse, request: XMLHttpRequest) => void;\n  /** Defaults to asynchronous */\n  asynchronous?: boolean;\n  /** The HTTP POST body */\n  postBody?: string;\n  /** The content type of the request, default is `application/x-www-form-urlencoded` */\n  contentType?: string;\n}\n\nexport interface AjaxRequest {\n  set(key: string, value: string): AjaxRequest;\n  send(data: object | string, callback: (response: SdkResponse, request: XMLHttpRequest) => void): AjaxRequest;\n  end(callback?: (response: SdkResponse, request: XMLHttpRequest) => void): AjaxRequest;\n  data(data: object | string): AjaxRequest;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  then(success: (result: SdkResponse) => void, failure?: (result: any) => void): AjaxRequest;\n}\n\nexport interface JSONPOptions {\n  success: (json: unknown) => void;\n  failure?: () => void;\n}\n\nexport interface SdkResponse {\n  status: number;\n  responseText: string;\n  responseJSON?: unknown;\n  responseXML?: unknown;\n  success: boolean;\n}\n","///<amd-module name=\"connectsdk.Util\"/>\n\nimport { PaymentProductsJSON } from \"./apimodel\";\nimport { DeviceInformation, Metadata, Util } from \"./types\";\n\nlet instance: Util;\n\nfunction createInstance(): Util {\n  return {\n    applePayPaymentProductId: 302,\n    googlePayPaymentProductId: 320,\n    bancontactPaymentProductId: 3012,\n    paymentProductsThatAreNotSupportedInThisBrowser: [],\n    getMetadata(): Metadata {\n      return {\n        screenSize: window.innerWidth + \"x\" + window.innerHeight,\n        platformIdentifier: window.navigator.userAgent,\n        sdkIdentifier: (document[\"GC\"] && document[\"GC\"].rppEnabledPage ? \"rpp-\" : \"\") + \"JavaScriptClientSDK/v4.1.0\",\n        sdkCreator: \"Ingenico\",\n      };\n    },\n    collectDeviceInformation(): DeviceInformation {\n      return {\n        timezoneOffsetUtcMinutes: new Date().getTimezoneOffset(),\n        locale: navigator.language,\n        browserData: {\n          javaScriptEnabled: true,\n          javaEnabled: navigator.javaEnabled(),\n          colorDepth: screen.colorDepth,\n          screenHeight: screen.height,\n          screenWidth: screen.width,\n          innerHeight: window.innerHeight,\n          innerWidth: window.innerWidth,\n        },\n      };\n    },\n    base64Encode(data: object | string): string {\n      if (typeof data === \"object\") {\n        try {\n          data = JSON.stringify(data);\n        } catch (e) {\n          throw \"data must be either a String or a JSON object\";\n        }\n      }\n\n      if (!data) {\n        return data;\n      }\n\n      const b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n      let i = 0;\n      let ac = 0;\n      const tmpArr: string[] = [];\n\n      do {\n        // pack three octets into four hexets\n        const o1 = data.charCodeAt(i++);\n        const o2 = data.charCodeAt(i++);\n        const o3 = data.charCodeAt(i++);\n\n        const bits = (o1 << 16) | (o2 << 8) | o3;\n\n        const h1 = (bits >> 18) & 0x3f;\n        const h2 = (bits >> 12) & 0x3f;\n        const h3 = (bits >> 6) & 0x3f;\n        const h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmpArr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n      } while (i < data.length);\n\n      const enc = tmpArr.join(\"\");\n\n      const r = data.length % 3;\n\n      return (r ? enc.slice(0, r - 3) : enc) + \"===\".slice(r || 3);\n    },\n    filterOutProductsThatAreNotSupportedInThisBrowser(json: PaymentProductsJSON): void {\n      for (let i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\n        const product = json.paymentProducts[i];\n        if (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\n          json.paymentProducts.splice(i, 1);\n        }\n      }\n    },\n  };\n}\n\nexport = {\n  getInstance(): Util {\n    if (!instance) {\n      instance = createInstance();\n    }\n    return instance;\n  },\n};\n","///<amd-module name=\"connectsdk.ApplePay\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport Promise = require(\"./promise\");\nimport Util = require(\"./Util\");\nimport { CreatePaymentProductSessionResponseJSON } from \"./apimodel\";\nimport { ApplePayInitResult, ApplePayPaymentDetails, PaymentProductSessionContext } from \"./types\";\n\nconst util = Util.getInstance();\n\n// This interface is used to break the circular import dependency between ApplePay and C2SCommunicator.\n// C2SCommunicator automatically implements it.\ninterface ApplePayC2SCommunicator {\n  createPaymentProductSession(paymentProductId: number, context: PaymentProductSessionContext): Promise<CreatePaymentProductSessionResponseJSON>;\n}\n\nclass ApplePay {\n  isApplePayAvailable(): boolean {\n    const applePayIsAvailable = window[\"ApplePaySession\"] && window[\"ApplePaySession\"].canMakePayments();\n    if (!applePayIsAvailable) {\n      util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.applePayPaymentProductId);\n    }\n    return !!applePayIsAvailable;\n  }\n\n  initPayment(context: ApplePayPaymentDetails, c2SCommunicator: ApplePayC2SCommunicator): Promise<ApplePayInitResult> {\n    const promise = new Promise<ApplePayInitResult>();\n\n    const countryCode = context.acquirerCountry ? context.acquirerCountry : context.countryCode;\n\n    const payment: ApplePayJS.ApplePayPaymentRequest = {\n      currencyCode: context.currency,\n      countryCode: countryCode,\n      total: {\n        label: context.displayName,\n        amount: (context.totalAmount / 100).toString(),\n      },\n      supportedNetworks: context.networks,\n      merchantCapabilities: [\"supports3DS\"],\n    };\n\n    const applePaySession = new ApplePaySession(1, payment);\n    applePaySession.begin();\n\n    applePaySession.onvalidatemerchant = function (event: ApplePayJS.ApplePayValidateMerchantEvent): void {\n      const sessionContext = {\n        displayName: context.displayName,\n        validationURL: event.validationURL,\n        domainName: window.location.hostname,\n      };\n      c2SCommunicator.createPaymentProductSession(302, sessionContext).then(\n        (merchantSession) => {\n          try {\n            applePaySession.completeMerchantValidation(JSON.parse(merchantSession.paymentProductSession302SpecificOutput!.sessionObject));\n          } catch (e) {\n            promise.reject(e);\n            applePaySession.abort();\n          }\n        },\n        (errorJSON) => {\n          promise.reject(errorJSON);\n          applePaySession.abort();\n        }\n      );\n    };\n\n    applePaySession.onpaymentauthorized = function (event: ApplePayJS.ApplePayPaymentAuthorizedEvent): void {\n      if (!event.payment.token) {\n        const status = ApplePaySession.STATUS_FAILURE;\n        promise.reject({ message: \"Error payment authorization\" });\n        applePaySession.completePayment(status);\n      } else {\n        const status = ApplePaySession.STATUS_SUCCESS;\n        promise.resolve({ message: \"Payment authorized\", data: event.payment.token });\n        applePaySession.completePayment(status);\n      }\n    };\n    return promise;\n  }\n}\n\nexport = ApplePay;\n","///<amd-module name=\"connectsdk.AuthenticationIndicator\"/>\n\nimport { AuthenticationIndicatorJSON } from \"./apimodel\";\n\nclass AuthenticationIndicator {\n  readonly name: string;\n  readonly value: string;\n\n  constructor(readonly json: AuthenticationIndicatorJSON) {\n    this.name = json.name;\n    this.value = json.value;\n  }\n}\n\nexport = AuthenticationIndicator;\n","///<amd-module name=\"connectsdk.PaymentProduct302SpecificData\"/>\n\nimport { PaymentProduct302SpecificDataJSON } from \"./apimodel\";\n\nclass PaymentProduct302SpecificData {\n  readonly networks: string[];\n\n  constructor(readonly json: PaymentProduct302SpecificDataJSON) {\n    this.networks = json.networks;\n  }\n}\n\nexport = PaymentProduct302SpecificData;\n","///<amd-module name=\"connectsdk.PaymentProduct320SpecificData\"/>\n\nimport { PaymentProduct320SpecificDataJSON } from \"./apimodel\";\n\nclass PaymentProduct320SpecificData {\n  readonly gateway: string;\n  readonly networks: string[];\n\n  constructor(readonly json: PaymentProduct320SpecificDataJSON) {\n    this.gateway = json.gateway;\n    this.networks = json.networks;\n  }\n}\n\nexport = PaymentProduct320SpecificData;\n","///<amd-module name=\"connectsdk.PaymentProduct863SpecificData\"/>\n\nimport { PaymentProduct863SpecificDataJSON } from \"./apimodel\";\n\nclass PaymentProduct863SpecificData {\n  readonly integrationTypes: string[];\n\n  constructor(readonly json: PaymentProduct863SpecificDataJSON) {\n    this.integrationTypes = json.integrationTypes;\n  }\n}\n\nexport = PaymentProduct863SpecificData;\n","///<amd-module name=\"connectsdk.PaymentProductDisplayHints\"/>\n\nimport { PaymentProductDisplayHintsJSON } from \"./apimodel\";\n\nclass PaymentProductDisplayHints {\n  readonly displayOrder: number;\n  readonly label?: string;\n  readonly logo: string;\n\n  constructor(readonly json: PaymentProductDisplayHintsJSON) {\n    this.displayOrder = json.displayOrder;\n    this.label = json.label;\n    this.logo = json.logo;\n  }\n}\n\nexport = PaymentProductDisplayHints;\n","///<amd-module name=\"connectsdk.BasicPaymentProduct\"/>\n\nimport AccountOnFile = require(\"./AccountOnFile\");\nimport AuthenticationIndicator = require(\"./AuthenticationIndicator\");\nimport PaymentProduct302SpecificData = require(\"./PaymentProduct302SpecificData\");\nimport PaymentProduct320SpecificData = require(\"./PaymentProduct320SpecificData\");\nimport PaymentProduct863SpecificData = require(\"./PaymentProduct863SpecificData\");\nimport PaymentProductDisplayHints = require(\"./PaymentProductDisplayHints\");\nimport { BasicPaymentProductJSON } from \"./apimodel\";\n\nfunction _parseJSON(_json: BasicPaymentProductJSON, _accountsOnFile: AccountOnFile[], _accountOnFileById: { [id: number]: AccountOnFile | undefined }): void {\n  if (_json.accountsOnFile) {\n    for (const aof of _json.accountsOnFile) {\n      const accountOnFile = new AccountOnFile(aof);\n      _accountsOnFile.push(accountOnFile);\n      _accountOnFileById[accountOnFile.id] = accountOnFile;\n    }\n  }\n}\n\nclass BasicPaymentProduct {\n  readonly accountsOnFile: AccountOnFile[];\n  readonly accountOnFileById: { [id: number]: AccountOnFile | undefined };\n  readonly allowsRecurring: boolean;\n  readonly allowsTokenization: boolean;\n  readonly autoTokenized: boolean;\n  readonly allowsInstallments: boolean;\n  readonly authenticationIndicator?: AuthenticationIndicator;\n  readonly acquirerCountry?: string;\n  readonly canBeIframed?: boolean;\n  readonly deviceFingerprintEnabled: boolean;\n  readonly displayHints: PaymentProductDisplayHints;\n  readonly id: number;\n  readonly isJavaScriptRequired?: boolean;\n  readonly maxAmount?: number;\n  readonly minAmount?: number;\n  readonly paymentMethod: string;\n  readonly mobileIntegrationLevel: string;\n  readonly usesRedirectionTo3rdParty: boolean;\n  readonly paymentProduct302SpecificData?: PaymentProduct302SpecificData;\n  readonly paymentProduct320SpecificData?: PaymentProduct320SpecificData;\n  readonly paymentProduct863SpecificData?: PaymentProduct863SpecificData;\n  readonly paymentProductGroup?: string;\n  readonly supportsMandates?: boolean;\n  readonly type = \"product\";\n\n  constructor(readonly json: BasicPaymentProductJSON) {\n    this.json.type = \"product\";\n    this.accountsOnFile = [];\n    this.accountOnFileById = {};\n    this.allowsRecurring = json.allowsRecurring;\n    this.allowsTokenization = json.allowsTokenization;\n    this.autoTokenized = json.autoTokenized;\n    this.allowsInstallments = json.allowsInstallments;\n    this.acquirerCountry = json.acquirerCountry;\n    this.canBeIframed = json.canBeIframed;\n    this.deviceFingerprintEnabled = json.deviceFingerprintEnabled;\n    this.displayHints = new PaymentProductDisplayHints(json.displayHints);\n    this.id = json.id;\n    this.isJavaScriptRequired = json.isJavaScriptRequired;\n    this.maxAmount = json.maxAmount;\n    this.minAmount = json.minAmount;\n    this.paymentMethod = json.paymentMethod;\n    this.mobileIntegrationLevel = json.mobileIntegrationLevel;\n    this.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\n    this.paymentProductGroup = json.paymentProductGroup;\n    this.supportsMandates = json.supportsMandates;\n\n    if (json.authenticationIndicator) {\n      this.authenticationIndicator = new AuthenticationIndicator(json.authenticationIndicator);\n    }\n    if (json.paymentProduct302SpecificData) {\n      this.paymentProduct302SpecificData = new PaymentProduct302SpecificData(json.paymentProduct302SpecificData);\n    }\n    if (json.paymentProduct320SpecificData) {\n      this.paymentProduct320SpecificData = new PaymentProduct320SpecificData(json.paymentProduct320SpecificData);\n    }\n    if (json.paymentProduct863SpecificData) {\n      this.paymentProduct863SpecificData = new PaymentProduct863SpecificData(json.paymentProduct863SpecificData);\n    }\n\n    _parseJSON(json, this.accountsOnFile, this.accountOnFileById);\n  }\n\n  copy(): BasicPaymentProduct {\n    const json = JSON.parse(JSON.stringify(this.json)) as BasicPaymentProductJSON;\n    return new BasicPaymentProduct(json);\n  }\n}\n\nexport = BasicPaymentProduct;\n","///<amd-module name=\"connectsdk.BasicPaymentProductGroup\"/>\n\nimport AccountOnFile = require(\"./AccountOnFile\");\nimport { BasicPaymentProductGroupJSON } from \"./apimodel\";\nimport PaymentProductDisplayHints = require(\"./PaymentProductDisplayHints\");\n\nfunction _parseJSON(_json: BasicPaymentProductGroupJSON, _accountsOnFile: AccountOnFile[], _accountOnFileById: { [id: number]: AccountOnFile | undefined }): void {\n  if (_json.accountsOnFile) {\n    for (const aof of _json.accountsOnFile) {\n      const accountOnFile = new AccountOnFile(aof);\n      _accountsOnFile.push(accountOnFile);\n      _accountOnFileById[accountOnFile.id] = accountOnFile;\n    }\n  }\n}\n\nclass BasicPaymentProductGroup {\n  readonly id: string;\n  readonly acquirerCountry?: string;\n  readonly allowsInstallments: boolean;\n  readonly displayHints: PaymentProductDisplayHints;\n  readonly accountsOnFile: AccountOnFile[];\n  readonly accountOnFileById: { [id: number]: AccountOnFile | undefined };\n  readonly type = \"group\";\n\n  constructor(readonly json: BasicPaymentProductGroupJSON) {\n    this.json.type = \"group\";\n    this.id = json.id;\n    //this.acquirerCountry = json.acquirerCountry;\n    this.allowsInstallments = json.allowsInstallments;\n    this.displayHints = new PaymentProductDisplayHints(json.displayHints);\n    this.accountsOnFile = [];\n    this.accountOnFileById = {};\n\n    _parseJSON(json, this.accountsOnFile, this.accountOnFileById);\n  }\n\n  copy(): BasicPaymentProductGroup {\n    const json = JSON.parse(JSON.stringify(this.json)) as BasicPaymentProductGroupJSON;\n    return new BasicPaymentProductGroup(json);\n  }\n}\n\nexport = BasicPaymentProductGroup;\n","///<amd-module name=\"connectsdk.BasicPaymentItem\"/>\n\nimport BasicPaymentProduct = require(\"./BasicPaymentProduct\");\nimport BasicPaymentProductGroup = require(\"./BasicPaymentProductGroup\");\n\nexport type BasicPaymentItem = BasicPaymentProduct | BasicPaymentProductGroup;\n\nexport type BasicPaymentItemByIdMap = {\n  [id: number]: BasicPaymentItem;\n  [id: string]: BasicPaymentItem;\n};\n","///<amd-module name=\"connectsdk.BasicPaymentProductGroups\"/>\n\nimport AccountOnFile = require(\"./AccountOnFile\");\nimport { PaymentProductGroupsJSON } from \"./apimodel\";\nimport BasicPaymentProductGroup = require(\"./BasicPaymentProductGroup\");\n\nfunction _parseJson(\n  _json: PaymentProductGroupsJSON,\n  _paymentProductGroups: BasicPaymentProductGroup[],\n  _accountsOnFile: AccountOnFile[],\n  _paymentProductGroupById: { [id: string]: BasicPaymentProductGroup | undefined },\n  _accountOnFileById: { [id: number]: AccountOnFile | undefined }\n): void {\n  if (_json.paymentProductGroups) {\n    for (const productGroup of _json.paymentProductGroups) {\n      const paymentProductGroup = new BasicPaymentProductGroup(productGroup);\n      _paymentProductGroups.push(paymentProductGroup);\n      _paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\n\n      if (paymentProductGroup.accountsOnFile) {\n        for (const aof of paymentProductGroup.accountsOnFile) {\n          _accountsOnFile.push(aof);\n          _accountOnFileById[aof.id] = aof;\n        }\n      }\n    }\n  }\n}\n\nclass BasicPaymentProductGroups {\n  readonly basicPaymentProductGroups: BasicPaymentProductGroup[];\n  readonly basicPaymentProductGroupById: { [id: string]: BasicPaymentProductGroup | undefined };\n  readonly accountsOnFile: AccountOnFile[];\n  readonly accountOnFileById: { [id: number]: AccountOnFile | undefined };\n\n  constructor(readonly json: PaymentProductGroupsJSON) {\n    this.basicPaymentProductGroups = [];\n    this.basicPaymentProductGroupById = {};\n    this.accountsOnFile = [];\n    this.accountOnFileById = {};\n\n    _parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\n  }\n}\n\nexport = BasicPaymentProductGroups;\n","///<amd-module name=\"connectsdk.BasicPaymentProducts\"/>\n\nimport AccountOnFile = require(\"./AccountOnFile\");\nimport { PaymentProductsJSON } from \"./apimodel\";\nimport BasicPaymentProduct = require(\"./BasicPaymentProduct\");\n\nfunction _parseJson(\n  _json: PaymentProductsJSON,\n  _paymentProducts: BasicPaymentProduct[],\n  _accountsOnFile: AccountOnFile[],\n  _paymentProductById: { [id: number]: BasicPaymentProduct | undefined },\n  _accountOnFileById: { [id: number]: AccountOnFile | undefined },\n  _paymentProductByAccountOnFileId: { [id: number]: BasicPaymentProduct | undefined }\n): void {\n  if (_json.paymentProducts) {\n    for (const product of _json.paymentProducts) {\n      const paymentProduct = new BasicPaymentProduct(product);\n      _paymentProducts.push(paymentProduct);\n      _paymentProductById[paymentProduct.id] = paymentProduct;\n\n      if (paymentProduct.accountsOnFile) {\n        for (const aof of paymentProduct.accountsOnFile) {\n          _accountsOnFile.push(aof);\n          _accountOnFileById[aof.id] = aof;\n          _paymentProductByAccountOnFileId[aof.id] = paymentProduct;\n        }\n      }\n    }\n  }\n}\n\nclass BasicPaymentProducts {\n  readonly basicPaymentProducts: BasicPaymentProduct[];\n  readonly basicPaymentProductById: { [id: number]: BasicPaymentProduct | undefined };\n  readonly basicPaymentProductByAccountOnFileId: { [id: number]: BasicPaymentProduct | undefined };\n  readonly accountsOnFile: AccountOnFile[];\n  readonly accountOnFileById: { [id: number]: AccountOnFile | undefined };\n\n  constructor(readonly json: PaymentProductsJSON) {\n    this.basicPaymentProducts = [];\n    this.basicPaymentProductById = {};\n    this.basicPaymentProductByAccountOnFileId = {};\n    this.accountsOnFile = [];\n    this.accountOnFileById = {};\n\n    _parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\n  }\n}\n\nexport = BasicPaymentProducts;\n","///<amd-module name=\"connectsdk.BasicPaymentItems\"/>\n\nimport AccountOnFile = require(\"./AccountOnFile\");\nimport BasicPaymentProductGroups = require(\"./BasicPaymentProductGroups\");\nimport BasicPaymentProducts = require(\"./BasicPaymentProducts\");\nimport { BasicPaymentItem, BasicPaymentItemByIdMap } from \"./BasicPaymentItem\";\n\nfunction _parseJson(_products: BasicPaymentProducts, _groups: BasicPaymentProductGroups | null | undefined, _basicPaymentItems: BasicPaymentItems): void {\n  if (_groups) {\n    const groupReplacements: { [name: string]: true | undefined } = {};\n    for (const product of _products.basicPaymentProducts) {\n      // becomes true if the product has been matched with a group.\n      let groupMatch = false;\n      for (const group of _groups.basicPaymentProductGroups) {\n        if (product.paymentProductGroup === group.id) {\n          // Product has been matched to a group\n          groupMatch = true;\n          if (!groupReplacements[group.id]) {\n            // Group has not been added as replacement yet\n            _basicPaymentItems.basicPaymentItems.push(group.copy());\n            groupReplacements[group.id] = true;\n          }\n          // Products can not match with more then one group\n          break;\n        }\n      }\n      if (!groupMatch) {\n        _basicPaymentItems.basicPaymentItems.push(product.copy());\n      }\n    }\n  } else {\n    for (const product of _products.basicPaymentProducts) {\n      _basicPaymentItems.basicPaymentItems.push(product.copy());\n    }\n  }\n  for (const basicPaymentItem of _basicPaymentItems.basicPaymentItems) {\n    _basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\n    if (basicPaymentItem.accountsOnFile) {\n      for (const aof of basicPaymentItem.accountsOnFile) {\n        _basicPaymentItems.accountsOnFile.push(aof);\n        _basicPaymentItems.accountOnFileById[aof.id] = aof;\n      }\n    }\n  }\n}\n\nclass BasicPaymentItems {\n  readonly basicPaymentItems: BasicPaymentItem[];\n  readonly basicPaymentItemById: BasicPaymentItemByIdMap;\n  readonly accountsOnFile: AccountOnFile[];\n  readonly accountOnFileById: { [id: number]: AccountOnFile | undefined };\n\n  constructor(products: BasicPaymentProducts, groups?: BasicPaymentProductGroups | null) {\n    this.basicPaymentItems = [];\n    this.basicPaymentItemById = {};\n    this.accountsOnFile = [];\n    this.accountOnFileById = {};\n\n    _parseJson(products, groups, this);\n  }\n}\n\nexport = BasicPaymentItems;\n","///<amd-module name=\"connectsdk.C2SCommunicatorConfiguration\"/>\n\nimport { SessionDetails } from \"./types\";\n\nclass C2SCommunicatorConfiguration {\n  readonly clientSessionId: string;\n  readonly customerId: string;\n  readonly clientApiUrl: string;\n  readonly assetUrl: string;\n\n  constructor(sessionDetails: SessionDetails, apiVersion: string) {\n    this.clientSessionId = sessionDetails.clientSessionId;\n    this.customerId = sessionDetails.customerId;\n    this.clientApiUrl = sessionDetails.clientApiUrl;\n    this.assetUrl = sessionDetails.assetUrl;\n\n    if (!this.clientApiUrl) {\n      throw new Error(\"This version of the connectSDK requires an clientApiUrl, which you did not provide.\");\n    }\n    if (!this.assetUrl) {\n      throw new Error(\"This version of the connectSDK requires an assetUrl, which you did not provide.\");\n    }\n\n    // now that the clientApiUrl is set check when if the api version is set in the URL, its the correct version break if not.\n    if (this.clientApiUrl.indexOf(\"//\") === -1) {\n      throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\n    }\n    const tester = this.clientApiUrl.split(\"/\"); // [0] = (http(s): || \"\") , [1] = \"\", [2] = \"host:port\", [3+] = path\n    if (tester[0] !== \"\" && tester[0].indexOf(\"http\") !== 0) {\n      throw new Error(\"A valid URL is required for the clientApiUrl, you provided '\" + this.clientApiUrl + \"'\");\n    }\n    // if you cannot provide an URL that starts with (http(s)::)// and want an error: please provide a PR :)\n\n    const path = tester.splice(3).join(\"/\"); // the path (if no path; path = \"\").\n    if (!path) {\n      this.clientApiUrl += \"/\" + apiVersion;\n    } else if (path === \"client\") {\n      this.clientApiUrl += \"/\" + apiVersion.split(\"/\")[1];\n    } else if (path.indexOf(apiVersion) !== 0 || path.length !== apiVersion.length) {\n      throw new Error(\"This version of the connectSDK is only compatible with \" + apiVersion + \", you supplied: '\" + path + \"'\");\n    }\n  }\n}\n\nexport = C2SCommunicatorConfiguration;\n","///<amd-module name=\"connectsdk.C2SPaymentProductContext\"/>\n\nimport { PaymentDetails } from \"./types\";\n\nclass C2SPaymentProductContext {\n  readonly totalAmount: number;\n  readonly countryCode: string;\n  readonly isRecurring: boolean;\n  readonly currency: string;\n  readonly locale?: string;\n  readonly isInstallments: boolean;\n  readonly accountOnFileId?: number;\n  readonly environment?: string | \"PROD\";\n\n  constructor(payload: PaymentDetails) {\n    this.totalAmount = payload.totalAmount;\n    this.countryCode = payload.countryCode;\n    this.isRecurring = payload.isRecurring;\n    this.currency = payload.currency;\n\n    if (typeof payload.locale !== \"undefined\") {\n      this.locale = payload.locale;\n    }\n\n    this.isInstallments = payload.isInstallments || false;\n\n    if (typeof payload.accountOnFileId !== \"undefined\") {\n      this.accountOnFileId = payload.accountOnFileId;\n    }\n\n    if (typeof payload.environment !== \"undefined\") {\n      this.environment = payload.environment;\n    }\n  }\n}\n\nexport = C2SPaymentProductContext;\n","///<amd-module name=\"connectsdk.GooglePay\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport C2SPaymentProductContext = require(\"./C2SPaymentProductContext\");\nimport Promise = require(\"./promise\");\nimport Util = require(\"./Util\");\nimport { PaymentProduct320SpecificDataJSON } from \"./apimodel\";\nimport { PaymentProductSpecificInputs } from \"./types\";\n\nconst util = Util.getInstance();\n\nclass GooglePay {\n  readonly isGooglePayAvailable: (\n    context: C2SPaymentProductContext,\n    paymentProductSpecificInputs: PaymentProductSpecificInputs,\n    googlePayData: PaymentProduct320SpecificDataJSON\n  ) => Promise<boolean>;\n  readonly isMerchantIdProvided: (paymentProductSpecificInputs?: PaymentProductSpecificInputs) => boolean;\n\n  constructor() {\n    let _paymentProductSpecificInputs: PaymentProductSpecificInputs = {};\n    let _context: C2SPaymentProductContext;\n    let _gateway = \"\";\n    let _networks: google.payments.api.CardNetwork[] = [];\n    let _paymentsClient: google.payments.api.PaymentsClient;\n\n    // Only base is needed to trigger isReadyToPay\n    function _getBaseCardPaymentMethod(): google.payments.api.IsReadyToPayPaymentMethodSpecification {\n      return {\n        type: \"CARD\",\n        parameters: {\n          allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n          allowedCardNetworks: _networks,\n        },\n      };\n    }\n\n    function _getTokenizationSpecification(): google.payments.api.PaymentGatewayTokenizationSpecification {\n      return {\n        type: \"PAYMENT_GATEWAY\",\n        parameters: {\n          gateway: _gateway,\n          gatewayMerchantId: _paymentProductSpecificInputs.googlePay!.gatewayMerchantId,\n        },\n      };\n    }\n\n    // To prefetch payment data we need base + tokenizationSpecification\n    function _getCardPaymentMethod(): google.payments.api.PaymentMethodSpecification {\n      return Object.assign({}, _getBaseCardPaymentMethod(), {\n        tokenizationSpecification: _getTokenizationSpecification(),\n      });\n    }\n\n    function _getTransactionInfo(): google.payments.api.TransactionInfo {\n      return {\n        totalPriceStatus: \"NOT_CURRENTLY_KNOWN\",\n        currencyCode: _context?.currency,\n      } as google.payments.api.TransactionInfo;\n      // Note that the cast is necessary, because the TypeScript definition makes totalPrice required even though it isn't\n    }\n\n    function _getMerchantInfo(): google.payments.api.MerchantInfo {\n      return {\n        merchantName: _paymentProductSpecificInputs.googlePay!.merchantName,\n      } as google.payments.api.MerchantInfo;\n      // Note that the cast is necessary, because the TypeScript definition makes merchantId required even though it isn't\n    }\n\n    function _getGooglePaymentDataRequest(): google.payments.api.IsReadyToPayRequest {\n      return {\n        apiVersion: 2,\n        apiVersionMinor: 0,\n        allowedPaymentMethods: [_getBaseCardPaymentMethod()],\n      };\n    }\n\n    function _getGooglePaymentDataRequestForPrefetch(): google.payments.api.PaymentDataRequest {\n      // transactionInfo must be set but does not affect cache\n      return {\n        apiVersion: 2,\n        apiVersionMinor: 0,\n        allowedPaymentMethods: [_getCardPaymentMethod()],\n        transactionInfo: _getTransactionInfo(),\n        merchantInfo: _getMerchantInfo(),\n      };\n    }\n\n    function _getGooglePaymentsClient(): google.payments.api.PaymentsClient | undefined {\n      if (typeof _paymentsClient === \"undefined\") {\n        let googlePayEnvironment: google.payments.api.Environment = \"TEST\";\n        if (_context!.environment === \"PROD\") {\n          googlePayEnvironment = \"PRODUCTION\";\n        }\n        if (window.google) {\n          _paymentsClient = new google.payments.api.PaymentsClient({ environment: googlePayEnvironment });\n        } else {\n          console.error(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\n        }\n      }\n      return _paymentsClient;\n    }\n\n    /**\n     * Prefetch payment data to improve performance\n     *\n     * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}\n     */\n    function _prefetchGooglePaymentData(): void {\n      const paymentDataRequest = _getGooglePaymentDataRequestForPrefetch();\n\n      const paymentsClient = _getGooglePaymentsClient()!;\n\n      const googlePaySpecificInputs = _paymentProductSpecificInputs.googlePay!;\n      // Prefetching is only effective when all information is provided\n      if (googlePaySpecificInputs.gatewayMerchantId && googlePaySpecificInputs.merchantName) {\n        paymentsClient.prefetchPaymentData(paymentDataRequest);\n      } else {\n        console.warn(\n          \"Prefetching payment data was not triggered because of missing information. \" +\n            \"gatewayMerchantId: \" +\n            googlePaySpecificInputs.gatewayMerchantId +\n            \", merchantName: \" +\n            googlePaySpecificInputs.merchantName\n        );\n      }\n    }\n\n    this.isGooglePayAvailable = (\n      context: C2SPaymentProductContext,\n      paymentProductSpecificInputs: PaymentProductSpecificInputs,\n      googlePayData: PaymentProduct320SpecificDataJSON\n    ): Promise<boolean> => {\n      _context = context;\n      _paymentProductSpecificInputs = paymentProductSpecificInputs;\n      _gateway = googlePayData.gateway;\n      _networks = googlePayData.networks as google.payments.api.CardNetwork[];\n\n      if (_networks && _networks.length > 0) {\n        const paymentsClient = _getGooglePaymentsClient();\n        if (!paymentsClient) {\n          util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n          return Promise.reject(\"The Google Pay API script was not loaded https://developers.google.com/pay/api/web/guides/tutorial#js-load\");\n        } else {\n          const promise = new Promise<boolean>();\n          paymentsClient\n            .isReadyToPay(_getGooglePaymentDataRequest())\n            .then((response) => {\n              promise.resolve(response.result);\n              _prefetchGooglePaymentData();\n            })\n            .catch((e) => {\n              util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n              promise.reject(e);\n            });\n          return promise;\n        }\n      } else {\n        util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n        return Promise.reject(\"There are no product networks available\");\n      }\n    };\n\n    this.isMerchantIdProvided = (paymentProductSpecificInputs?: PaymentProductSpecificInputs): boolean => {\n      if (paymentProductSpecificInputs && paymentProductSpecificInputs.googlePay && paymentProductSpecificInputs.googlePay.merchantId) {\n        return !!paymentProductSpecificInputs.googlePay.merchantId;\n      } else {\n        util.paymentProductsThatAreNotSupportedInThisBrowser.push(util.googlePayPaymentProductId);\n        return false;\n      }\n    };\n  }\n}\n\nexport = GooglePay;\n","///<amd-module name=\"connectsdk.IinDetailsResponse\"/>\n\nimport { ErrorResponseJSON, GetIINDetailsResponseJSON, IinDetailJSON } from \"./apimodel\";\nimport { IinDetailsStatus } from \"./types\";\n\nclass IinDetailsResponse {\n  readonly countryCode?: string;\n  readonly paymentProductId?: number;\n  readonly isAllowedInContext?: boolean;\n  readonly coBrands?: IinDetailJSON[];\n\n  constructor(readonly status: IinDetailsStatus, readonly json?: GetIINDetailsResponseJSON | ErrorResponseJSON) {\n    if (json) {\n      // If the JSON is actually an ErrorResponseJSON, these properties don't exist and the fields will remain undefined\n      json = json as GetIINDetailsResponseJSON;\n      this.countryCode = json.countryCode;\n      this.paymentProductId = json.paymentProductId;\n      this.isAllowedInContext = json.isAllowedInContext;\n      this.coBrands = json.coBrands;\n    }\n  }\n}\n\nexport = IinDetailsResponse;\n","///<amd-module name=\"connectsdk.net\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport Promise = require(\"./promise\");\nimport { AjaxRequest, AjaxRequestOptions, JSONPOptions, SdkResponse } from \"./types\";\n\n/**\n * Removes leading and trailing whitespace.\n */\nconst trim = typeof \"\".trim === \"function\" ? (s: string): string => s.trim() : (s: string): string => s.replace(/^\\s\\s*/, \"\").replace(/\\s\\s*$/, \"\");\n\nconst parseXML = window.DOMParser\n  ? (text: string): unknown => new DOMParser().parseFromString(text, \"text/xml\")\n  : (text: string): unknown => {\n      const xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n      xml.async = \"false\";\n      xml.loadXML(text);\n      return xml;\n    };\n\nclass JSONPCallback {\n  private readonly methodName: string;\n  private scriptTag?: HTMLScriptElement;\n\n  constructor(private readonly url: string, private readonly success: (json: unknown) => void, private readonly failure: () => void) {\n    this.methodName = \"__connectsdk_jsonp_\" + new Date().getTime();\n\n    const runCallback = (json: unknown): void => {\n      this.success(json);\n      this.teardown();\n    };\n\n    window[this.methodName] = runCallback;\n  }\n\n  run(): void {\n    this.scriptTag = document.createElement(\"script\");\n    this.scriptTag.id = this.methodName;\n    this.scriptTag.src = this.url.replace(\"{callback}\", this.methodName);\n    this.scriptTag.onerror = (): void => this.failure();\n    document.body.appendChild(this.scriptTag);\n  }\n\n  teardown(): void {\n    window[this.methodName] = null;\n    try {\n      delete window[this.methodName];\n    } catch (e) {\n      /* ignore */\n    }\n    if (this.scriptTag) {\n      document.body.removeChild(this.scriptTag);\n    }\n  }\n}\n\nfunction xhr(): XMLHttpRequest {\n  if (typeof XMLHttpRequest !== \"undefined\" && (window.location.protocol !== \"file:\" || !window.ActiveXObject)) {\n    return new XMLHttpRequest();\n  } else {\n    try {\n      return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n    } catch (e) {\n      /* ignore */\n    }\n    try {\n      return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n    } catch (e) {\n      /* ignore */\n    }\n    try {\n      return new ActiveXObject(\"Msxml2.XMLHTTP\");\n    } catch (e) {\n      /* ignore */\n    }\n  }\n  throw new Error(\"Could not initialze xhr\");\n}\n\nfunction successfulRequest(request: XMLHttpRequest): boolean {\n  return (request.status >= 200 && request.status < 300) || request.status == 304 || (request.status == 0 && !!request.responseText);\n}\n\nclass Net {\n  /**\n   * Serialize JavaScript for HTTP requests.\n   *\n   * @param {Object} object An Array or Object\n   * @returns {String} A string suitable for a GET or POST request\n   */\n  static serialize(object: object | string): string {\n    if (!object) {\n      return \"\";\n    }\n\n    if (typeof object === \"string\") {\n      return object;\n    }\n\n    const results: string[] = [];\n    for (const key in object) {\n      results.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]));\n    }\n    return results.join(\"&\");\n  }\n\n  /**\n   * Parses JSON represented as a string.\n   *\n   * @param {String} string The original string\n   * @returns {Object} A JavaScript object\n   */\n  static parseJSON(string: string): unknown {\n    if (typeof string !== \"string\" || !string) {\n      return null;\n    }\n    string = trim(string);\n    return window.JSON.parse(string);\n  }\n\n  /**\n   * Parses XML represented as a string.\n   *\n   * @param {String} string The original string\n   * @returns {Object} A JavaScript object\n   */\n  static parseXML(text: string): unknown {\n    return parseXML(text);\n  }\n\n  /**\n   * Creates an Ajax request.  Returns an object that can be used\n   * to chain calls.  For example:\n   *\n   *      $t.post(\"/post-test\")\n   *        .data({ key: \"value\" })\n   *        .end(function(res) {\n   *          assert.equal(\"value\", res.responseText);\n   *        });\n   *\n   *      $t.get(\"/get-test\")\n   *        .set(\"Accept\", \"text/html\")\n   *        .end(function(res) {\n   *          assert.equal(\"Sample text\", res.responseText);\n   *        });\n   *\n   * The available chained methods are:\n   *\n   * `set` -- set a HTTP header\n   * `data` -- the postBody\n   * `end` -- send the request over the network, and calls your callback with a `res` object\n   * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\n   *\n   * @param {String} The URL to call\n   * @param {Object} Optional settings\n   * @returns {Object} A chainable object for further configuration\n   */\n  static ajax(url: string, options?: AjaxRequestOptions): AjaxRequest {\n    const request = xhr();\n    const promise = new Promise<SdkResponse>();\n\n    const opts = typeof options !== \"undefined\" ? options : {};\n\n    function respondToReadyState(): void {\n      if (request.readyState == 4) {\n        const contentType = request[\"mimeType\"] || request.getResponseHeader(\"content-type\") || \"\";\n\n        const response: SdkResponse = {\n          status: request.status,\n          responseText: request.responseText,\n          success: successfulRequest(request),\n        };\n\n        if (/json/.test(contentType)) {\n          response.responseJSON = Net.parseJSON(request.responseText);\n        } else if (/xml/.test(contentType)) {\n          response.responseXML = Net.parseXML(request.responseText);\n        }\n\n        if (opts.callback) {\n          return opts.callback(response, request);\n        }\n\n        if (response.success) {\n          if (opts.success) {\n            opts.success(response, request);\n          }\n          promise.resolve(response);\n        } else {\n          if (opts.error) {\n            opts.error(response, request);\n          }\n          promise.reject(response);\n        }\n      }\n    }\n\n    function setHeaders(): void {\n      const defaults = {\n        Accept: \"text/javascript, application/json, text/html, application/xml, text/xml, */*\",\n        \"Content-Type\": \"application/json\",\n      };\n\n      opts.headers = opts.headers || {};\n      /**\n       * Merge headers with defaults.\n       */\n      for (const name in defaults) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!opts.headers.hasOwnProperty(name)) {\n          opts.headers[name] = defaults[name];\n        }\n      }\n      for (const name in opts.headers) {\n        request.setRequestHeader(name, opts.headers[name]!);\n      }\n    }\n\n    opts.method = opts.method ? opts.method.toLowerCase() : \"get\";\n    opts.asynchronous = opts.asynchronous || true;\n    opts.postBody = opts.postBody || \"\";\n    request.onreadystatechange = respondToReadyState;\n    request.open(opts.method, url, opts.asynchronous);\n\n    opts.headers = opts.headers || {};\n    if (opts.contentType) {\n      opts.headers[\"Content-Type\"] = opts.contentType;\n    }\n\n    if (typeof opts.postBody !== \"string\") {\n      // Serialize JavaScript\n      opts.postBody = Net.serialize(opts.postBody);\n    }\n\n    function send(): void {\n      try {\n        setHeaders();\n        request.send(opts.postBody);\n      } catch (e) {\n        if (opts.error) {\n          opts.error();\n        }\n      }\n    }\n\n    const chain = {\n      set: (key: string, value: string): AjaxRequest => {\n        opts.headers = opts.headers || {};\n        opts.headers[key] = value;\n        return chain;\n      },\n      send: (data: object | string, callback: (response: SdkResponse, request: XMLHttpRequest) => void): AjaxRequest => {\n        opts.postBody = Net.serialize(data);\n        opts.callback = callback;\n        send();\n        return chain;\n      },\n      end: (callback?: (response: SdkResponse, request: XMLHttpRequest) => void): AjaxRequest => {\n        opts.callback = callback;\n        send();\n        return chain;\n      },\n      data: (data: object | string): AjaxRequest => {\n        opts.postBody = Net.serialize(data);\n        return chain;\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      then: (success: (result: SdkResponse) => void, failure?: (result: any) => void): AjaxRequest => {\n        chain.end();\n        promise.then(success, failure);\n        return chain;\n      },\n    };\n    return chain;\n  }\n\n  /**\n   * An Ajax GET request.\n   *\n   *      $t.get(\"/get-test\")\n   *        .set(\"Accept\", \"text/html\")\n   *        .end(function(res) {\n   *          assert.equal(\"Sample text\", res.responseText);\n   *        });\n   *\n   * @param {String} url The URL to request\n   * @param {Object} options The Ajax request options\n   * @returns {Object} A chainable object for further configuration\n   */\n  static get(url: string, options?: AjaxRequestOptions): AjaxRequest {\n    if (typeof options === \"undefined\") {\n      options = {};\n    }\n    options.method = \"get\";\n    return Net.ajax(url, options);\n  }\n\n  /**\n   * An Ajax POST request.\n   *\n   *      $t.post(\"/post-test\")\n   *        .data({ key: \"value\" })\n   *        .end(function(res) {\n   *          assert.equal(\"value\", res.responseText);\n   *        });\n   *\n   * @param {String} url The URL to request\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\n   * @returns {Object} An object for further chaining with promises\n   */\n  static post(url: string, options?: AjaxRequestOptions): AjaxRequest {\n    if (typeof options === \"undefined\") {\n      options = {};\n    }\n    options.method = \"post\";\n    return Net.ajax(url, options);\n  }\n\n  /**\n   * A jsonp request.  Example:\n   *\n   *     var url = \"http://feeds.delicious.com/v1/json/\";\n   *     url += \"alex_young/javascript?callback={callback}\";\n   *\n   *     connectsdk.net.jsonp(url, {\n   *       success: function(json) {\n   *         console.log(json);\n   *       }\n   *     });\n   *\n   * @param {String} url The URL to request\n   */\n  static jsonp(url: string, options: JSONPOptions): void {\n    const failure =\n      typeof options.failure !== \"undefined\"\n        ? options.failure\n        : (): void => {\n            /* ignore */\n          };\n    const callback = new JSONPCallback(url, options.success, failure);\n    callback.run();\n  }\n}\n\nexport = Net;\n","///<amd-module name=\"connectsdk.PublicKeyResponse\"/>\n\nimport { PublicKeyJSON } from \"./apimodel\";\n\nclass PublicKeyResponse {\n  readonly keyId: string;\n  readonly publicKey: string;\n\n  constructor(readonly json: PublicKeyJSON) {\n    this.keyId = json.keyId;\n    this.publicKey = json.publicKey;\n  }\n}\n\nexport = PublicKeyResponse;\n","///<amd-module name=\"connectsdk.C2SCommunicator\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport ApplePay = require(\"./ApplePay\");\nimport C2SCommunicatorConfiguration = require(\"./C2SCommunicatorConfiguration\");\nimport C2SPaymentProductContext = require(\"./C2SPaymentProductContext\");\nimport GooglePay = require(\"./GooglePay\");\nimport IinDetailsResponse = require(\"./IinDetailsResponse\");\nimport Net = require(\"./net\");\nimport Promise = require(\"./promise\");\nimport PublicKeyResponse = require(\"./PublicKeyResponse\");\nimport Util = require(\"./Util\");\nimport {\n  BasicPaymentProductJSON,\n  ConvertAmountJSON,\n  CreatePaymentProductSessionRequestJSON,\n  CreatePaymentProductSessionResponseJSON,\n  DirectoryJSON,\n  ErrorResponseJSON,\n  GetCustomerDetailsRequestJSON,\n  GetCustomerDetailsResponseJSON,\n  GetIINDetailsRequestJSON,\n  GetIINDetailsResponseJSON,\n  KeyValuePairJSON,\n  PaymentProduct320SpecificDataJSON,\n  PaymentProductGroupJSON,\n  PaymentProductGroupsJSON,\n  PaymentProductJSON,\n  PaymentProductNetworksResponseJSON,\n  PaymentProductsJSON,\n  PublicKeyJSON,\n  ThirdPartyStatusResponseJSON,\n} from \"./apimodel\";\nimport { ApplePayInitResult, ApplePayPaymentDetails, ApplePaySpecificInput, PaymentDetails, PaymentProductSessionContext, PaymentProductSpecificInputs } from \"./types\";\n\nconst util = Util.getInstance();\n\nclass C2SCommunicator {\n  readonly getBasicPaymentProducts: (context: C2SPaymentProductContext, paymentProductSpecificInputs?: PaymentProductSpecificInputs) => Promise<PaymentProductsJSON>;\n  readonly getBasicPaymentProductGroups: (context: C2SPaymentProductContext) => Promise<PaymentProductGroupsJSON>;\n  readonly getPaymentProduct: (\n    paymentProductId: number,\n    context: C2SPaymentProductContext,\n    paymentProductSpecificInputs?: PaymentProductSpecificInputs\n  ) => Promise<PaymentProductJSON>;\n  readonly getPaymentProductGroup: (paymentProductGroupId: string, context: C2SPaymentProductContext) => Promise<PaymentProductGroupJSON>;\n  readonly getPaymentProductIdByCreditCardNumber: (partialCreditCardNumber: string, context: C2SPaymentProductContext) => Promise<IinDetailsResponse>;\n  readonly convertContextToIinDetailsContext: (partialCreditCardNumber: string, context: C2SPaymentProductContext) => GetIINDetailsRequestJSON;\n  readonly getPublicKey: () => Promise<PublicKeyResponse>;\n  readonly getPaymentProductNetworks: (paymentProductId: number, context: C2SPaymentProductContext) => Promise<PaymentProductNetworksResponseJSON>;\n  readonly getPaymentProductDirectory: (paymentProductId: number, currencyCode: string, countryCode: string) => Promise<DirectoryJSON>;\n  readonly convertAmount: (amount: number, source: string, target: string) => Promise<ConvertAmountJSON>;\n  readonly getThirdPartyPaymentStatus: (paymentId: string) => Promise<ThirdPartyStatusResponseJSON>;\n  readonly getCustomerDetails: (paymentProductId: number, context: GetCustomerDetailsRequestJSON) => Promise<GetCustomerDetailsResponseJSON>;\n  readonly createPaymentProductSession: (paymentProductId: number, context: PaymentProductSessionContext) => Promise<CreatePaymentProductSessionResponseJSON>;\n  readonly initApplePayPayment: (context: PaymentDetails, paymentProductSpecificInput: ApplePaySpecificInput, networks: string[]) => Promise<ApplePayInitResult>;\n  /* Transforms the JSON representation of a payment product (group) so it matches the result of getPaymentProduct and getPaymentProductGroup. */\n  readonly transformPaymentProductJSON: <T extends PaymentProductJSON | PaymentProductGroupJSON>(json: T) => T;\n\n  constructor(c2SCommunicatorConfiguration: C2SCommunicatorConfiguration, paymentProduct?: PaymentProductJSON | PaymentProductGroupJSON) {\n    const _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\n    const _cache: { [cacheKey: string]: unknown } = {};\n    const _providedPaymentProduct = paymentProduct;\n    const _GooglePay = new GooglePay();\n    const _ApplePay = new ApplePay();\n\n    const _mapType = {\n      expirydate: \"tel\",\n      string: \"text\",\n      numericstring: \"tel\",\n      integer: \"number\",\n      expirationDate: \"tel\",\n    };\n\n    function _startsWith(string: string, prefix: string): boolean {\n      return string.indexOf(prefix) === 0;\n    }\n\n    function _endsWith(string: string, suffix: string): boolean {\n      return string.indexOf(suffix, string.length - suffix.length) !== -1;\n    }\n\n    function _formatUrl(url: string): string {\n      return url && _endsWith(url, \"/\") ? url : url + \"/\";\n    }\n\n    function _formatImageUrl(url: string, imageUrl: string): string {\n      url = _formatUrl(url);\n      // _cleanJSON can be called multiple times with the same data (which is cached between calls).\n      // Don't prepend the url after the first time.\n      if (_startsWith(imageUrl, url)) {\n        return imageUrl;\n      }\n      return url + imageUrl;\n    }\n\n    function _constructUrl(path: string): string {\n      return _formatUrl(_c2SCommunicatorConfiguration.clientApiUrl) + _c2SCommunicatorConfiguration.customerId + path;\n    }\n\n    function _constructUrlFromContext(path: string, context: C2SPaymentProductContext, includeLocale = true): string {\n      const urlParameterLocale = includeLocale && context.locale ? \"&locale=\" + context.locale : \"\";\n      return _constructUrl(\n        path +\n          \"?countryCode=\" +\n          context.countryCode +\n          \"&isRecurring=\" +\n          context.isRecurring +\n          \"&amount=\" +\n          context.totalAmount +\n          \"&currencyCode=\" +\n          context.currency +\n          urlParameterLocale\n      );\n    }\n\n    function _constructCacheKeyFromContext(prefix: string, context: C2SPaymentProductContext, includeLocale = true): string {\n      const cacheKeyLocale = includeLocale && context.locale ? context.locale + \"_\" : \"\";\n      return prefix + context.totalAmount + \"_\" + context.countryCode + \"_\" + cacheKeyLocale + context.isRecurring + \"_\" + context.currency;\n    }\n\n    function _constructCacheKeyFromKeyValues(prefix: string, values: KeyValuePairJSON[]): string {\n      let cacheKey = prefix;\n      for (const key in values) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (values.hasOwnProperty(key)) {\n          cacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\n        }\n      }\n      return cacheKey;\n    }\n\n    function _cleanJSON<T extends PaymentProductJSON | PaymentProductGroupJSON>(json: T, url: string): T {\n      for (const field of json.fields) {\n        field.type = field.displayHints && field.displayHints.obfuscate ? \"password\" : _mapType[field.type];\n\n        // helper code for templating tools like Handlebars\n        for (const validatorKey in field.dataRestrictions.validators) {\n          field.validators = field.validators || [];\n          field.validators.push(validatorKey);\n        }\n        if (field.displayHints && field.displayHints.formElement && field.displayHints.formElement.type === \"list\") {\n          field.displayHints.formElement.list = true;\n        }\n\n        // full image paths\n        if (field.displayHints && field.displayHints.tooltip && field.displayHints.tooltip.image) {\n          field.displayHints.tooltip.image = _formatImageUrl(url, field.displayHints.tooltip.image);\n        }\n      }\n      // The server orders in a different way, so we apply the sortorder\n      json.fields.sort((a, b) => {\n        const aDisplayOrder = a.displayHints?.displayOrder ?? 0;\n        const bDisplayOrder = b.displayHints?.displayOrder ?? 0;\n        if (aDisplayOrder < bDisplayOrder) {\n          return -1;\n        }\n        return 1;\n      });\n      // set full image path\n      json.displayHints.logo = _formatImageUrl(url, json.displayHints.logo);\n      if (json.accountsOnFile) {\n        for (const aof of json.accountsOnFile) {\n          aof.displayHints.logo = _formatImageUrl(url, aof.displayHints.logo);\n        }\n      }\n      return json;\n    }\n\n    function _extendLogoUrl<T extends PaymentProductsJSON | PaymentProductGroupsJSON>(json: T, url: string, postfix: string): T {\n      for (const product of json[\"paymentProduct\" + postfix]) {\n        product.displayHints.logo = _formatImageUrl(url, product.displayHints.logo);\n        if (product.accountsOnFile) {\n          for (const aof of product.accountsOnFile) {\n            aof.displayHints.logo = _formatImageUrl(url, aof.displayHints.logo);\n          }\n        }\n      }\n      json[\"paymentProduct\" + postfix].sort((a: PaymentProductJSON | PaymentProductGroupJSON, b: PaymentProductJSON | PaymentProductGroupJSON) => {\n        if (a.displayHints.displayOrder < b.displayHints.displayOrder) {\n          return -1;\n        }\n        return 1;\n      });\n      return json;\n    }\n\n    function _isPaymentProductInList(list: BasicPaymentProductJSON[], paymentProductId: number): boolean {\n      for (const product of list) {\n        if (product && product.id === paymentProductId) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function _getGooglePayData(list: BasicPaymentProductJSON[], paymentProductId: number): PaymentProduct320SpecificDataJSON | undefined {\n      for (const product of list) {\n        if (product && product.id === paymentProductId) {\n          return product.paymentProduct320SpecificData;\n        }\n      }\n      return undefined;\n    }\n\n    function _resolveGetBasicPaymentProducts(json: PaymentProductsJSON, promise: Promise<PaymentProductsJSON>, cacheKey: string): void {\n      util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\n      _cache[cacheKey] = json;\n      if (json.paymentProducts.length === 0) {\n        promise.reject(\"No payment products available\");\n      } else {\n        promise.resolve(json);\n      }\n    }\n\n    this.getBasicPaymentProducts = (context: C2SPaymentProductContext, paymentProductSpecificInputs?: PaymentProductSpecificInputs): Promise<PaymentProductsJSON> => {\n      paymentProductSpecificInputs = paymentProductSpecificInputs || {};\n\n      const cacheBust = new Date().getTime();\n      const cacheKey = _constructCacheKeyFromContext(\"getPaymentProducts-\", context) + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as PaymentProductsJSON);\n      } else {\n        const promise = new Promise<PaymentProductsJSON>();\n        const url = _constructUrlFromContext(\"/products\", context) + \"&hide=fields&cacheBust=\" + cacheBust;\n        const metadata = util.getMetadata();\n        Net.get(url)\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              const json = _extendLogoUrl(res.responseJSON as PaymentProductsJSON, _c2SCommunicatorConfiguration.assetUrl, \"s\");\n              if (_isPaymentProductInList(json.paymentProducts, util.applePayPaymentProductId)) {\n                _ApplePay.isApplePayAvailable();\n              }\n              if (_isPaymentProductInList(json.paymentProducts, util.googlePayPaymentProductId) && _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n                const googlePayData = _getGooglePayData(json.paymentProducts, util.googlePayPaymentProductId)!;\n                _GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs!, googlePayData).then(\n                  () => _resolveGetBasicPaymentProducts(json, promise, cacheKey),\n                  () => _resolveGetBasicPaymentProducts(json, promise, cacheKey)\n                );\n              } else {\n                _resolveGetBasicPaymentProducts(json, promise, cacheKey);\n              }\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.getBasicPaymentProductGroups = (context: C2SPaymentProductContext): Promise<PaymentProductGroupsJSON> => {\n      const cacheBust = new Date().getTime();\n      const cacheKey = _constructCacheKeyFromContext(\"getPaymentProductGroups-\", context);\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as PaymentProductGroupsJSON);\n      } else {\n        const promise = new Promise<PaymentProductGroupsJSON>();\n        const url = _constructUrlFromContext(\"/productgroups\", context) + \"&hide=fields&cacheBust=\" + cacheBust;\n        const metadata = util.getMetadata();\n        Net.get(url)\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              const json = _extendLogoUrl(res.responseJSON as PaymentProductGroupsJSON, _c2SCommunicatorConfiguration.assetUrl, \"Groups\");\n              _cache[cacheKey] = json;\n              promise.resolve(json);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.getPaymentProduct = (\n      paymentProductId: number,\n      context: C2SPaymentProductContext,\n      paymentProductSpecificInputs?: PaymentProductSpecificInputs\n    ): Promise<PaymentProductJSON> => {\n      paymentProductSpecificInputs = paymentProductSpecificInputs || {};\n      const cacheBust = new Date().getTime();\n      const cacheKey = _constructCacheKeyFromContext(\"getPaymentProduct-\" + paymentProductId, context) + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n\n      if (util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\n        return Promise.reject({\n          errorId: \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\n          errors: [\n            {\n              code: \"1007\",\n              propertyName: \"productId\",\n              message: \"UNKNOWN_PRODUCT_ID\",\n              httpStatusCode: 404,\n            },\n          ],\n        });\n      } else {\n        if (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\n          if (!_cache[cacheKey]) {\n            _cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\n          }\n          return Promise.resolve(_cache[cacheKey] as PaymentProductJSON);\n        } else if (_cache[cacheKey]) {\n          return Promise.resolve(_cache[cacheKey] as PaymentProductJSON);\n        } else {\n          const promise = new Promise<PaymentProductJSON>();\n          let url = _constructUrlFromContext(\"/products/\" + paymentProductId, context);\n          if (\n            paymentProductId === util.bancontactPaymentProductId &&\n            paymentProductSpecificInputs &&\n            paymentProductSpecificInputs.bancontact &&\n            paymentProductSpecificInputs.bancontact.forceBasicFlow\n          ) {\n            // Add query parameter to products call to force basic flow for bancontact\n            url += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow;\n          }\n          url += \"&cacheBust=\" + cacheBust;\n\n          const metadata = util.getMetadata();\n\n          Net.get(url)\n            .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n            .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n            .end((res) => {\n              if (res.success) {\n                const cleanedJSON = _cleanJSON(res.responseJSON as PaymentProductJSON, _c2SCommunicatorConfiguration.assetUrl);\n                _cache[cacheKey] = cleanedJSON;\n                if (paymentProductId === util.applePayPaymentProductId && !_ApplePay.isApplePayAvailable()) {\n                  // Apple Pay is available in the payment context but the client does not support it.\n                  promise.reject({\n                    message: \"Apple Pay is not available in the client\",\n                    json: cleanedJSON,\n                  });\n                } else if (paymentProductId === util.googlePayPaymentProductId && _GooglePay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n                  const googlePayData = cleanedJSON.paymentProduct320SpecificData;\n                  _GooglePay.isGooglePayAvailable(context, paymentProductSpecificInputs!, googlePayData!).then(\n                    (isGooglePayAvailable) => {\n                      if (isGooglePayAvailable) {\n                        promise.resolve(cleanedJSON);\n                      } else {\n                        // isGooglePayAvailable returned false so Google Pay is not available, so reject getPaymentProduct\n                        promise.reject({\n                          message: \"Google Pay is not available in the client\",\n                          json: cleanedJSON,\n                        });\n                      }\n                    },\n                    (reason) => {\n                      // isGooglePayAvailable rejected so not available\n                      promise.reject({\n                        reason: reason,\n                        json: cleanedJSON,\n                      });\n                    }\n                  );\n                } else {\n                  promise.resolve(cleanedJSON);\n                }\n              } else {\n                promise.reject(res.responseJSON);\n              }\n            });\n          return promise;\n        }\n      }\n    };\n\n    this.getPaymentProductGroup = (paymentProductGroupId: string, context: C2SPaymentProductContext): Promise<PaymentProductGroupJSON> => {\n      const cacheBust = new Date().getTime();\n      const cacheKey = _constructUrlFromContext(\"getPaymentProductGroup-\" + paymentProductGroupId, context);\n\n      if (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\n        if (!_cache[cacheKey]) {\n          _cache[cacheKey] = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetUrl);\n        }\n        return Promise.resolve(_cache[cacheKey] as PaymentProductGroupJSON);\n      } else if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as PaymentProductGroupJSON);\n      } else {\n        const promise = new Promise<PaymentProductGroupJSON>();\n        const url = _constructUrlFromContext(\"/productgroups/\" + paymentProductGroupId, context) + \"&cacheBust=\" + cacheBust;\n        const metadata = util.getMetadata();\n        Net.get(url)\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              const cleanedJSON = _cleanJSON(res.responseJSON as PaymentProductGroupJSON, _c2SCommunicatorConfiguration.assetUrl);\n              _cache[cacheKey] = cleanedJSON;\n              promise.resolve(cleanedJSON);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.getPaymentProductIdByCreditCardNumber = (partialCreditCardNumber: string, context: C2SPaymentProductContext): Promise<IinDetailsResponse> => {\n      const cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\n\n      if (_cache[cacheKey]) {\n        // cache is based on digit 1-6\n        return Promise.resolve(_cache[cacheKey] as IinDetailsResponse);\n      } else {\n        const isEnoughDigits = partialCreditCardNumber.length >= 6;\n        if (isEnoughDigits) {\n          const promise = new Promise<IinDetailsResponse>();\n          const url = _constructUrl(\"/services/getIINdetails\");\n          const metadata = util.getMetadata();\n          Net.post(url)\n            .data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, context)))\n            .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n            .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n            .end((res) => {\n              if (res.success) {\n                const json = res.responseJSON as GetIINDetailsResponseJSON;\n                // check if this card is supported\n                // if isAllowedInContext is available in the response set status and resolve\n                // eslint-disable-next-line no-prototype-builtins\n                if (json.hasOwnProperty(\"isAllowedInContext\")) {\n                  const status = json.isAllowedInContext !== false ? \"SUPPORTED\" : \"EXISTING_BUT_NOT_ALLOWED\";\n                  const iinDetailsResponse = new IinDetailsResponse(status, json);\n                  _cache[cacheKey] = iinDetailsResponse;\n                  promise.resolve(iinDetailsResponse);\n                } else {\n                  //if isAllowedInContext is not available get the payment product again to determine status and resolve\n                  this.getPaymentProduct(json.paymentProductId, context).then(\n                    (paymentProduct) => {\n                      const status = paymentProduct ? \"SUPPORTED\" : \"UNSUPPORTED\";\n                      const iinDetailsResponse = new IinDetailsResponse(status, json);\n                      _cache[cacheKey] = iinDetailsResponse;\n                      promise.resolve(iinDetailsResponse);\n                    },\n                    () => {\n                      const iinDetailsResponse = new IinDetailsResponse(\"UNKNOWN\", json);\n                      promise.reject(iinDetailsResponse);\n                    }\n                  );\n                }\n              } else {\n                const iinDetailsResponse = new IinDetailsResponse(\"UNKNOWN\", res.responseJSON as ErrorResponseJSON);\n                promise.reject(iinDetailsResponse);\n              }\n            });\n          return promise;\n        } else {\n          const iinDetailsResponse = new IinDetailsResponse(\"NOT_ENOUGH_DIGITS\");\n          return Promise.resolve(iinDetailsResponse);\n        }\n      }\n    };\n\n    this.convertContextToIinDetailsContext = (partialCreditCardNumber: string, context: C2SPaymentProductContext): GetIINDetailsRequestJSON => {\n      const payload: GetIINDetailsRequestJSON = {\n        bin: partialCreditCardNumber,\n        paymentContext: {\n          countryCode: context.countryCode,\n          isRecurring: context.isRecurring,\n          isInstallments: context.isInstallments,\n          amountOfMoney: {\n            amount: context.totalAmount,\n            currencyCode: context.currency,\n          },\n        },\n      };\n\n      // Account on file id is needed only in case when the merchant\n      // uses multiple payment platforms at the same time.\n      if (typeof context.accountOnFileId !== \"undefined\") {\n        payload[\"accountOnFileId\"] = context.accountOnFileId;\n      }\n\n      return payload;\n    };\n\n    this.getPublicKey = (): Promise<PublicKeyResponse> => {\n      const cacheKey = \"publicKey\";\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as PublicKeyResponse);\n      } else {\n        const promise = new Promise<PublicKeyResponse>();\n        const url = _constructUrl(\"/crypto/publickey\");\n        const metadata = util.getMetadata();\n        Net.get(url)\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              const publicKeyResponse = new PublicKeyResponse(res.responseJSON as PublicKeyJSON);\n              _cache[cacheKey] = publicKeyResponse;\n              promise.resolve(publicKeyResponse);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.getPaymentProductNetworks = (paymentProductId: number, context: C2SPaymentProductContext): Promise<PaymentProductNetworksResponseJSON> => {\n      const cacheKey = _constructCacheKeyFromContext(\"paymentProductNetworks-\" + paymentProductId, context, false);\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as PaymentProductNetworksResponseJSON);\n      } else {\n        const promise = new Promise<PaymentProductNetworksResponseJSON>();\n        const url = _constructUrlFromContext(\"/products/\" + paymentProductId + \"/networks\", context, false);\n        const metadata = util.getMetadata();\n        Net.get(url)\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              _cache[cacheKey] = res.responseJSON;\n              promise.resolve(res.responseJSON as PaymentProductNetworksResponseJSON);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.getPaymentProductDirectory = (paymentProductId: number, currencyCode: string, countryCode: string): Promise<DirectoryJSON> => {\n      const cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as DirectoryJSON);\n      } else {\n        const promise = new Promise<DirectoryJSON>();\n        const url = _constructUrl(\"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode);\n        const metadata = util.getMetadata();\n        Net.get(url)\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              _cache[cacheKey] = res.responseJSON;\n              promise.resolve(res.responseJSON as DirectoryJSON);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.convertAmount = (amount: number, source: string, target: string): Promise<ConvertAmountJSON> => {\n      const cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as ConvertAmountJSON);\n      } else {\n        const promise = new Promise<ConvertAmountJSON>();\n        const url = _constructUrl(\"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount);\n        const metadata = util.getMetadata();\n        Net.get(url)\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              _cache[cacheKey] = res.responseJSON;\n              promise.resolve(res.responseJSON as ConvertAmountJSON);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.getThirdPartyPaymentStatus = (paymentId: string): Promise<ThirdPartyStatusResponseJSON> => {\n      const promise = new Promise<ThirdPartyStatusResponseJSON>();\n\n      const url = _constructUrl(\"/payments/\" + paymentId + \"/thirdpartystatus\");\n      const metadata = util.getMetadata();\n      Net.get(url)\n        .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n        .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n        .end((res) => {\n          if (res.success) {\n            promise.resolve(res.responseJSON as ThirdPartyStatusResponseJSON);\n          } else {\n            promise.reject(res.responseJSON);\n          }\n        });\n      return promise;\n    };\n\n    this.getCustomerDetails = (paymentProductId: number, context: GetCustomerDetailsRequestJSON): Promise<GetCustomerDetailsResponseJSON> => {\n      const cacheKey = _constructCacheKeyFromKeyValues(\"getCustomerDetails_\" + paymentProductId + \"_\" + context.countryCode, context.values);\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as GetCustomerDetailsResponseJSON);\n      } else {\n        const promise = new Promise<GetCustomerDetailsResponseJSON>();\n        const url = _constructUrl(\"/products/\" + paymentProductId + \"/customerDetails\");\n        const metadata = util.getMetadata();\n        Net.post(url)\n          .data(JSON.stringify(context))\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              _cache[cacheKey] = res.responseJSON;\n              promise.resolve(res.responseJSON as GetCustomerDetailsResponseJSON);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.createPaymentProductSession = (paymentProductId: number, context: PaymentProductSessionContext): Promise<CreatePaymentProductSessionResponseJSON> => {\n      const cacheKey = \"createPaymentProductSession_\" + paymentProductId + \"_\" + context.validationURL + \"_\" + context.domainName + \"_\" + context.displayName;\n\n      if (_cache[cacheKey]) {\n        return Promise.resolve(_cache[cacheKey] as CreatePaymentProductSessionResponseJSON);\n      } else {\n        const promise = new Promise<CreatePaymentProductSessionResponseJSON>();\n        const url = _constructUrl(\"/products/\" + paymentProductId + \"/sessions\");\n        const requestParameters: CreatePaymentProductSessionRequestJSON = {\n          paymentProductSession302SpecificInput: {\n            validationUrl: context.validationURL,\n            domainName: context.domainName,\n            displayName: context.displayName,\n          },\n        };\n        const metadata = util.getMetadata();\n        Net.post(url)\n          .data(JSON.stringify(requestParameters))\n          .set(\"X-GCS-ClientMetaInfo\", util.base64Encode(metadata))\n          .set(\"Authorization\", \"GCS v1Client:\" + _c2SCommunicatorConfiguration.clientSessionId)\n          .end((res) => {\n            if (res.success) {\n              _cache[cacheKey] = res.responseJSON;\n              promise.resolve(res.responseJSON as CreatePaymentProductSessionResponseJSON);\n            } else {\n              promise.reject(res.responseJSON);\n            }\n          });\n        return promise;\n      }\n    };\n\n    this.initApplePayPayment = (context: PaymentDetails, paymentProductSpecificInput: ApplePaySpecificInput, networks: string[]): Promise<ApplePayInitResult> => {\n      const payload: ApplePayPaymentDetails = JSON.parse(JSON.stringify(context));\n      payload.displayName = paymentProductSpecificInput.merchantName;\n      if (paymentProductSpecificInput.acquirerCountry) {\n        payload.acquirerCountry = paymentProductSpecificInput.acquirerCountry;\n      }\n      payload.networks = networks;\n\n      return _ApplePay.initPayment(payload, this);\n    };\n\n    this.transformPaymentProductJSON = <T extends PaymentProductJSON | PaymentProductGroupJSON>(json: T): T => {\n      return _cleanJSON(json, _c2SCommunicatorConfiguration.assetUrl);\n    };\n  }\n}\n\nexport = C2SCommunicator;\n","///<amd-module name=\"connectsdk.ValidationRuleBoletoBancarioRequiredness\"/>\n\nimport { BoletoBancarioRequirednessValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleBoletoBancarioRequiredness implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n  readonly fiscalNumberLength: number;\n\n  constructor(readonly json: ValidationRuleDefinition<BoletoBancarioRequirednessValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n    this.fiscalNumberLength = json.attributes.fiscalNumberLength;\n  }\n\n  validate(value: string, fiscalNumberValue?: string): boolean {\n    if (typeof fiscalNumberValue === \"undefined\") {\n      fiscalNumberValue = \"\";\n    }\n\n    return (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const fiscalNumber = request.getUnmaskedValue(\"fiscalNumber\");\n    const fiscalNumberLength = fiscalNumber?.length || 0;\n    if (fiscalNumberLength !== this.fiscalNumberLength) {\n      // The field is not required for Boleto; allow anything\n      return true;\n    }\n\n    const value = request.getValue(fieldId);\n    return !!value;\n  }\n}\n\nexport = ValidationRuleBoletoBancarioRequiredness;\n","///<amd-module name=\"connectsdk.ValidationRuleEmailAddress\"/>\n\nimport { EmptyValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleEmailAddress implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n\n  constructor(readonly json: ValidationRuleDefinition<EmptyValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n  }\n\n  validate(value: string): boolean {\n    // eslint-disable-next-line no-useless-escape\n    const regexp = new RegExp(/^[^@\\.]+(\\.[^@\\.]+)*@([^@\\.]+\\.)*[^@\\.]+\\.[^@\\.][^@\\.]+$/i);\n    return regexp.test(value);\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleEmailAddress;\n","///<amd-module name=\"connectsdk.ValidationRuleExpirationDate\"/>\n\nimport { EmptyValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nfunction validateDateFormat(value: string): boolean {\n  // value is mmYY or mmYYYY\n  const pattern = /\\d{4}|\\d{6}$/g;\n  return pattern.test(value);\n}\n\nclass ValidationRuleExpirationDate implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n\n  constructor(readonly json: ValidationRuleDefinition<EmptyValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n  }\n\n  validate(value: string): boolean {\n    value = value.replace(/[^\\d]/g, \"\");\n    if (!validateDateFormat(value)) {\n      return false;\n    }\n\n    let split: string[];\n    if (value.length === 4) {\n      split = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\n    } else if (value.length === 6) {\n      split = [value.substring(0, 2), value.substring(2, 6)];\n    } else {\n      return false;\n    }\n\n    // The month is zero-based, so subtract one.\n    const expirationMonth = Number(split[0]) - 1;\n    const expirationYear = Number(split[1]);\n    const expirationDate = new Date(expirationYear, expirationMonth, 1);\n\n    // Compare the input with the parsed date, to check if the date rolled over.\n    if (expirationDate.getMonth() !== Number(expirationMonth) || expirationDate.getFullYear() !== Number(expirationYear)) {\n      return false;\n    }\n\n    // For comparison, set the current year & month and the maximum allowed expiration date.\n    const nowWithDay = new Date();\n    const now = new Date(nowWithDay.getFullYear(), nowWithDay.getMonth(), 1);\n    const maxExpirationDate = new Date(nowWithDay.getFullYear() + 25, 11, 1);\n\n    // The card is still valid if it expires this month.\n    return expirationDate >= now && expirationDate <= maxExpirationDate;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleExpirationDate;\n","///<amd-module name=\"connectsdk.ValidationRuleFixedList\"/>\n\nimport { FixedListValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleFixedList implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n  readonly allowedValues: string[];\n\n  constructor(readonly json: ValidationRuleDefinition<FixedListValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n    this.allowedValues = json.attributes.allowedValues;\n  }\n\n  validate(value: string): boolean {\n    for (const allowedValue of this.allowedValues) {\n      if (allowedValue === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleFixedList;\n","///<amd-module name=\"connectsdk.ValidationRuleIban\"/>\n\nimport { EmptyValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\n/**\n * Sanitize value by remove all unwanted chars of a Iban format\n *\n * @private\n */\nfunction sanitizeValue(value: string): string {\n  return value.replace(/[^\\d\\w]+/g, \"\").toUpperCase();\n}\n\n/**\n * Get state if given value is a valid Iban format\n *\n * @private\n */\nfunction isValidFormat(value: string): boolean {\n  return typeof value === \"string\" && /^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$/.test(sanitizeValue(value));\n}\n\n/**\n * Convert a value to a string needed for validation calculations\n *\n * @private\n */\nfunction toComputedString(value: string): string {\n  return (\n    sanitizeValue(value)\n      // place the first 4 chars to the end\n      .replace(/(^.{4})(.*)/, \"$2$1\")\n\n      // replace letters by corresponding numbers A=10 / Z=35\n      .replace(/[A-Z]/g, (d) => {\n        return (d.charCodeAt(0) - 55).toString();\n      })\n  );\n}\n\n/**\n * Validate Iban by given json\n */\nclass ValidationRuleIban implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n\n  constructor(readonly json: ValidationRuleDefinition<EmptyValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n  }\n\n  /**\n   * Validate Iban nrule\n   *\n   * @see https://github.com/arhs/iban.js/blob/master/iban.js\n   */\n  validate(value: string): boolean {\n    // bail if format is invalid\n    if (!isValidFormat(value)) {\n      return false;\n    }\n\n    // Check if reminder module 97 equals 1\n    // only then it should pass the validation\n    let remainder = toComputedString(value);\n\n    while (remainder.length > 2) {\n      const block = remainder.slice(0, 9);\n      remainder = (parseInt(block, 10) % 97) + remainder.slice(block.length);\n    }\n\n    return parseInt(remainder, 10) % 97 === 1;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleIban;\n","///<amd-module name=\"connectsdk.ValidationRuleLength\"/>\n\nimport { LengthValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleLength implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n  readonly minLength: number;\n  readonly maxLength: number;\n\n  constructor(readonly json: ValidationRuleDefinition<LengthValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n    this.minLength = json.attributes.minLength;\n    this.maxLength = json.attributes.maxLength;\n  }\n\n  validate(value: string): boolean {\n    return this.minLength <= value.length && value.length <= this.maxLength;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    if (!value) {\n      // Empty values are allowed if the minimal required length is 0\n      return this.minLength === 0;\n    }\n    return this.validate(value);\n  }\n}\n\nexport = ValidationRuleLength;\n","///<amd-module name=\"connectsdk.ValidationRuleLuhn\"/>\n\nimport { EmptyValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleLuhn implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n\n  constructor(readonly json: ValidationRuleDefinition<EmptyValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n  }\n\n  validate(value: string): boolean {\n    const luhnArr = [\n      [0, 2, 4, 6, 8, 1, 3, 5, 7, 9],\n      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    ];\n    let sum = 0;\n\n    value.replace(/\\D+/g, \"\").replace(/[\\d]/g, (c, p, o) => {\n      sum += luhnArr[(o.length - p) & 1][parseInt(c, 10)];\n      return \"\";\n    });\n    return sum % 10 === 0 && sum > 0;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleLuhn;\n","///<amd-module name=\"connectsdk.ValidationRuleRange\"/>\n\nimport { RangeValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleRange implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n  readonly minValue: number;\n  readonly maxValue: number;\n\n  constructor(readonly json: ValidationRuleDefinition<RangeValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n    this.minValue = json.attributes.minValue;\n    this.maxValue = json.attributes.maxValue;\n  }\n\n  validate(value: string | number): boolean {\n    const intValue = typeof value === \"number\" ? value : parseInt(value);\n    if (isNaN(intValue)) {\n      return false;\n    }\n    return this.minValue <= intValue && intValue <= this.maxValue;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleRange;\n","///<amd-module name=\"connectsdk.ValidationRuleRegularExpression\"/>\n\nimport { RegularExpressionValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleRegularExpression implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n  readonly regularExpression: string;\n\n  constructor(readonly json: ValidationRuleDefinition<RegularExpressionValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n    this.regularExpression = json.attributes.regularExpression;\n  }\n\n  validate(value: string): boolean {\n    const regexp = new RegExp(this.regularExpression);\n    return regexp.test(value);\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleRegularExpression;\n","///<amd-module name=\"connectsdk.ValidationRuleResidentIdNumber\"/>\n\nimport { EmptyValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nconst weights: number[] = [];\n\n// https://en.wikipedia.org/wiki/Resident_Identity_Card\n// storing weights in the reverse order so that we can begin\n// from the 0th position of ID while calculating checksum\nfor (let i = 18; i > 0; i--) {\n  weights.push(Math.pow(2, i - 1) % 11);\n}\n\nclass ValidationRuleResidentIdNumber implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n\n  constructor(readonly json: ValidationRuleDefinition<EmptyValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n  }\n\n  validate(value: string): boolean {\n    if (value.length < 15) {\n      return false;\n    }\n\n    if (value.length == 15) {\n      return /^\\d{15}$/.test(value);\n    }\n\n    if (value.length !== 18) {\n      return false;\n    }\n\n    let sum = 0;\n    for (let i = 0; i < value.length - 1; i++) {\n      sum += Number(value.charAt(i)) * weights[i];\n    }\n\n    const checkSum = (12 - (sum % 11)) % 11;\n    const csChar = value.charAt(17);\n\n    if (checkSum < 10) {\n      return checkSum == Number(csChar); // check only values\n    }\n\n    return !!csChar && csChar.toUpperCase() === \"X\"; // check the type as well\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleResidentIdNumber;\n","///<amd-module name=\"connectsdk.ValidationRuleTermsAndConditions\"/>\n\nimport { EmptyValidatorJSON } from \"./apimodel\";\nimport { ValidatableRequest, ValidationRule, ValidationRuleDefinition } from \"./types\";\n\nclass ValidationRuleTermsAndConditions implements ValidationRule {\n  readonly type: string;\n  readonly errorMessageId: string;\n\n  constructor(readonly json: ValidationRuleDefinition<EmptyValidatorJSON>) {\n    this.type = json.type;\n    this.errorMessageId = json.type;\n  }\n\n  validate(value: string | boolean): boolean {\n    return true === value || \"true\" === value;\n  }\n\n  validateValue(request: ValidatableRequest, fieldId: string): boolean {\n    const value = request.getUnmaskedValue(fieldId);\n    return !!value && this.validate(value);\n  }\n}\n\nexport = ValidationRuleTermsAndConditions;\n","///<amd-module name=\"connectsdk.ValidationRuleFactory\"/>\n\nimport { ValidationRule, ValidationRuleDefinition } from \"./types\";\nimport ValidationRuleBoletoBancarioRequiredness = require(\"./ValidationRuleBoletoBancarioRequiredness\");\nimport ValidationRuleEmailAddress = require(\"./ValidationRuleEmailAddress\");\nimport ValidationRuleExpirationDate = require(\"./ValidationRuleExpirationDate\");\nimport ValidationRuleFixedList = require(\"./ValidationRuleFixedList\");\nimport ValidationRuleIban = require(\"./ValidationRuleIban\");\nimport ValidationRuleLength = require(\"./ValidationRuleLength\");\nimport ValidationRuleLuhn = require(\"./ValidationRuleLuhn\");\nimport ValidationRuleRange = require(\"./ValidationRuleRange\");\nimport ValidationRuleRegularExpression = require(\"./ValidationRuleRegularExpression\");\nimport ValidationRuleResidentIdNumber = require(\"./ValidationRuleResidentIdNumber\");\nimport ValidationRuleTermsAndConditions = require(\"./ValidationRuleTermsAndConditions\");\n\nconst validationRules = {\n  EmailAddress: ValidationRuleEmailAddress,\n  TermsAndConditions: ValidationRuleTermsAndConditions,\n  ExpirationDate: ValidationRuleExpirationDate,\n  FixedList: ValidationRuleFixedList,\n  Length: ValidationRuleLength,\n  Luhn: ValidationRuleLuhn,\n  Range: ValidationRuleRange,\n  RegularExpression: ValidationRuleRegularExpression,\n  BoletoBancarioRequiredness: ValidationRuleBoletoBancarioRequiredness,\n  Iban: ValidationRuleIban,\n  ResidentIdNumber: ValidationRuleResidentIdNumber,\n};\n\nclass ValidationRuleFactory {\n  makeValidator(json: ValidationRuleDefinition<unknown>): ValidationRule | null {\n    const rule = json.type.charAt(0).toUpperCase() + json.type.slice(1);\n    try {\n      return new validationRules[rule](json);\n    } catch (e) {\n      console.warn(\"no validator for \", rule);\n    }\n    return null;\n  }\n}\n\nexport = ValidationRuleFactory;\n","///<amd-module name=\"connectsdk.DataRestrictions\"/>\n\nimport { PaymentProductFieldDataRestrictionsJSON } from \"./apimodel\";\nimport { ValidationRule } from \"./types\";\nimport ValidationRuleFactory = require(\"./ValidationRuleFactory\");\n\nfunction _parseJSON(\n  _json: PaymentProductFieldDataRestrictionsJSON,\n  _validationRules: ValidationRule[],\n  _validationRuleByType: { [type: string]: ValidationRule | undefined }\n): void {\n  const validationRuleFactory = new ValidationRuleFactory();\n  if (_json.validators) {\n    for (const key in _json.validators) {\n      const validationRule = validationRuleFactory.makeValidator({\n        type: key,\n        attributes: _json.validators[key],\n      });\n      if (validationRule) {\n        _validationRules.push(validationRule);\n        _validationRuleByType[validationRule.type] = validationRule;\n      }\n    }\n  }\n}\n\nclass DataRestrictions {\n  readonly isRequired: boolean;\n  readonly validationRules: ValidationRule[];\n  readonly validationRuleByType: { [type: string]: ValidationRule | undefined };\n\n  constructor(readonly json: PaymentProductFieldDataRestrictionsJSON) {\n    this.isRequired = json.isRequired;\n    this.validationRules = [];\n    this.validationRuleByType = {};\n\n    _parseJSON(json, this.validationRules, this.validationRuleByType);\n  }\n}\n\nexport = DataRestrictions;\n","///<amd-module name=\"connectsdk.JOSEEncryptor\"/>\n\nimport * as forge from \"node-forge\";\nimport PublicKeyResponse = require(\"./PublicKeyResponse\");\n\nconst CEKKEYLENGTH = 512;\nconst IVLENGTH = 128;\n\nfunction base64UrlEncode(str: string): string {\n  str = forge.util.encode64(str);\n  str = str.split(\"=\")[0];\n  str = str.replace(/\\+/g, \"-\");\n  str = str.replace(/\\//g, \"_\");\n  return str;\n}\n\nfunction createProtectedHeader(kid: string): string {\n  const JOSEHeader = {\n    alg: \"RSA-OAEP\",\n    enc: \"A256CBC-HS512\",\n    kid: kid,\n  };\n  return JSON.stringify(JOSEHeader);\n}\n\nfunction decodePemPublicKey(publickeyB64Encoded: string): forge.pki.rsa.PublicKey {\n  // step 1: base64decode\n  const publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\n  // create a bytebuffer with these bytes\n  const buffer2 = forge.util.createBuffer(publickeyB64Decoded, \"raw\");\n  // convert DER to ASN1 object\n  const publickeyObject2 = forge.asn1.fromDer(buffer2);\n  // convert to publicKey object\n  const publicKey2 = forge.pki.publicKeyFromAsn1(publickeyObject2);\n  return publicKey2 as forge.pki.rsa.PublicKey;\n}\n\nfunction encryptContentEncryptionKey(CEK: string, publicKey: forge.pki.rsa.PublicKey): string {\n  // encrypt CEK with OAEP+SHA-1+MGF1Padding\n  const encryptedCEK = publicKey.encrypt(CEK, \"RSA-OAEP\");\n  return encryptedCEK;\n}\n\nfunction encryptPayload(payload: string, encKey: string, initializationVector: string): string {\n  const cipher = forge.cipher.createCipher(\"AES-CBC\", encKey);\n  cipher.start({\n    iv: initializationVector,\n  });\n  cipher.update(forge.util.createBuffer(payload));\n  cipher.finish();\n  return cipher.output.bytes();\n}\n\nfunction calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader: string): string {\n  const buffer = forge.util.createBuffer(encodededProtectedHeader);\n  const lengthInBits = buffer.length() * 8;\n\n  const buffer2 = forge.util.createBuffer();\n  // convert int to 64bit big endian\n  buffer2.putInt32(0);\n  buffer2.putInt32(lengthInBits);\n  return buffer2.bytes();\n}\n\nfunction calculateHMAC(macKey: string, encodededProtectedHeader: string, initializationVector: string, cipherText: string, al: string): string {\n  const buffer = forge.util.createBuffer();\n  buffer.putBytes(encodededProtectedHeader);\n  buffer.putBytes(initializationVector);\n  buffer.putBytes(cipherText);\n  buffer.putBytes(al);\n\n  const hmacInput = buffer.bytes();\n\n  const hmac = forge.hmac.create();\n  hmac.start(\"sha512\", macKey);\n  hmac.update(hmacInput);\n  return hmac.digest().bytes();\n}\n\nclass JOSEEncryptor {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  encrypt(plainTextValues: any, publicKeyResponse: PublicKeyResponse): string {\n    // Create protected header and encode it with Base64 encoding\n    const payload = JSON.stringify(plainTextValues);\n    const protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\n    const encodededProtectedHeader = base64UrlEncode(protectedHeader);\n\n    // Create ContentEncryptionKey, is a random byte[]\n    const CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\n    const publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\n\n    // Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\n    const encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\n    const encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\n\n    // Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\n    const macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\n    const encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\n\n    // Create Initialization Vector\n    const initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\n    const encodededinitializationVector = base64UrlEncode(initializationVector);\n\n    // Encrypt content with ContentEncryptionKey and Initialization Vector\n    const cipherText = encryptPayload(payload, encKey, initializationVector);\n    const encodedCipherText = base64UrlEncode(cipherText);\n\n    // Create Additional Authenticated Data  and Additional Authenticated Data Length\n    const al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\n\n    // Calculates HMAC\n    const calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\n\n    // Truncate HMAC Value to Create Authentication Tag\n    const authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\n    const encodedAuthenticationTag = base64UrlEncode(authenticationTag);\n\n    return encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\n  }\n}\n\nexport = JOSEEncryptor;\n","///<amd-module name=\"connectsdk.ValueMappingElement\"/>\n\nimport { ValueMappingElementJSON } from \"./apimodel\";\n\nclass ValueMappingElement {\n  readonly displayName?: string;\n  readonly value: string;\n\n  constructor(readonly json: ValueMappingElementJSON) {\n    this.displayName = json.displayName;\n    this.value = json.value;\n  }\n}\n\nexport = ValueMappingElement;\n","///<amd-module name=\"connectsdk.FormElement\"/>\n\nimport { PaymentProductFieldFormElementJSON } from \"./apimodel\";\nimport ValueMappingElement = require(\"./ValueMappingElement\");\n\nfunction _parseJSON(_json: PaymentProductFieldFormElementJSON, _valueMapping: ValueMappingElement[]): void {\n  if (_json.valueMapping) {\n    for (const mapping of _json.valueMapping) {\n      _valueMapping.push(new ValueMappingElement(mapping));\n    }\n  }\n}\n\nclass FormElement {\n  readonly type: string;\n  readonly valueMapping: ValueMappingElement[];\n\n  constructor(readonly json: PaymentProductFieldFormElementJSON) {\n    this.type = json.type;\n    this.valueMapping = [];\n\n    _parseJSON(json, this.valueMapping);\n  }\n}\n\nexport = FormElement;\n","///<amd-module name=\"connectsdk.Tooltip\"/>\n\nimport { PaymentProductFieldTooltipJSON } from \"./apimodel\";\n\nclass Tooltip {\n  readonly image: string;\n  readonly label?: string;\n\n  constructor(readonly json: PaymentProductFieldTooltipJSON) {\n    this.image = json.image;\n    this.label = json.label;\n  }\n}\n\nexport = Tooltip;\n","///<amd-module name=\"connectsdk.PaymentProductFieldDisplayHints\"/>\n\nimport { PaymentProductFieldDisplayHintsJSON } from \"./apimodel\";\nimport FormElement = require(\"./FormElement\");\nimport Tooltip = require(\"./Tooltip\");\n\nclass PaymentProductFieldDisplayHints {\n  readonly displayOrder: number;\n  readonly formElement?: FormElement;\n  readonly label?: string;\n  readonly mask?: string;\n  readonly obfuscate: boolean;\n  readonly placeholderLabel?: string;\n  readonly preferredInputType?: string;\n  readonly tooltip?: Tooltip;\n  readonly alwaysShow: boolean;\n  readonly wildcardMask: string;\n\n  constructor(readonly json: PaymentProductFieldDisplayHintsJSON) {\n    this.displayOrder = json.displayOrder;\n    if (json.formElement) {\n      this.formElement = new FormElement(json.formElement);\n    }\n    this.label = json.label;\n    this.mask = json.mask;\n    this.obfuscate = json.obfuscate;\n    this.placeholderLabel = json.placeholderLabel;\n    this.preferredInputType = json.preferredInputType;\n    this.tooltip = json.tooltip ? new Tooltip(json.tooltip) : undefined;\n    this.alwaysShow = json.alwaysShow;\n    this.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n  }\n}\n\nexport = PaymentProductFieldDisplayHints;\n","///<amd-module name=\"connectsdk.PaymentProductField\"/>\n\nimport { PaymentProductFieldJSON } from \"./apimodel\";\nimport DataRestrictions = require(\"./DataRestrictions\");\nimport MaskedString = require(\"./MaskedString\");\nimport MaskingUtil = require(\"./MaskingUtil\");\nimport PaymentProductFieldDisplayHints = require(\"./PaymentProductFieldDisplayHints\");\nimport { ValidatableRequest } from \"./types\";\n\nclass PaymentProductField {\n  readonly displayHints: PaymentProductFieldDisplayHints | \"\";\n  readonly dataRestrictions: DataRestrictions;\n  readonly id: string;\n  readonly type: string;\n\n  /**\n   * @deprecated This function does not take into account other fields that may be of importance for the validation.\n   *             Use {@link .getErrorMessageIds} instead.\n   */\n  readonly getErrorCodes: (value?: string) => string[];\n  readonly getErrorMessageIds: (request?: ValidatableRequest) => string[];\n  /**\n   * @deprecated This function does not take into account other fields that may be of importance for the validation.\n   *             Use {@link .validateValue} instead.\n   */\n  readonly isValid: (value: string) => boolean;\n  readonly validateValue: (request: ValidatableRequest) => boolean;\n\n  constructor(readonly json: PaymentProductFieldJSON) {\n    this.displayHints = json.displayHints ? new PaymentProductFieldDisplayHints(json.displayHints) : \"\";\n    this.dataRestrictions = new DataRestrictions(json.dataRestrictions);\n    this.id = json.id;\n    this.type = json.type;\n\n    let _errorCodes: string[] = [];\n\n    this.getErrorCodes = (value?: string): string[] => {\n      if (value) {\n        _errorCodes = [];\n        this.isValid(value);\n      }\n      return _errorCodes;\n    };\n\n    this.getErrorMessageIds = (request?: ValidatableRequest): string[] => {\n      if (request) {\n        _errorCodes = [];\n        this.validateValue(request);\n      }\n      return _errorCodes;\n    };\n\n    this.isValid = (value: string): boolean => {\n      // isValid checks all datarestrictions\n      const validators = this.dataRestrictions.validationRules;\n      let hasError = false;\n\n      // Apply masking value first\n      const maskedValue = this.applyMask(value);\n      value = this.removeMask(maskedValue.formattedValue);\n      for (const validator of validators) {\n        if (!validator.validate(value)) {\n          hasError = true;\n          _errorCodes.push(validator.errorMessageId);\n        }\n      }\n      return !hasError;\n    };\n\n    this.validateValue = (request: ValidatableRequest): boolean => {\n      // validateValue checks all datarestrictions\n      const validators = this.dataRestrictions.validationRules;\n      let hasError = false;\n\n      for (const validator of validators) {\n        if (!validator.validateValue(request, this.id)) {\n          hasError = true;\n          _errorCodes.push(validator.errorMessageId);\n        }\n      }\n      return !hasError;\n    };\n  }\n\n  applyMask(newValue: string, oldValue?: string): MaskedString {\n    const maskingUtil = new MaskingUtil();\n    const mask = this.displayHints ? this.displayHints.mask : undefined;\n    return maskingUtil.applyMask(mask, newValue, oldValue);\n  }\n\n  applyWildcardMask(newValue: string, oldValue?: string): MaskedString {\n    const maskingUtil = new MaskingUtil();\n    const wildcardMask = this.displayHints ? this.displayHints.wildcardMask : undefined;\n    return maskingUtil.applyMask(wildcardMask, newValue, oldValue);\n  }\n\n  removeMask(value: string): string {\n    const maskingUtil = new MaskingUtil();\n    const mask = this.displayHints ? this.displayHints.mask : undefined;\n    return maskingUtil.removeMask(mask, value);\n  }\n}\n\nexport = PaymentProductField;\n","///<amd-module name=\"connectsdk.PaymentProduct\"/>\n\nimport { PaymentProductJSON } from \"./apimodel\";\nimport BasicPaymentProduct = require(\"./BasicPaymentProduct\");\nimport PaymentProductField = require(\"./PaymentProductField\");\n\nfunction _parseJSON(_json: PaymentProductJSON, _paymentProductFields: PaymentProductField[], _paymentProductFieldById: { [id: string]: PaymentProductField | undefined }): void {\n  if (_json.fields) {\n    for (const field of _json.fields) {\n      const paymentProductField = new PaymentProductField(field);\n      _paymentProductFields.push(paymentProductField);\n      _paymentProductFieldById[paymentProductField.id] = paymentProductField;\n    }\n  }\n}\n\nclass PaymentProduct extends BasicPaymentProduct {\n  readonly paymentProductFields: PaymentProductField[];\n  readonly paymentProductFieldById: { [id: string]: PaymentProductField | undefined };\n  readonly fieldsWarning?: string;\n\n  constructor(readonly json: PaymentProductJSON) {\n    super(json);\n    this.paymentProductFields = [];\n    this.paymentProductFieldById = {};\n    this.fieldsWarning = json.fieldsWarning;\n\n    _parseJSON(json, this.paymentProductFields, this.paymentProductFieldById);\n  }\n}\n\nexport = PaymentProduct;\n","///<amd-module name=\"connectsdk.PaymentRequest\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport AccountOnFile = require(\"./AccountOnFile\");\nimport PaymentProduct = require(\"./PaymentProduct\");\nimport { ValidationError } from \"./types\";\n\nclass PaymentRequest {\n  readonly setValue: (paymentProductFieldId: string, value: string) => void;\n  readonly setTokenize: (tokenize: boolean) => void;\n  readonly getTokenize: () => boolean;\n  /**\n   * @deprecated This function does not return for which field the errors are. Use {@link .validate} instead.\n   */\n  readonly getErrorMessageIds: () => string[];\n  readonly getValue: (paymentProductFieldId: string) => string | undefined;\n  readonly getValues: () => { [id: string]: string | undefined };\n  readonly getMaskedValue: (paymentProductFieldId: string) => string | undefined;\n  readonly getMaskedValues: () => { [id: string]: string | undefined };\n  readonly getUnmaskedValue: (paymentProductFieldId: string) => string | undefined;\n  readonly getUnmaskedValues: () => { [id: string]: string | undefined };\n  readonly setPaymentProduct: (paymentProduct: PaymentProduct) => void;\n  readonly getPaymentProduct: () => PaymentProduct | undefined;\n  readonly setAccountOnFile: (accountOnFile?: AccountOnFile | null) => void;\n  readonly getAccountOnFile: () => AccountOnFile | undefined;\n  readonly getClientSessionID: () => string;\n\n  constructor(clientSessionID: string) {\n    const _clientSessionID = clientSessionID;\n    const _fieldValues: { [id: string]: string | undefined } = {};\n    let _paymentProduct: PaymentProduct | undefined;\n    let _accountOnFile: AccountOnFile | undefined;\n    let _tokenize = false;\n\n    this.setValue = (paymentProductFieldId: string, value: string): void => {\n      _fieldValues[paymentProductFieldId] = value;\n    };\n\n    this.setTokenize = (tokenize: boolean): void => {\n      _tokenize = tokenize;\n    };\n\n    this.getTokenize = (): boolean => {\n      return _tokenize;\n    };\n\n    this.getErrorMessageIds = (): string[] => {\n      return this.validate().map((error) => error.errorMessageId);\n    };\n\n    this.getValue = (paymentProductFieldId: string): string | undefined => {\n      return _fieldValues[paymentProductFieldId];\n    };\n\n    this.getValues = (): { [id: string]: string | undefined } => {\n      return _fieldValues;\n    };\n\n    this.getMaskedValue = (paymentProductFieldId: string): string | undefined => {\n      const paymentProductField = _paymentProduct!.paymentProductFieldById[paymentProductFieldId];\n      if (paymentProductField) {\n        const value = this.getValue(paymentProductFieldId);\n        if (typeof value !== \"undefined\") {\n          const maskedString = paymentProductField.applyMask(value);\n          return maskedString.formattedValue;\n        }\n      }\n    };\n\n    this.getMaskedValues = (): { [id: string]: string | undefined } => {\n      const result: { [id: string]: string } = {};\n      for (const paymentProductFieldId in _fieldValues) {\n        const paymentProductField = _paymentProduct!.paymentProductFieldById[paymentProductFieldId];\n        const maskedString = paymentProductField!.applyMask(this.getValue(paymentProductFieldId)!);\n        result[paymentProductFieldId] = maskedString.formattedValue;\n      }\n      return result;\n    };\n\n    this.getUnmaskedValue = (paymentProductFieldId: string): string | undefined => {\n      const paymentProductField = _paymentProduct!.paymentProductFieldById[paymentProductFieldId];\n      if (paymentProductField) {\n        const value = this.getValue(paymentProductFieldId);\n        if (typeof value !== \"undefined\") {\n          const maskedString = paymentProductField.applyMask(value);\n          const formattedValue = maskedString.formattedValue;\n          return paymentProductField.removeMask(formattedValue);\n        }\n      }\n    };\n\n    this.getUnmaskedValues = (): { [id: string]: string } => {\n      const result: { [id: string]: string } = {};\n      for (const paymentProductFieldId in _fieldValues) {\n        const paymentProductField = _paymentProduct!.paymentProductFieldById[paymentProductFieldId];\n        if (paymentProductField) {\n          const maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId)!);\n          const formattedValue = maskedString.formattedValue;\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\n        }\n      }\n      return result;\n    };\n\n    this.setPaymentProduct = (paymentProduct: PaymentProduct): void => {\n      _paymentProduct = paymentProduct;\n    };\n\n    this.getPaymentProduct = (): PaymentProduct | undefined => {\n      return _paymentProduct;\n    };\n\n    this.setAccountOnFile = (accountOnFile?: AccountOnFile | null): void => {\n      if (accountOnFile) {\n        for (const attribute of accountOnFile.attributes) {\n          if (attribute.status !== \"MUST_WRITE\") {\n            delete _fieldValues[attribute.key];\n          }\n        }\n      }\n      _accountOnFile = accountOnFile || undefined;\n    };\n\n    this.getAccountOnFile = (): AccountOnFile | undefined => {\n      return _accountOnFile;\n    };\n\n    this.getClientSessionID = (): string => {\n      return _clientSessionID;\n    };\n  }\n\n  isValid(): boolean {\n    return !!this.getPaymentProduct() && this.validate().length === 0;\n  }\n\n  /**\n   * Validates that the necessary fields are set with correct values.\n   * @throws If the payment product has not been set yet.\n   */\n  validate(): ValidationError[] {\n    const paymentProduct = this.getPaymentProduct();\n    if (!paymentProduct) {\n      throw new Error(\"Error validating PaymentRequest, please set a paymentProduct first.\");\n    }\n\n    const errors: ValidationError[] = [];\n    // check fields that are set first\n    const fieldValues = this.getValues();\n    for (const key in fieldValues) {\n      const paymentProductField = paymentProduct.paymentProductFieldById[key];\n      if (paymentProductField) {\n        errors.push(\n          ...paymentProductField.getErrorMessageIds(this).map((id) => ({\n            fieldId: paymentProductField.id,\n            errorMessageId: id,\n          }))\n        );\n      }\n    }\n\n    // besides checking the fields for errors, check if all mandatory fields are present as well\n\n    let aof = this.getAccountOnFile();\n    if (aof && aof.paymentProductId !== paymentProduct.id) {\n      // the account-on-file does not belong to the payment product; ignore it\n      aof = undefined;\n    }\n    const hasValueInAof = (fieldId: string): boolean => {\n      const attribute = aof?.attributeByKey[fieldId];\n      return !!attribute && attribute.status !== \"MUST_WRITE\";\n    };\n\n    for (const field of paymentProduct.paymentProductFields) {\n      if (field.dataRestrictions.isRequired) {\n        // is this field present in the request?\n        const storedValue = this.getValue(field.id);\n        // if the account on file has the field we can ignore it\n        if (!storedValue && !hasValueInAof(field.id)) {\n          errors.push({\n            fieldId: field.id,\n            errorMessageId: \"required\",\n          });\n        }\n      }\n    }\n    return errors;\n  }\n}\n\nexport = PaymentRequest;\n","///<amd-module name=\"connectsdk.Encryptor\"/>\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport * as forge from \"node-forge\";\nimport JOSEEncryptor = require(\"./JOSEEncryptor\");\nimport PaymentRequest = require(\"./PaymentRequest\");\nimport Promise = require(\"./promise\");\nimport PublicKeyResponse = require(\"./PublicKeyResponse\");\nimport Util = require(\"./Util\");\nimport { DeviceInformation } from \"./types\";\n\nconst util = Util.getInstance();\n\ninterface EncryptedCustomerInput {\n  clientSessionId: string;\n  nonce: string;\n  paymentProductId: number;\n  accountOnFileId?: number;\n  tokenize?: boolean;\n  paymentValues: { key: string; value: string }[];\n  collectedDeviceInformation: DeviceInformation;\n}\n\nfunction createEncryptedConsumerInput(paymentRequest: PaymentRequest): EncryptedCustomerInput {\n  const blob: EncryptedCustomerInput = {\n    clientSessionId: paymentRequest.getClientSessionID(),\n    nonce: forge.util.bytesToHex(forge.random.getBytesSync(16)),\n    paymentProductId: paymentRequest.getPaymentProduct()!.id,\n    tokenize: paymentRequest.getTokenize(),\n    paymentValues: [],\n    collectedDeviceInformation: util.collectDeviceInformation(),\n  };\n\n  const accountOnFile = paymentRequest.getAccountOnFile();\n  if (accountOnFile) {\n    blob.accountOnFileId = accountOnFile.id;\n  }\n\n  const values = paymentRequest.getUnmaskedValues();\n  const ownValues = Object.getOwnPropertyNames(values);\n  for (const propertyName of ownValues) {\n    if (propertyName !== \"length\") {\n      blob.paymentValues.push({\n        key: propertyName,\n        value: values[propertyName]!,\n      });\n    }\n  }\n\n  return blob;\n}\n\nclass Encryptor {\n  /**\n   * Encrypts the given payment request. Calls {@link PaymentRequest.validate}, so it's not necessary to do that first.\n   * If validation fails, the returned promise is rejected with the validation errors.\n   */\n  readonly encrypt: (paymentRequest: PaymentRequest) => Promise<string>;\n\n  constructor(publicKeyResponsePromise: Promise<PublicKeyResponse>) {\n    this.encrypt = (paymentRequest: PaymentRequest): Promise<string> => {\n      if (!paymentRequest.getPaymentProduct()) {\n        return Promise.reject(\"no paymentProduct set\");\n      }\n      const errors = paymentRequest.validate();\n      if (errors.length !== 0) {\n        return Promise.reject(errors);\n      }\n\n      // paymentRequest is now valid\n      const blob = createEncryptedConsumerInput(paymentRequest);\n\n      const promise = new Promise<string>();\n      publicKeyResponsePromise.then(\n        (publicKeyResponse) => {\n          // use blob to encrypt\n          const joseEncryptor = new JOSEEncryptor();\n          try {\n            const encryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\n            promise.resolve(encryptedString);\n          } catch (e) {\n            promise.reject(e);\n          }\n        },\n        (reason) => {\n          promise.reject(reason);\n        }\n      );\n      return promise;\n    };\n  }\n}\n\nexport = Encryptor;\n","///<amd-module name=\"connectsdk.PaymentProductGroup\"/>\n\nimport { PaymentProductGroupJSON } from \"./apimodel\";\nimport BasicPaymentProductGroup = require(\"./BasicPaymentProductGroup\");\nimport PaymentProductField = require(\"./PaymentProductField\");\n\nfunction _parseJSON(\n  _json: PaymentProductGroupJSON,\n  _paymentProductFields: PaymentProductField[],\n  _paymentProductFieldById: { [id: string]: PaymentProductField | undefined }\n): void {\n  if (_json.fields) {\n    for (const field of _json.fields) {\n      const paymentProductField = new PaymentProductField(field);\n      _paymentProductFields.push(paymentProductField);\n      _paymentProductFieldById[paymentProductField.id] = paymentProductField;\n    }\n  }\n}\n\nclass PaymentProductGroup extends BasicPaymentProductGroup {\n  readonly paymentProductFields: PaymentProductField[];\n  readonly paymentProductFieldById: { [id: string]: PaymentProductField | undefined };\n\n  constructor(readonly json: PaymentProductGroupJSON) {\n    super(json);\n    this.paymentProductFields = [];\n    this.paymentProductFieldById = {};\n\n    _parseJSON(json, this.paymentProductFields, this.paymentProductFieldById);\n  }\n}\n\nexport = PaymentProductGroup;\n","///<amd-module name=\"connectsdk.PaymentItem\"/>\n\nimport PaymentProduct = require(\"./PaymentProduct\");\nimport PaymentProductGroup = require(\"./PaymentProductGroup\");\n\nexport type PaymentItem = PaymentProduct | PaymentProductGroup;\n","///<amd-module name=\"connectsdk.Session\"/>\n\nimport BasicPaymentItems = require(\"./BasicPaymentItems\");\nimport BasicPaymentProductGroups = require(\"./BasicPaymentProductGroups\");\nimport BasicPaymentProducts = require(\"./BasicPaymentProducts\");\nimport C2SCommunicator = require(\"./C2SCommunicator\");\nimport C2SCommunicatorConfiguration = require(\"./C2SCommunicatorConfiguration\");\nimport C2SPaymentProductContext = require(\"./C2SPaymentProductContext\");\nimport Encryptor = require(\"./Encryptor\");\nimport IinDetailsResponse = require(\"./IinDetailsResponse\");\nimport PaymentProduct = require(\"./PaymentProduct\");\nimport PaymentProductGroup = require(\"./PaymentProductGroup\");\nimport PaymentRequest = require(\"./PaymentRequest\");\nimport Promise = require(\"./promise\");\nimport PublicKeyResponse = require(\"./PublicKeyResponse\");\nimport {\n  ConvertAmountJSON,\n  CreatePaymentProductSessionResponseJSON,\n  DirectoryJSON,\n  GetCustomerDetailsRequestJSON,\n  GetCustomerDetailsResponseJSON,\n  PaymentProductGroupJSON,\n  PaymentProductJSON,\n  PaymentProductNetworksResponseJSON,\n  ThirdPartyStatusResponseJSON,\n} from \"./apimodel\";\nimport { ApplePayInitResult, ApplePaySpecificInput, PaymentDetails, PaymentProductSessionContext, PaymentProductSpecificInputs, SessionDetails } from \"./types\";\n\nconst APIVERSION = \"client/v1\";\n\n// Keep the lowercase name for backward compatibility\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass session {\n  readonly clientApiUrl: string;\n  readonly assetUrl: string;\n\n  readonly getBasicPaymentProducts: (paymentDetails: PaymentDetails, paymentProductSpecificInputs?: PaymentProductSpecificInputs) => Promise<BasicPaymentProducts>;\n  readonly getBasicPaymentProductGroups: (paymentDetails: PaymentDetails) => Promise<BasicPaymentProductGroups>;\n  readonly getBasicPaymentItems: (paymentDetails: PaymentDetails, useGroups: boolean, paymentProductSpecificInputs?: PaymentProductSpecificInputs) => Promise<BasicPaymentItems>;\n  readonly getPaymentProduct: (paymentProductId: number, paymentDetails?: PaymentDetails, paymentProductSpecificInputs?: PaymentProductSpecificInputs) => Promise<PaymentProduct>;\n  readonly getPaymentProductGroup: (paymentProductGroupId: string, paymentDetails?: PaymentDetails) => Promise<PaymentProductGroup>;\n  readonly getIinDetails: (partialCreditCardNumber: string, paymentDetails?: PaymentDetails | null) => Promise<IinDetailsResponse>;\n  readonly getPublicKey: () => Promise<PublicKeyResponse>;\n  readonly getPaymentProductNetworks: (paymentProductId: number, paymentDetails: PaymentDetails) => Promise<PaymentProductNetworksResponseJSON>;\n  readonly getPaymentProductDirectory: (paymentProductId: number, currencyCode: string, countryCode: string) => Promise<DirectoryJSON>;\n  readonly convertAmount: (amount: number, source: string, target: string) => Promise<ConvertAmountJSON>;\n  readonly getPaymentRequest: () => PaymentRequest;\n  readonly getEncryptor: () => Encryptor;\n  readonly getThirdPartyPaymentStatus: (paymentId: string) => Promise<ThirdPartyStatusResponseJSON>;\n  readonly getCustomerDetails: (paymentProductId: number, paymentDetails: GetCustomerDetailsRequestJSON) => Promise<GetCustomerDetailsResponseJSON>;\n  readonly createPaymentProductSession: (paymentProductId: number, paymentDetails: PaymentProductSessionContext) => Promise<CreatePaymentProductSessionResponseJSON>;\n  readonly createApplePayPayment: (context: PaymentDetails, paymentProductSpecificInput: ApplePaySpecificInput, networks: string[]) => Promise<ApplePayInitResult>;\n  /* In case a full JSON representation of a payment product is already available in context,\n     this method can be used instead of getPaymentProduct for the same (but synchronous) result. */\n  readonly transformPaymentProductJSON: (json: PaymentProductJSON) => PaymentProduct;\n  /* In case a full JSON representation of a payment product group is already available in context,\n     this method can be used instead of getPaymentProductGroup for the same (but synchronous) result. */\n  readonly transformPaymentProductGroupJSON: (json: PaymentProductGroupJSON) => PaymentProductGroup;\n\n  constructor(sessionDetails: SessionDetails, paymentProduct?: PaymentProductJSON | PaymentProductGroupJSON) {\n    const _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails, APIVERSION);\n    const _c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct);\n    //_paymentRequest,\n    this.clientApiUrl = _c2SCommunicatorConfiguration.clientApiUrl;\n    this.assetUrl = _c2SCommunicatorConfiguration.assetUrl;\n\n    let _paymentDetails: PaymentDetails;\n    let _paymentProduct: PaymentProduct | null;\n    let _paymentProductGroup: PaymentProductGroup | null;\n    let _paymentRequest: PaymentRequest;\n\n    this.getBasicPaymentProducts = (paymentDetails: PaymentDetails, paymentProductSpecificInputs?: PaymentProductSpecificInputs): Promise<BasicPaymentProducts> => {\n      const promise = new Promise<BasicPaymentProducts>();\n      const c2SPaymentProductContext = new C2SPaymentProductContext(paymentDetails);\n      _c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(\n        (json) => {\n          _paymentDetails = paymentDetails;\n          const paymentProducts = new BasicPaymentProducts(json);\n          promise.resolve(paymentProducts);\n        },\n        (reason) => {\n          promise.reject(reason);\n        }\n      );\n      return promise;\n    };\n\n    this.getBasicPaymentProductGroups = (paymentDetails: PaymentDetails): Promise<BasicPaymentProductGroups> => {\n      const promise = new Promise<BasicPaymentProductGroups>();\n      const c2SPaymentProductContext = new C2SPaymentProductContext(paymentDetails);\n      _c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(\n        (json) => {\n          _paymentDetails = paymentDetails;\n          const paymentProductGroups = new BasicPaymentProductGroups(json);\n          promise.resolve(paymentProductGroups);\n        },\n        (reason) => {\n          promise.reject(reason);\n        }\n      );\n      return promise;\n    };\n\n    this.getBasicPaymentItems = (paymentDetails: PaymentDetails, useGroups: boolean, paymentProductSpecificInputs?: PaymentProductSpecificInputs): Promise<BasicPaymentItems> => {\n      const promise = new Promise<BasicPaymentItems>();\n      // get products & groups\n      if (useGroups) {\n        this.getBasicPaymentProducts(paymentDetails, paymentProductSpecificInputs).then(\n          (products) => {\n            this.getBasicPaymentProductGroups(paymentDetails).then(\n              (groups) => {\n                const basicPaymentItems = new BasicPaymentItems(products, groups);\n                promise.resolve(basicPaymentItems);\n              },\n              (reason) => {\n                promise.reject(reason);\n              }\n            );\n          },\n          (reason) => {\n            promise.reject(reason);\n          }\n        );\n      } else {\n        this.getBasicPaymentProducts(paymentDetails, paymentProductSpecificInputs).then(\n          (products) => {\n            const basicPaymentItems = new BasicPaymentItems(products, null);\n            promise.resolve(basicPaymentItems);\n          },\n          (reason) => {\n            promise.reject(reason);\n          }\n        );\n      }\n      return promise;\n    };\n\n    this.getPaymentProduct = (paymentProductId: number, paymentDetails?: PaymentDetails, paymentProductSpecificInputs?: PaymentProductSpecificInputs): Promise<PaymentProduct> => {\n      const promise = new Promise<PaymentProduct>();\n      const c2SPaymentProductContext = new C2SPaymentProductContext(_paymentDetails || paymentDetails);\n      _c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(\n        (response) => {\n          _paymentProduct = new PaymentProduct(response);\n          promise.resolve(_paymentProduct);\n        },\n        (reason) => {\n          _paymentProduct = null;\n          promise.reject(reason);\n        }\n      );\n      return promise;\n    };\n\n    this.getPaymentProductGroup = (paymentProductGroupId: string, paymentDetails?: PaymentDetails): Promise<PaymentProductGroup> => {\n      const promise = new Promise<PaymentProductGroup>();\n      const c2SPaymentProductContext = new C2SPaymentProductContext(_paymentDetails || paymentDetails);\n      _c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(\n        (response) => {\n          _paymentProductGroup = new PaymentProductGroup(response);\n          promise.resolve(_paymentProductGroup);\n        },\n        (reason) => {\n          _paymentProductGroup = null;\n          promise.reject(reason);\n        }\n      );\n      return promise;\n    };\n\n    this.getIinDetails = (partialCreditCardNumber: string, paymentDetails?: PaymentDetails | null): Promise<IinDetailsResponse> => {\n      partialCreditCardNumber = partialCreditCardNumber.replace(/ /g, \"\");\n      if (partialCreditCardNumber.length >= 8) {\n        partialCreditCardNumber = partialCreditCardNumber.substring(0, 8);\n      } else {\n        partialCreditCardNumber = partialCreditCardNumber.substring(0, 6);\n      }\n\n      const c2SPaymentProductContext = new C2SPaymentProductContext(_paymentDetails || paymentDetails);\n      return _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\n    };\n\n    this.getPublicKey = (): Promise<PublicKeyResponse> => {\n      return _c2sCommunicator.getPublicKey();\n    };\n\n    this.getPaymentProductNetworks = (paymentProductId: number, paymentDetails: PaymentDetails): Promise<PaymentProductNetworksResponseJSON> => {\n      const promise = new Promise<PaymentProductNetworksResponseJSON>();\n      const c2SPaymentProductContext = new C2SPaymentProductContext(paymentDetails);\n      _c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(\n        (response) => {\n          _paymentDetails = paymentDetails;\n          promise.resolve(response);\n        },\n        (reason) => {\n          promise.reject(reason);\n        }\n      );\n      return promise;\n    };\n\n    this.getPaymentProductDirectory = (paymentProductId: number, currencyCode: string, countryCode: string): Promise<DirectoryJSON> => {\n      return _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\n    };\n\n    this.convertAmount = (amount: number, source: string, target: string): Promise<ConvertAmountJSON> => {\n      return _c2sCommunicator.convertAmount(amount, source, target);\n    };\n\n    this.getPaymentRequest = (): PaymentRequest => {\n      if (!_paymentRequest) {\n        _paymentRequest = new PaymentRequest(_c2SCommunicatorConfiguration.clientSessionId);\n      }\n      return _paymentRequest;\n    };\n\n    this.getEncryptor = (): Encryptor => {\n      const publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\n      return new Encryptor(publicKeyResponsePromise);\n    };\n\n    this.getThirdPartyPaymentStatus = (paymentId: string): Promise<ThirdPartyStatusResponseJSON> => {\n      return _c2sCommunicator.getThirdPartyPaymentStatus(paymentId);\n    };\n\n    this.getCustomerDetails = (paymentProductId: number, paymentDetails: GetCustomerDetailsRequestJSON): Promise<GetCustomerDetailsResponseJSON> => {\n      return _c2sCommunicator.getCustomerDetails(paymentProductId, paymentDetails);\n    };\n\n    this.createPaymentProductSession = (paymentProductId: number, paymentDetails: PaymentProductSessionContext): Promise<CreatePaymentProductSessionResponseJSON> => {\n      return _c2sCommunicator.createPaymentProductSession(paymentProductId, paymentDetails);\n    };\n\n    this.createApplePayPayment = (context: PaymentDetails, paymentProductSpecificInput: ApplePaySpecificInput, networks: string[]): Promise<ApplePayInitResult> => {\n      return _c2sCommunicator.initApplePayPayment(context, paymentProductSpecificInput, networks);\n    };\n\n    this.transformPaymentProductJSON = (json: PaymentProductJSON): PaymentProduct => {\n      return new PaymentProduct(_c2sCommunicator.transformPaymentProductJSON(json));\n    };\n\n    this.transformPaymentProductGroupJSON = (json: PaymentProductGroupJSON): PaymentProductGroup => {\n      return new PaymentProductGroup(_c2sCommunicator.transformPaymentProductJSON(json));\n    };\n  }\n}\n\nexport = session;\n","///<amd-module name=\"connectsdk.core\"/>\n\nimport _AccountOnFile = require(\"./AccountOnFile\");\nimport _AccountOnFileDisplayHints = require(\"./AccountOnFileDisplayHints\");\nimport _ApplePay = require(\"./ApplePay\");\nimport _Attribute = require(\"./Attribute\");\nimport _BasicPaymentItems = require(\"./BasicPaymentItems\");\nimport _BasicPaymentProduct = require(\"./BasicPaymentProduct\");\nimport _BasicPaymentProductGroup = require(\"./BasicPaymentProductGroup\");\nimport _BasicPaymentProductGroups = require(\"./BasicPaymentProductGroups\");\nimport _BasicPaymentProducts = require(\"./BasicPaymentProducts\");\nimport _C2SCommunicator = require(\"./C2SCommunicator\");\nimport _C2SCommunicatorConfiguration = require(\"./C2SCommunicatorConfiguration\");\nimport _C2SPaymentProductContext = require(\"./C2SPaymentProductContext\");\nimport _DataRestrictions = require(\"./DataRestrictions\");\nimport _Encryptor = require(\"./Encryptor\");\nimport _FormElement = require(\"./FormElement\");\nimport _GooglePay = require(\"./GooglePay\");\nimport _IinDetailsResponse = require(\"./IinDetailsResponse\");\nimport _JOSEEncryptor = require(\"./JOSEEncryptor\");\nimport _LabelTemplateElement = require(\"./LabelTemplateElement\");\nimport _MaskedString = require(\"./MaskedString\");\nimport _MaskingUtil = require(\"./MaskingUtil\");\nimport _Net = require(\"./net\");\nimport _PaymentProduct = require(\"./PaymentProduct\");\nimport _PaymentProduct302SpecificData = require(\"./PaymentProduct302SpecificData\");\nimport _PaymentProduct320SpecificData = require(\"./PaymentProduct320SpecificData\");\nimport _PaymentProduct863SpecificData = require(\"./PaymentProduct863SpecificData\");\nimport _PaymentProductField = require(\"./PaymentProductField\");\nimport _PaymentProductFieldDisplayHints = require(\"./PaymentProductFieldDisplayHints\");\nimport _PaymentProductGroup = require(\"./PaymentProductGroup\");\nimport _PaymentRequest = require(\"./PaymentRequest\");\nimport _Promise = require(\"./promise\");\nimport _PublicKeyResponse = require(\"./PublicKeyResponse\");\nimport _session = require(\"./session\");\nimport _Tooltip = require(\"./Tooltip\");\nimport _Util = require(\"./Util\");\nimport _ValidationRuleBoletoBancarioRequiredness = require(\"./ValidationRuleBoletoBancarioRequiredness\");\nimport _ValidationRuleEmailAddress = require(\"./ValidationRuleEmailAddress\");\nimport _ValidationRuleExpirationDate = require(\"./ValidationRuleExpirationDate\");\nimport _ValidationRuleFactory = require(\"./ValidationRuleFactory\");\nimport _ValidationRuleFixedList = require(\"./ValidationRuleFixedList\");\nimport _ValidationRuleIban = require(\"./ValidationRuleIban\");\nimport _ValidationRuleLength = require(\"./ValidationRuleLength\");\nimport _ValidationRuleLuhn = require(\"./ValidationRuleLuhn\");\nimport _ValidationRuleRange = require(\"./ValidationRuleRange\");\nimport _ValidationRuleRegularExpression = require(\"./ValidationRuleRegularExpression\");\nimport _ValidationRuleResidentIdNumber = require(\"./ValidationRuleResidentIdNumber\");\nimport _ValidationRuleTermsAndConditions = require(\"./ValidationRuleTermsAndConditions\");\nimport _ValueMappingElement = require(\"./ValueMappingElement\");\n\nconst connectsdk = {\n  AccountOnFile: _AccountOnFile,\n  AccountOnFileDisplayHints: _AccountOnFileDisplayHints,\n  ApplePay: _ApplePay,\n  Attribute: _Attribute,\n  BasicPaymentItems: _BasicPaymentItems,\n  BasicPaymentProduct: _BasicPaymentProduct,\n  BasicPaymentProductGroup: _BasicPaymentProductGroup,\n  BasicPaymentProductGroups: _BasicPaymentProductGroups,\n  BasicPaymentProducts: _BasicPaymentProducts,\n  C2SCommunicator: _C2SCommunicator,\n  C2SCommunicatorConfiguration: _C2SCommunicatorConfiguration,\n  C2SPaymentProductContext: _C2SPaymentProductContext,\n  DataRestrictions: _DataRestrictions,\n  Encryptor: _Encryptor,\n  FormElement: _FormElement,\n  GooglePay: _GooglePay,\n  IinDetailsResponse: _IinDetailsResponse,\n  JOSEEncryptor: _JOSEEncryptor,\n  LabelTemplateElement: _LabelTemplateElement,\n  MaskedString: _MaskedString,\n  MaskingUtil: _MaskingUtil,\n  net: _Net,\n  get: _Net.get,\n  post: _Net.post,\n  jsonp: _Net.jsonp,\n  PaymentProduct: _PaymentProduct,\n  PaymentProduct302SpecificData: _PaymentProduct302SpecificData,\n  PaymentProduct320SpecificData: _PaymentProduct320SpecificData,\n  PaymentProduct863SpecificData: _PaymentProduct863SpecificData,\n  PaymentProductField: _PaymentProductField,\n  PaymentProductFieldDisplayHints: _PaymentProductFieldDisplayHints,\n  PaymentProductGroup: _PaymentProductGroup,\n  PaymentRequest: _PaymentRequest,\n  Promise: _Promise,\n  PublicKeyResponse: _PublicKeyResponse,\n  Session: _session,\n  Tooltip: _Tooltip,\n  Util: _Util,\n  ValidationRuleBoletoBancarioRequiredness: _ValidationRuleBoletoBancarioRequiredness,\n  ValidationRuleEmailAddress: _ValidationRuleEmailAddress,\n  ValidationRuleExpirationDate: _ValidationRuleExpirationDate,\n  ValidationRuleFactory: _ValidationRuleFactory,\n  ValidationRuleFixedList: _ValidationRuleFixedList,\n  ValidationRuleIban: _ValidationRuleIban,\n  ValidationRuleLength: _ValidationRuleLength,\n  ValidationRuleLuhn: _ValidationRuleLuhn,\n  ValidationRuleRange: _ValidationRuleRange,\n  ValidationRuleRegularExpression: _ValidationRuleRegularExpression,\n  ValidationRuleResidentIdNumber: _ValidationRuleResidentIdNumber,\n  ValidationRuleTermsAndConditions: _ValidationRuleTermsAndConditions,\n  ValueMappingElement: _ValueMappingElement,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst global = (typeof window === \"undefined\" ? this : window) as any;\nglobal.connectsdk = connectsdk;\n\nexport = connectsdk;\n"]}